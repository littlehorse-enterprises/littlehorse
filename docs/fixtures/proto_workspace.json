{
  "files": [
    {
      "name": "acls.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ACLAction",
          "longName": "ACLAction",
          "fullName": "littlehorse.ACLAction",
          "description": "",
          "values": [
            {
              "name": "READ",
              "number": "0",
              "description": ""
            },
            {
              "name": "RUN",
              "number": "1",
              "description": ""
            },
            {
              "name": "WRITE_METADATA",
              "number": "2",
              "description": ""
            },
            {
              "name": "ALL_ACTIONS",
              "number": "3",
              "description": ""
            }
          ]
        },
        {
          "name": "ACLResource",
          "longName": "ACLResource",
          "fullName": "littlehorse.ACLResource",
          "description": "",
          "values": [
            {
              "name": "ACL_WORKFLOW",
              "number": "0",
              "description": ""
            },
            {
              "name": "ACL_TASK",
              "number": "1",
              "description": ""
            },
            {
              "name": "ACL_EXTERNAL_EVENT",
              "number": "2",
              "description": ""
            },
            {
              "name": "ACL_USER_TASK",
              "number": "3",
              "description": ""
            },
            {
              "name": "ACL_PRINCIPAL",
              "number": "4",
              "description": ""
            },
            {
              "name": "ACL_TENANT",
              "number": "5",
              "description": ""
            },
            {
              "name": "ACL_ALL_RESOURCES",
              "number": "6",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "DeletePrincipalRequest",
          "longName": "DeletePrincipalRequest",
          "fullName": "littlehorse.DeletePrincipalRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Principal",
          "longName": "Principal",
          "fullName": "littlehorse.Principal",
          "description": "This is a GlobalGetable.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "Principals are agnostic of the Authentication protocol that you use. In OAuth,\nthe id is retrieved by looking at the claims on the request. In mTLS, the\nid is retrived by looking at the Subject Name of the client certificate.",
              "label": "",
              "type": "PrincipalId",
              "longType": "PrincipalId",
              "fullType": "littlehorse.PrincipalId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "per_tenant_acls",
              "description": "Maps a Tenant ID to a list of ACL's that the Principal has permission to\nexecute *within that Tenant*",
              "label": "repeated",
              "type": "PerTenantAclsEntry",
              "longType": "Principal.PerTenantAclsEntry",
              "fullType": "littlehorse.Principal.PerTenantAclsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "global_acls",
              "description": "Sets permissions that this Principal has *for any Tenant* in the LH Cluster.",
              "label": "",
              "type": "ServerACLs",
              "longType": "ServerACLs",
              "fullType": "littlehorse.ServerACLs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerTenantAclsEntry",
          "longName": "Principal.PerTenantAclsEntry",
          "fullName": "littlehorse.Principal.PerTenantAclsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "ServerACLs",
              "longType": "ServerACLs",
              "fullType": "littlehorse.ServerACLs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutPrincipalRequest",
          "longName": "PutPrincipalRequest",
          "fullName": "littlehorse.PutPrincipalRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "per_tenant_acls",
              "description": "",
              "label": "repeated",
              "type": "PerTenantAclsEntry",
              "longType": "PutPrincipalRequest.PerTenantAclsEntry",
              "fullType": "littlehorse.PutPrincipalRequest.PerTenantAclsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "global_acls",
              "description": "",
              "label": "",
              "type": "ServerACLs",
              "longType": "ServerACLs",
              "fullType": "littlehorse.ServerACLs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "overwrite",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PerTenantAclsEntry",
          "longName": "PutPrincipalRequest.PerTenantAclsEntry",
          "fullName": "littlehorse.PutPrincipalRequest.PerTenantAclsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "ServerACLs",
              "longType": "ServerACLs",
              "fullType": "littlehorse.ServerACLs",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutTenantRequest",
          "longName": "PutTenantRequest",
          "fullName": "littlehorse.PutTenantRequest",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ServerACL",
          "longName": "ServerACL",
          "fullName": "littlehorse.ServerACL",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "resources",
              "description": "",
              "label": "repeated",
              "type": "ACLResource",
              "longType": "ACLResource",
              "fullType": "littlehorse.ACLResource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "allowed_actions",
              "description": "",
              "label": "repeated",
              "type": "ACLAction",
              "longType": "ACLAction",
              "fullType": "littlehorse.ACLAction",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "resource_filter",
              "defaultValue": ""
            },
            {
              "name": "prefix",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "resource_filter",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ServerACLs",
          "longName": "ServerACLs",
          "fullName": "littlehorse.ServerACLs",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "acls",
              "description": "",
              "label": "repeated",
              "type": "ServerACL",
              "longType": "ServerACL",
              "fullType": "littlehorse.ServerACL",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Tenant",
          "longName": "Tenant",
          "fullName": "littlehorse.Tenant",
          "description": "This is a GlobalGetable",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "TenantId",
              "longType": "TenantId",
              "fullType": "littlehorse.TenantId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "Future versions will include quotas on a per-Tenant basis.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "common_enums.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": false,
      "hasServices": false,
      "enums": [
        {
          "name": "LHErrorType",
          "longName": "LHErrorType",
          "fullName": "littlehorse.LHErrorType",
          "description": "This enum is all of the types of technical failure that can occur in a WfRun.",
          "values": [
            {
              "name": "CHILD_FAILURE",
              "number": "0",
              "description": "A child ThreadRun failed with a technical ERROR."
            },
            {
              "name": "VAR_SUB_ERROR",
              "number": "1",
              "description": "Failed substituting input variables into a NodeRun."
            },
            {
              "name": "VAR_MUTATION_ERROR",
              "number": "2",
              "description": "Failed mutating variables after a NodeRun successfully completed."
            },
            {
              "name": "USER_TASK_CANCELLED",
              "number": "3",
              "description": "A UserTaskRun was cancelled (EVOLVING: this will become a Business EXCEPTION)"
            },
            {
              "name": "TIMEOUT",
              "number": "4",
              "description": "A NodeRun failed due to a timeout."
            },
            {
              "name": "TASK_FAILURE",
              "number": "5",
              "description": "A TaskRun failed due to an unexpected error."
            },
            {
              "name": "VAR_ERROR",
              "number": "6",
              "description": "Wrapper for VAR_SUB_ERROR and VAR_MUTATION_ERROR"
            },
            {
              "name": "TASK_ERROR",
              "number": "7",
              "description": "Wrapper for TASK_FALIURE and TIMEOUT"
            },
            {
              "name": "INTERNAL_ERROR",
              "number": "8",
              "description": "An unexpected LittleHorse Internal error occurred. This is not expected to happen."
            }
          ]
        },
        {
          "name": "LHStatus",
          "longName": "LHStatus",
          "fullName": "littlehorse.LHStatus",
          "description": "Status used for WfRun, ThreadRun, and NodeRun",
          "values": [
            {
              "name": "STARTING",
              "number": "0",
              "description": ""
            },
            {
              "name": "RUNNING",
              "number": "1",
              "description": ""
            },
            {
              "name": "COMPLETED",
              "number": "2",
              "description": ""
            },
            {
              "name": "HALTING",
              "number": "3",
              "description": ""
            },
            {
              "name": "HALTED",
              "number": "4",
              "description": ""
            },
            {
              "name": "ERROR",
              "number": "5",
              "description": ""
            },
            {
              "name": "EXCEPTION",
              "number": "6",
              "description": ""
            }
          ]
        },
        {
          "name": "MetadataStatus",
          "longName": "MetadataStatus",
          "fullName": "littlehorse.MetadataStatus",
          "description": "Status of a Metadata Object, such as WfSpec or TaskDef",
          "values": [
            {
              "name": "ACTIVE",
              "number": "0",
              "description": "ACTIVE means the object can be used."
            },
            {
              "name": "ARCHIVED",
              "number": "1",
              "description": "An ARCHIVED WfSpec can no longer be used to create new WfRun's, but\nexisting WfRun's will be allowed to run to completion."
            },
            {
              "name": "TERMINATING",
              "number": "2",
              "description": "A TERMINATING WfSpec is actively deleting all running WfRun's, and will\nself-destruct once all of its child WfRun's are terminated."
            }
          ]
        },
        {
          "name": "MetricsWindowLength",
          "longName": "MetricsWindowLength",
          "fullName": "littlehorse.MetricsWindowLength",
          "description": "Metrics",
          "values": [
            {
              "name": "MINUTES_5",
              "number": "0",
              "description": ""
            },
            {
              "name": "HOURS_2",
              "number": "1",
              "description": ""
            },
            {
              "name": "DAYS_1",
              "number": "2",
              "description": ""
            }
          ]
        },
        {
          "name": "TaskStatus",
          "longName": "TaskStatus",
          "fullName": "littlehorse.TaskStatus",
          "description": "Status of a TaskRun.",
          "values": [
            {
              "name": "TASK_SCHEDULED",
              "number": "0",
              "description": "Scheduled in the Task Queue but not yet picked up by a Task Worker."
            },
            {
              "name": "TASK_RUNNING",
              "number": "1",
              "description": "Picked up by a Task Worker, but not yet reported or timed out."
            },
            {
              "name": "TASK_SUCCESS",
              "number": "2",
              "description": "Successfully completed."
            },
            {
              "name": "TASK_FAILED",
              "number": "3",
              "description": "Task Worker reported a technical failure while attempting to execute the TaskRun"
            },
            {
              "name": "TASK_TIMEOUT",
              "number": "4",
              "description": "Task Worker did not report a result in time."
            },
            {
              "name": "TASK_OUTPUT_SERIALIZING_ERROR",
              "number": "5",
              "description": "Task Worker reported that it was unable to serialize the output of the TaskRun."
            },
            {
              "name": "TASK_INPUT_VAR_SUB_ERROR",
              "number": "6",
              "description": "Task Worker was unable to deserialize the input variables into appropriate language-specific\nobjects to pass into the Task Function"
            },
            {
              "name": "TASK_EXCEPTION",
              "number": "8",
              "description": "Task Function business logic determined that there was a business exception."
            },
            {
              "name": "TASK_PENDING",
              "number": "9",
              "description": "Refers to a TaskAttempt that is not yet scheduled. This happens when using retries\nwith an ExponentialBackoffRetryPolicy: the TaskAttempt isn't supposed to be scheduled\nuntil it \"matures\", but it does already exist."
            }
          ]
        },
        {
          "name": "VariableType",
          "longName": "VariableType",
          "fullName": "littlehorse.VariableType",
          "description": "Type of a Varaible in LittleHorse. Corresponds to the possible value type's of a\nVariableValue.",
          "values": [
            {
              "name": "JSON_OBJ",
              "number": "0",
              "description": "An object represented as a json string."
            },
            {
              "name": "JSON_ARR",
              "number": "1",
              "description": "A list represented as a json array string."
            },
            {
              "name": "DOUBLE",
              "number": "2",
              "description": "A 64-bit floating point number."
            },
            {
              "name": "BOOL",
              "number": "3",
              "description": "A boolean"
            },
            {
              "name": "STR",
              "number": "4",
              "description": "A string"
            },
            {
              "name": "INT",
              "number": "5",
              "description": "A 64-bit integer"
            },
            {
              "name": "BYTES",
              "number": "6",
              "description": "A byte array"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [],
      "services": []
    },
    {
      "name": "common_wfspec.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "Comparator",
          "longName": "Comparator",
          "fullName": "littlehorse.Comparator",
          "description": "Operator for comparing two values to create a boolean expression.",
          "values": [
            {
              "name": "LESS_THAN",
              "number": "0",
              "description": "Equivalent to `\u003c`. Only valid for primitive types (no JSON_OBJ or JSON_ARR)."
            },
            {
              "name": "GREATER_THAN",
              "number": "1",
              "description": "Equivalent to `\u003e`. Only valid for primitive types (no JSON_OBJ or JSON_ARR)."
            },
            {
              "name": "LESS_THAN_EQ",
              "number": "2",
              "description": "Equivalent to `\u003c=`. Only valid for primitive types (no JSON_OBJ or JSON_ARR)."
            },
            {
              "name": "GREATER_THAN_EQ",
              "number": "3",
              "description": "Equivalent to `\u003e=`. Only valid for primitive types (no JSON_OBJ or JSON_ARR)."
            },
            {
              "name": "EQUALS",
              "number": "4",
              "description": "This is valid for any variable type, and is similar to .equals() in Java.\n\nOne note: if the RHS is a different type from the LHS, then LittleHorse will\ntry to cast the RHS to the same type as the LHS. If the cast fails, then the\nThreadRun fails with a VAR_SUB_ERROR."
            },
            {
              "name": "NOT_EQUALS",
              "number": "5",
              "description": "This is the inverse of `EQUALS`"
            },
            {
              "name": "IN",
              "number": "6",
              "description": "Only valid if the RHS is a JSON_OBJ or JSON_ARR. Valid for any type on the LHS.\n\nFor the JSON_OBJ type, this returns true if the LHS is equal to a *KEY* in the\nRHS. For the JSON_ARR type, it returns true if one of the elements of the RHS\nis equal to the LHS."
            },
            {
              "name": "NOT_IN",
              "number": "7",
              "description": "The inverse of IN."
            }
          ]
        },
        {
          "name": "UTHook",
          "longName": "UTActionTrigger.UTHook",
          "fullName": "littlehorse.UTActionTrigger.UTHook",
          "description": "Enumerates the different lifecycle hooks that can cause the timer to start running.",
          "values": [
            {
              "name": "ON_ARRIVAL",
              "number": "0",
              "description": "The hook should be scheduled `delay_seconds` after the UserTaskRun is created. This\nhook only causes the action to be scheduled once."
            },
            {
              "name": "ON_TASK_ASSIGNED",
              "number": "1",
              "description": "The hook should be scheduled `delay_seconds` after the ownership of the UserTaskRun\nchanges. This hook causes the Action to be scheduled one or more times. The first\ntime is scheduled when the UserTaskRun is created, since we treat the change from\n\"UserTaskRun is nonexistent\" to \"UserTaskRun is owned by a userId or userGroup\" as\na change in ownership."
            }
          ]
        },
        {
          "name": "VariableMutationType",
          "longName": "VariableMutationType",
          "fullName": "littlehorse.VariableMutationType",
          "description": "Enumerates the available operations to mutate a variable in a WfRun.",
          "values": [
            {
              "name": "ASSIGN",
              "number": "0",
              "description": "Set the variable specified by the LHS to the value of the RHS."
            },
            {
              "name": "ADD",
              "number": "1",
              "description": "Add the RHS to the LHS."
            },
            {
              "name": "EXTEND",
              "number": "2",
              "description": "Append the RHS to the LHS (valid if the LHS is a STR or JSON_ARR)"
            },
            {
              "name": "SUBTRACT",
              "number": "3",
              "description": "Subtract the RHS from the LHS (both must be INT or DOUBLE)"
            },
            {
              "name": "MULTIPLY",
              "number": "4",
              "description": "Multiply the LHS by the RHS (both must be INT or DOUBLE)"
            },
            {
              "name": "DIVIDE",
              "number": "5",
              "description": "Divide the LHS by the RHS (both must be INT or DOUBLE)"
            },
            {
              "name": "REMOVE_IF_PRESENT",
              "number": "6",
              "description": "Remove any occurrences of RHS from LHS (LHS must be JSON_ARR)"
            },
            {
              "name": "REMOVE_INDEX",
              "number": "7",
              "description": "Remove item at index RHS from LHS (LHS must be JSON_ARR)"
            },
            {
              "name": "REMOVE_KEY",
              "number": "8",
              "description": "Remove the key specified by RHS from the LHS (LHS must be JSON_OBJ)"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "ExponentialBackoffRetryPolicy",
          "longName": "ExponentialBackoffRetryPolicy",
          "fullName": "littlehorse.ExponentialBackoffRetryPolicy",
          "description": "Defines an Exponential backoff policy for TaskRun retries. The delay for a retry\nattempt `N` is defined as:\n\nmin(base_interval_ms * (multiplier ^(N-1)), max_delay_ms)\n\nNote that timers in LittleHorse have a resolution of about 500-1000 milliseconds,\nso timing is not exact.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "base_interval_ms",
              "description": "Base delay in ms for the first retry. Note that in LittleHorse, timers have a\nresolution of 500-1000 milliseconds. Must be greater than zero.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "max_delay_ms",
              "description": "Maximum delay in milliseconds between retries.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "multiplier",
              "description": "The multiplier to use in calculating the retry backoff policy. We recommend\nstarting with 2.0. Must be at least 1.0.",
              "label": "",
              "type": "float",
              "longType": "float",
              "fullType": "float",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskNode",
          "longName": "TaskNode",
          "fullName": "littlehorse.TaskNode",
          "description": "Defines a TaskRun execution. Used in a Node and also in the UserTask Trigger Actions.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task_def_id",
              "description": "",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "task_to_execute",
              "defaultValue": ""
            },
            {
              "name": "dynamic_task",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "task_to_execute",
              "defaultValue": ""
            },
            {
              "name": "timeout_seconds",
              "description": "How long until LittleHorse determines that the Task Worker had a technical ERROR if\nthe worker does not yet reply to the Server. This is determined on a per-Attempt\nbasis.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retries",
              "description": "Configures the amount of retries allowed on this TaskNode.\n\nRetryable errors include:\n- TASK_TIMEOUT: the TaskRun was started but the scheduler didn't hear back from the\n  Task Worker in time.\n- TASK_FAILED: the Task Worker reported an unexpected *technical* ERROR when executing\n  the Task Function.\n\nOther result codes are not retryable (including TASK_OUTPUT_SERIALIZING_ERROR,\nTASK_INPUT_VAR_SUB_ERROR, and TASK_EXCEPTION).",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exponential_backoff",
              "description": "If this field is set, then retries will use Exponential Backoff.",
              "label": "optional",
              "type": "ExponentialBackoffRetryPolicy",
              "longType": "ExponentialBackoffRetryPolicy",
              "fullType": "littlehorse.ExponentialBackoffRetryPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_exponential_backoff",
              "defaultValue": ""
            },
            {
              "name": "variables",
              "description": "Input variables into the TaskDef.",
              "label": "repeated",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTActionTrigger",
          "longName": "UTActionTrigger",
          "fullName": "littlehorse.UTActionTrigger",
          "description": "A UTActionTrigger triggers an action upon certain lifecycle hooks\nin a User Task. Actions include:\n- re-assign the User Task Run\n- cancel the User Task Run\n- execute a Reminder Task\n\nHooks include:\n- Upon creation of the UserTaskRun\n- Upon rescheduling the UserTaskRun",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task",
              "description": "",
              "label": "",
              "type": "UTATask",
              "longType": "UTActionTrigger.UTATask",
              "fullType": "littlehorse.UTActionTrigger.UTATask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "cancel",
              "description": "",
              "label": "",
              "type": "UTACancel",
              "longType": "UTActionTrigger.UTACancel",
              "fullType": "littlehorse.UTActionTrigger.UTACancel",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "reassign",
              "description": "later on, might enable scheduling entire ThreadRuns",
              "label": "",
              "type": "UTAReassign",
              "longType": "UTActionTrigger.UTAReassign",
              "fullType": "littlehorse.UTActionTrigger.UTAReassign",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "action",
              "defaultValue": ""
            },
            {
              "name": "delay_seconds",
              "description": "The Action is triggered some time after the Hook matures. The delay is controlled\nby this field.",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "hook",
              "description": "The hook on which this UserTaskAction is scheduled.",
              "label": "",
              "type": "UTHook",
              "longType": "UTActionTrigger.UTHook",
              "fullType": "littlehorse.UTActionTrigger.UTHook",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTACancel",
          "longName": "UTActionTrigger.UTACancel",
          "fullName": "littlehorse.UTActionTrigger.UTACancel",
          "description": "A UserTaskAction that causes a UserTaskRun to be CANCELLED when it fires.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "UTAReassign",
          "longName": "UTActionTrigger.UTAReassign",
          "fullName": "littlehorse.UTActionTrigger.UTAReassign",
          "description": "A UserTaskAction that causes a UserTaskRun to be reassigned when it fires.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "user_id",
              "description": "A variable assignment that resolves to a STR representing the new user_id. If\nnot set, the user_id of the UserTaskRun will be un-set.",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "A variable assignment that resolves to a STR representing the new user_group. If\nnot set, the user_group of the UserTaskRun will be un-set.",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTATask",
          "longName": "UTActionTrigger.UTATask",
          "fullName": "littlehorse.UTActionTrigger.UTATask",
          "description": "A UserTaskAction that causes a TaskRun to be scheduled when it fires.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task",
              "description": "The specification of the Task to schedule.",
              "label": "",
              "type": "TaskNode",
              "longType": "TaskNode",
              "fullType": "littlehorse.TaskNode",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "mutations",
              "description": "EXPERIMENTAL: Any variables in the ThreadRun which we should mutate.",
              "label": "repeated",
              "type": "VariableMutation",
              "longType": "VariableMutation",
              "fullType": "littlehorse.VariableMutation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableAssignment",
          "longName": "VariableAssignment",
          "fullName": "littlehorse.VariableAssignment",
          "description": "A VariableAssignment is used within a WfSpec to determine how a value should be\nassigned in the context of a specific WfRun. For example, in a TASK node, you\nuse a VariableAssignment for each input parameter to determine how the value\nis set.\n\nNote that the VariableAssignment is normally handled by the SDK; you shouldn't\nhave to worry about this in daily LittleHorse usage.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "json_path",
              "description": "If you provide a `variable_name` and the specified variable is JSON_OBJ or\nJSON_ARR type, then you may also provide a json_path which makes the VariableAssignment\nresolve to the specified field.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_json_path",
              "defaultValue": ""
            },
            {
              "name": "variable_name",
              "description": "Assign the value from a variable.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            },
            {
              "name": "literal_value",
              "description": "Assign a literal value",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            },
            {
              "name": "format_string",
              "description": "Assign a format string",
              "label": "",
              "type": "FormatString",
              "longType": "VariableAssignment.FormatString",
              "fullType": "littlehorse.VariableAssignment.FormatString",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "source",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FormatString",
          "longName": "VariableAssignment.FormatString",
          "fullName": "littlehorse.VariableAssignment.FormatString",
          "description": "A FormatString formats a template String with values from the WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "format",
              "description": "A VariableAssignment which must resolve to a String that has format args.\nA valid string is \"This is a format string with three args: {0}, {1}, {2}\"",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "args",
              "description": "VariableAssignments which fill out the args.",
              "label": "repeated",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableDef",
          "longName": "VariableDef",
          "fullName": "littlehorse.VariableDef",
          "description": "Declares a Variable.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "The Type of the variable.",
              "label": "",
              "type": "VariableType",
              "longType": "VariableType",
              "fullType": "littlehorse.VariableType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "The name of the variable.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "default_value",
              "description": "Optional default value if the variable isn't set; for example, in a ThreadRun\nif you start a ThreadRun or WfRun without passing a variable in, then this is\nused.",
              "label": "optional",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_default_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableMutation",
          "longName": "VariableMutation",
          "fullName": "littlehorse.VariableMutation",
          "description": "A VariableMutation defines a modification made to one of a ThreadRun's variables.\nThe LHS determines the variable that is modified; the operation determines how\nit is modified, and the RHS is the input to the operation.\n\nDay-to-day users of LittleHorse generally don't interact with this structure unless\nthey are writing their own WfSpec SDK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "lhs_name",
              "description": "The name of the variable to mutate",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "lhs_json_path",
              "description": "For JSON_ARR and JSON_OBJ variables, this allows you to optionally mutate\na specific sub-field of the variable.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_lhs_json_path",
              "defaultValue": ""
            },
            {
              "name": "operation",
              "description": "Defines the operation that we are executing.",
              "label": "",
              "type": "VariableMutationType",
              "longType": "VariableMutationType",
              "fullType": "littlehorse.VariableMutationType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source_variable",
              "description": "Set the source_variable as the RHS to use another variable from the workflow to\nas the RHS/",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "rhs_value",
              "defaultValue": ""
            },
            {
              "name": "literal_value",
              "description": "Use a literal value as the RHS.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "rhs_value",
              "defaultValue": ""
            },
            {
              "name": "node_output",
              "description": "Use the output of the current node as the RHS.",
              "label": "",
              "type": "NodeOutputSource",
              "longType": "VariableMutation.NodeOutputSource",
              "fullType": "littlehorse.VariableMutation.NodeOutputSource",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "rhs_value",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeOutputSource",
          "longName": "VariableMutation.NodeOutputSource",
          "fullName": "littlehorse.VariableMutation.NodeOutputSource",
          "description": "Specifies to use the output of a NodeRun as the RHS.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "jsonpath",
              "description": "Use this specific field from a JSON output",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_jsonpath",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "external_event.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ExternalEvent",
          "longName": "ExternalEvent",
          "fullName": "littlehorse.ExternalEvent",
          "description": "An ExternalEvent represents A Thing That Happened outside the context of a WfRun.\nGenerally, an ExternalEvent is used to represent a document getting signed, an incident\nbeing resolved, an order being fulfilled, etc.\n\nExternalEvent's are created via the 'rpc PutExternalEvent'\n\nFor more context on ExternalEvents, check our documentation here:\nhttps://littlehorse.dev/docs/concepts/external-events",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the ExternalEvent. This contains WfRunId, ExternalEventDefId,\nand a unique guid which can be used for idempotency of the `PutExternalEvent`\nrpc call.",
              "label": "",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "The time the ExternalEvent was registered with LittleHorse.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "The payload of this ExternalEvent.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "If the ExternalEvent was claimed by a specific ThreadRun (via Interrupt or\nEXTERNAL_EVENT Node), this is set to the number of the relevant ThreadRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_thread_run_number",
              "defaultValue": ""
            },
            {
              "name": "node_run_position",
              "description": "If the ExternalEvent was claimed by a specific ThreadRun (via EXTERNAL_EVENT\nNode; note that in the case of an Interrupt the node_run_position will never\nbe set), this is set to the number of the relevant NodeRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_run_position",
              "defaultValue": ""
            },
            {
              "name": "claimed",
              "description": "Whether the ExternalEvent has been claimed by a WfRun.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventDef",
          "longName": "ExternalEventDef",
          "fullName": "littlehorse.ExternalEventDef",
          "description": "The ExternalEventDef defines the blueprint for an ExternalEvent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The id of the ExternalEventDef.",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "When the ExternalEventDef was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retention_policy",
              "description": "The retention policy for ExternalEvent's of this ExternalEventDef. This applies to the\nExternalEvent **only before** it is matched with a WfRun.",
              "label": "",
              "type": "ExternalEventRetentionPolicy",
              "longType": "ExternalEventRetentionPolicy",
              "fullType": "littlehorse.ExternalEventRetentionPolicy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventRetentionPolicy",
          "longName": "ExternalEventRetentionPolicy",
          "fullName": "littlehorse.ExternalEventRetentionPolicy",
          "description": "Policy to determine how long an ExternalEvent is retained after creation if it\nis not yet claimed by a WfRun. Note that once a WfRun has been matched with the\nExternalEvent, the ExternalEvent is deleted if/when that WfRun is deleted.\nIf not set, then ExternalEvent's are not deleted if they are not matched with\na WfRun.\n\nA future version of LittleHorse will allow changing the retention_policy, which\nwill trigger a cleanup of old `ExternalEvent`s.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "seconds_after_put",
              "description": "Delete such an ExternalEvent X seconds after it has been registered if it\nhas not yet been claimed by a WfRun.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext_evt_gc_policy",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "node_run.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "WaitingThreadStatus",
          "longName": "WaitForThreadsRun.WaitingThreadStatus",
          "fullName": "littlehorse.WaitForThreadsRun.WaitingThreadStatus",
          "description": "The status of a single ThreadRun that we are waiting for.",
          "values": [
            {
              "name": "THREAD_IN_PROGRESS",
              "number": "0",
              "description": "The ThreadRun is in progress (i.e. not COMPLETED nor EXCEPTION nor ERROR)"
            },
            {
              "name": "THREAD_HANDLING_FAILURE",
              "number": "1",
              "description": "The ThreadRun failed with some failure, and the FailureHandler is running\nfor that Failure."
            },
            {
              "name": "THREAD_COMPLETED_OR_FAILURE_HANDLED",
              "number": "2",
              "description": "We can mark this ThreadRun as \"already waited for\", meaning that either:\n1. It completed successfully, OR\n2. It failed, and the Failure Handler successfully completed"
            },
            {
              "name": "THREAD_UNSUCCESSFUL",
              "number": "3",
              "description": "The ThreadRun did not complete successfully, and there wasn't a successful\nrun of a Failure Handler for the Failure that was thrown."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "EntrypointRun",
          "longName": "EntrypointRun",
          "fullName": "littlehorse.EntrypointRun",
          "description": "The sub-node structure for an ENTRYPOINT NodeRun. Currently Empty.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ExitRun",
          "longName": "ExitRun",
          "fullName": "littlehorse.ExitRun",
          "description": "The sub-node structure for an EXIT NodeRun. Currently Empty, will contain info\nabout ThreadRun Outputs once those are added in the future.",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ExternalEventRun",
          "longName": "ExternalEventRun",
          "fullName": "littlehorse.ExternalEventRun",
          "description": "The sub-node structure for an EXTERNAL_EVENT NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_def_id",
              "description": "The ExternalEventDefId that we are waiting for.",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_time",
              "description": "The time that the ExternalEvent arrived. Unset if still waiting.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_event_time",
              "defaultValue": ""
            },
            {
              "name": "external_event_id",
              "description": "The ExternalEventId of the ExternalEvent. Unset if still waiting.",
              "label": "optional",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_external_event_id",
              "defaultValue": ""
            },
            {
              "name": "timed_out",
              "description": "Whether we had a timeout while waiting for the ExternalEvent to come.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Failure",
          "longName": "Failure",
          "fullName": "littlehorse.Failure",
          "description": "Denotes a failure that happened during execution of a NodeRun or the outgoing\nedges.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "failure_name",
              "description": "The name of the failure. LittleHorse has certain built-in failures, all named in\nUPPER_UNDERSCORE_CASE. Such failures correspond with the `LHStatus.ERROR`.\n\nAny Failure named in `kebab-case` is a user-defined business `EXCEPTION`, treated\nas an `LHStatus.EXCEPTION`.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "The human-readable message associated with this Failure.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "A user-defined Failure can have a value; for example, in Java an Exception is an\nObject with arbitrary properties and behaviors.\n\nFuture versions of LH will allow FailureHandler threads to accept that value as\nan input variable.",
              "label": "optional",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content",
              "defaultValue": ""
            },
            {
              "name": "was_properly_handled",
              "description": "A boolean denoting whether a Failure Handler ThreadRun properly handled the Failure.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failure_handler_threadrun_id",
              "description": "If there is a defined failure handler for the NodeRun, then this field is set to the\nid of the failure handler thread run.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_failure_handler_threadrun_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeRun",
          "longName": "NodeRun",
          "fullName": "littlehorse.NodeRun",
          "description": "A NodeRun is a running instance of a Node in a ThreadRun. Note that a NodeRun\nis a Getable object, meaning it can be retried from the LittleHorse grpc API.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the NodeRun. Note that the NodeRunId contains the WfRunId, the\nThreadRun's number, and the position of the NodeRun within that ThreadRun.",
              "label": "",
              "type": "NodeRunId",
              "longType": "NodeRunId",
              "fullType": "littlehorse.NodeRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_id",
              "description": "The ID of the WfSpec that this NodeRun is from. This is not _always_ the same\nas the ThreadRun it belongs to because of the upcoming WfSpec Version Migration\nfeature.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failure_handler_ids",
              "description": "A list of all ThreadRun's that ran to handle a failure thrown by this NodeRun.",
              "label": "repeated",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of this NodeRun.",
              "label": "",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "arrival_time",
              "description": "The time the ThreadRun arrived at this NodeRun.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "The time the NodeRun was terminated (failed or completed).",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_time",
              "defaultValue": ""
            },
            {
              "name": "thread_spec_name",
              "description": "The name of the ThreadSpec to which this NodeRun belongs.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_name",
              "description": "The name of the Node in the ThreadSpec that this NodeRun belongs to.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "error_message",
              "description": "A human-readable error message intended to help developers diagnose WfSpec\nproblems.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error_message",
              "defaultValue": ""
            },
            {
              "name": "failures",
              "description": "A list of Failures thrown by this NodeRun.",
              "label": "repeated",
              "type": "Failure",
              "longType": "Failure",
              "fullType": "littlehorse.Failure",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task",
              "description": "Denotes a TASK node, which runs a TaskRun.",
              "label": "",
              "type": "TaskNodeRun",
              "longType": "TaskNodeRun",
              "fullType": "littlehorse.TaskNodeRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "external_event",
              "description": "An EXTERNAL_EVENT node blocks until an ExternalEvent arrives.",
              "label": "",
              "type": "ExternalEventRun",
              "longType": "ExternalEventRun",
              "fullType": "littlehorse.ExternalEventRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "entrypoint",
              "description": "An ENTRYPOINT node is the first thing that runs in a ThreadRun.",
              "label": "",
              "type": "EntrypointRun",
              "longType": "EntrypointRun",
              "fullType": "littlehorse.EntrypointRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "exit",
              "description": "An EXIT node completes a ThreadRun.",
              "label": "",
              "type": "ExitRun",
              "longType": "ExitRun",
              "fullType": "littlehorse.ExitRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "start_thread",
              "description": "A START_THREAD node starts a child ThreadRun.",
              "label": "",
              "type": "StartThreadRun",
              "longType": "StartThreadRun",
              "fullType": "littlehorse.StartThreadRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "wait_threads",
              "description": "A WAIT_THREADS node waits for one or more child ThreadRun's to complete.",
              "label": "",
              "type": "WaitForThreadsRun",
              "longType": "WaitForThreadsRun",
              "fullType": "littlehorse.WaitForThreadsRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "sleep",
              "description": "A SLEEP node makes the ThreadRun block for a certain amount of time.",
              "label": "",
              "type": "SleepNodeRun",
              "longType": "SleepNodeRun",
              "fullType": "littlehorse.SleepNodeRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "user_task",
              "description": "A USER_TASK node waits until a human executes some work and reports the result.",
              "label": "",
              "type": "UserTaskNodeRun",
              "longType": "UserTaskNodeRun",
              "fullType": "littlehorse.UserTaskNodeRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "start_multiple_threads",
              "description": "A START_MULTIPLE_THREADS node iterates over a JSON_ARR variable and spawns a\nchild ThreadRun for each element in the list.",
              "label": "",
              "type": "StartMultipleThreadsRun",
              "longType": "StartMultipleThreadsRun",
              "fullType": "littlehorse.StartMultipleThreadsRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            },
            {
              "name": "throw_event",
              "description": "",
              "label": "",
              "type": "ThrowEventNodeRun",
              "longType": "ThrowEventNodeRun",
              "fullType": "littlehorse.ThrowEventNodeRun",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node_type",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SleepNodeRun",
          "longName": "SleepNodeRun",
          "fullName": "littlehorse.SleepNodeRun",
          "description": "The sub-node structure for a SLEEP NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "maturation_time",
              "description": "The time at which the NodeRun is *SCHEDULED TO* wake up. In rare cases, if\nthe LH Server is back-pressuring clients due to extreme load, the timer\nevent which marks the sleep node as \"matured\" may come in slightly late.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "matured",
              "description": "Whether the SleepNodeRun has been matured.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StartMultipleThreadsRun",
          "longName": "StartMultipleThreadsRun",
          "fullName": "littlehorse.StartMultipleThreadsRun",
          "description": "The sub-node structure for a START_MULTIPLE_THREADS NodeRun.\n\nNote: the output of this NodeRun, which can be used to mutate Variables,\nis a JSON_ARR variable containing the ID's of all the child threadRuns.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "thread_spec_name",
              "description": "The thread_spec_name of the child thread_runs.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "child_thread_ids",
              "description": "The list of all created child ThreadRun's",
              "label": "repeated",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StartThreadRun",
          "longName": "StartThreadRun",
          "fullName": "littlehorse.StartThreadRun",
          "description": "The sub-node structure for a START_THREAD NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "child_thread_id",
              "description": "Contains the thread_run_number of the created Child ThreadRun, if it has\nbeen created already.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_child_thread_id",
              "defaultValue": ""
            },
            {
              "name": "thread_spec_name",
              "description": "The thread_spec_name of the child thread_run.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskNodeRun",
          "longName": "TaskNodeRun",
          "fullName": "littlehorse.TaskNodeRun",
          "description": "The sub-node structure for a TASK NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task_run_id",
              "description": "The ID of the TaskRun. Note that if the ThreadRun was halted when it arrived\nat this TASK Node, then the task_run_id will be unset.",
              "label": "optional",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_task_run_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThrowEventNodeRun",
          "longName": "ThrowEventNodeRun",
          "fullName": "littlehorse.ThrowEventNodeRun",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "workflow_event_id",
              "description": "",
              "label": "",
              "type": "WorkflowEventId",
              "longType": "WorkflowEventId",
              "fullType": "littlehorse.WorkflowEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskNodeRun",
          "longName": "UserTaskNodeRun",
          "fullName": "littlehorse.UserTaskNodeRun",
          "description": "The sub-node structure for a USER_TASK NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "user_task_run_id",
              "description": "The ID of the UserTaskRun. Note that if the ThreadRun was halted when it arrived\nat this USER_TASK node, then the user_task_run_id will be unset.",
              "label": "optional",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_task_run_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WaitForThreadsRun",
          "longName": "WaitForThreadsRun",
          "fullName": "littlehorse.WaitForThreadsRun",
          "description": "The sub-node structure for a WAIT_FOR_THREADS NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "threads",
              "description": "The threads that are being waited for.",
              "label": "repeated",
              "type": "WaitForThread",
              "longType": "WaitForThreadsRun.WaitForThread",
              "fullType": "littlehorse.WaitForThreadsRun.WaitForThread",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WaitForThread",
          "longName": "WaitForThreadsRun.WaitForThread",
          "fullName": "littlehorse.WaitForThreadsRun.WaitForThread",
          "description": "A 'WaitForThread' structure defines a thread that is being waited for.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "thread_end_time",
              "description": "The time at which the ThreadRun ended (successfully or not). Not set if the ThreadRun\nis still RUNNING, HALTED, or HALTING.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_thread_end_time",
              "defaultValue": ""
            },
            {
              "name": "thread_status",
              "description": "The current status of the ThreadRun being waited for.",
              "label": "",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "The number of the ThreadRun being waited for.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "waiting_status",
              "description": "The \"waiting status\" of this specific thread: whether it's still running,\nalready done, handling a failure, or completely failed.",
              "label": "",
              "type": "WaitingThreadStatus",
              "longType": "WaitForThreadsRun.WaitingThreadStatus",
              "fullType": "littlehorse.WaitForThreadsRun.WaitingThreadStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failure_handler_thread_run_id",
              "description": "If there is a failure on the ThreadRun, and we have a failure handler defined\nfor it, then we will start a failure handler for this threadrun. This field\nis the id of that threadRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_failure_handler_thread_run_id",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "object_id.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "ExternalEventDefId",
          "longName": "ExternalEventDefId",
          "fullName": "littlehorse.ExternalEventDefId",
          "description": "ID for ExternalEventDef",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "ExternalEventDef's are uniquedly identified by their name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventId",
          "longName": "ExternalEventId",
          "fullName": "littlehorse.ExternalEventId",
          "description": "ID for an ExternalEvent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "WfRunId for the ExternalEvent. Note that every ExternalEvent is associated\nwith a WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "external_event_def_id",
              "description": "The ExternalEventDef for this ExternalEvent.",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "guid",
              "description": "A unique guid allowing for distinguishing this ExternalEvent from other events\nof the same ExternalEventDef and WfRun.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeRunId",
          "longName": "NodeRunId",
          "fullName": "littlehorse.NodeRunId",
          "description": "ID for a NodeRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "ID of the WfRun for this NodeRun. Note that every NodeRun is associated with\na WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "ThreadRun of this NodeRun. Note that each NodeRun belongs to a ThreadRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "position",
              "description": "Position of this NodeRun within its ThreadRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PrincipalId",
          "longName": "PrincipalId",
          "fullName": "littlehorse.PrincipalId",
          "description": "ID for a Principal.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The id of this principal. In OAuth, this is the OAuth Client ID (for\nmachine principals) or the OAuth User Id (for human principals).",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskDefId",
          "longName": "TaskDefId",
          "fullName": "littlehorse.TaskDefId",
          "description": "ID for a TaskDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "TaskDef's are uniquely identified by their name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskDefMetricsId",
          "longName": "TaskDefMetricsId",
          "fullName": "littlehorse.TaskDefMetricsId",
          "description": "ID for a specific window of TaskDef metrics.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "window_start",
              "description": "The timestamp at which this metrics window starts.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_type",
              "description": "The length of this window.",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_id",
              "description": "The TaskDefId that this metrics window reports on.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskRunId",
          "longName": "TaskRunId",
          "fullName": "littlehorse.TaskRunId",
          "description": "ID for a TaskRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "WfRunId for this TaskRun. Note that every TaskRun is associated with\na WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_guid",
              "description": "Unique identifier for this TaskRun. Unique among the WfRun.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskWorkerGroupId",
          "longName": "TaskWorkerGroupId",
          "fullName": "littlehorse.TaskWorkerGroupId",
          "description": "ID for a TaskWorkerGroup.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_def_id",
              "description": "TaskWorkerGroups are uniquely identified by their TaskDefId.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TenantId",
          "longName": "TenantId",
          "fullName": "littlehorse.TenantId",
          "description": "ID for a Tenant.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The Tenant ID.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskDefId",
          "longName": "UserTaskDefId",
          "fullName": "littlehorse.UserTaskDefId",
          "description": "ID for a UserTaskDef",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of a UserTaskDef",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "Note that UserTaskDef's use simple versioning.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskRunId",
          "longName": "UserTaskRunId",
          "fullName": "littlehorse.UserTaskRunId",
          "description": "ID for a UserTaskRun",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "WfRunId for this UserTaskRun. Note that every UserTaskRun is associated\nwith a WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_task_guid",
              "description": "Unique identifier for this UserTaskRun.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableId",
          "longName": "VariableId",
          "fullName": "littlehorse.VariableId",
          "description": "Id for a Variable.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "WfRunId for the variable. Note that every Variable is associated with\na WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "Each Variable is owned by a specific ThreadRun inside the WfRun it belongs\nto. This is that ThreadRun's number.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "The name of the variable.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfRunId",
          "longName": "WfRunId",
          "fullName": "littlehorse.WfRunId",
          "description": "ID for a WfRun",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID for this WfRun instance.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parent_wf_run_id",
              "description": "A WfRun may have a parent WfRun. If so, this field is set to the parent's ID.",
              "label": "optional",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_wf_run_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecId",
          "longName": "WfSpecId",
          "fullName": "littlehorse.WfSpecId",
          "description": "The ID of a WfSpec.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "Name of the WfSpec.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "major_version",
              "description": "Major Version of a WfSpec.\n\nNote that WfSpec's are versioned. Creating a new WfSpec with the same name\nand no breaking changes to the public Variables API results in a new WfSpec\nbeing created with the same MajorVersion and a new revision. Creating a\nWfSpec with a breaking change to the public Variables API results in a\nnew WfSpec being created with the same name, an incremented major_version,\nand revision = 0.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "revision",
              "description": "Revision of a WfSpec.\n\nNote that WfSpec's are versioned. Creating a new WfSpec with the same name\nand no breaking changes to the public Variables API results in a new WfSpec\nbeing created with the same MajorVersion and a new revision. Creating a\nWfSpec with a breaking change to the public Variables API results in a\nnew WfSpec being created with the same name, an incremented major_version,\nand revision = 0.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecMetricsId",
          "longName": "WfSpecMetricsId",
          "fullName": "littlehorse.WfSpecMetricsId",
          "description": "ID for a specific window of WfSpec metrics.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "window_start",
              "description": "The timestamp at which this metrics window starts.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_type",
              "description": "The length of this window.",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_id",
              "description": "The WfSpecId that this metrics window reports on.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WorkflowEventDefId",
          "longName": "WorkflowEventDefId",
          "fullName": "littlehorse.WorkflowEventDefId",
          "description": "ID for a WorkflowEventDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the WorkflowEventDef",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WorkflowEventId",
          "longName": "WorkflowEventId",
          "fullName": "littlehorse.WorkflowEventId",
          "description": "An ID for a WorkflowEvent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The Id of the WfRun that threw the event.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "workflow_event_def_id",
              "description": "The ID of the WorkflowEventDef that this WorkflowEvent is a member of.",
              "label": "",
              "type": "WorkflowEventDefId",
              "longType": "WorkflowEventDefId",
              "fullType": "littlehorse.WorkflowEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number",
              "description": "A sequence number that makes the WorkflowEventId unique among all WorkflowEvent's of the\nsame type thrown by the WfRun. This field starts at zero and is incremented every\ntime a WorkflowEvent of the same type is thrown by the same WfRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "service.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": true,
      "enums": [
        {
          "name": "AllowedUpdateType",
          "longName": "AllowedUpdateType",
          "fullName": "littlehorse.AllowedUpdateType",
          "description": "This enum controls the behavior of a PutWfSpecRequest when a WfSpec with the same\nname previously exists.",
          "values": [
            {
              "name": "ALL_UPDATES",
              "number": "0",
              "description": "Allows any update: both minor (revsion) changes and breaking (majorVersion) changes\nare accepted"
            },
            {
              "name": "MINOR_REVISION_UPDATES",
              "number": "1",
              "description": "Allows only backwards-compatible changes that do not change the required input variables\nor the searchable variables in the WfSpec."
            },
            {
              "name": "NO_UPDATES",
              "number": "2",
              "description": "Rejects any changes to the WfSpec."
            }
          ]
        },
        {
          "name": "NodeType",
          "longName": "SearchNodeRunRequest.NodeType",
          "fullName": "littlehorse.SearchNodeRunRequest.NodeType",
          "description": "This enum denotes the type of a NodeRun.",
          "values": [
            {
              "name": "TASK",
              "number": "0",
              "description": "TASK node schedules a TaskRun"
            },
            {
              "name": "EXTERNAL_EVENT",
              "number": "1",
              "description": "EXTERNAL_EVENT blocks the ThreadRun until a specified ExternalEvent arrives"
            },
            {
              "name": "ENTRYPOINT",
              "number": "2",
              "description": "ENTRYPOINT kicks off a ThreadRun"
            },
            {
              "name": "EXIT",
              "number": "3",
              "description": "EXIT completes a ThreadRun"
            },
            {
              "name": "START_THREAD",
              "number": "4",
              "description": "START_THREAD creates a Child ThreadRun"
            },
            {
              "name": "WAIT_THREADS",
              "number": "5",
              "description": "WAIT_THREADS waits for one or more child ThreadRuns to complete"
            },
            {
              "name": "SLEEP",
              "number": "6",
              "description": "SLEEP makes the ThreadRun sleep for a specified time"
            },
            {
              "name": "USER_TASK",
              "number": "7",
              "description": "USER_TASK creates a UserTaskRun and blocks until the UserTaskRun is completed."
            },
            {
              "name": "START_MULTIPLE_THREADS",
              "number": "8",
              "description": "START_MULTIPLE_THREADS iterates over a list and starts a Child Thread for each item"
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AwaitWorkflowEventRequest",
          "longName": "AwaitWorkflowEventRequest",
          "fullName": "littlehorse.AwaitWorkflowEventRequest",
          "description": "Request to await until a WorkflowEvent of a certain WorkflowEventDef on a certain WfRun\nis thrown. Relies upon native GRPC deadlines to configure timeouts.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The ID of the WfRun which must throw the WorkflowEvent.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "event_def_ids",
              "description": "The IDs of the WorkflowEventDef that must be thrown. The request will return the first matching\nWorkflowEvent is thrown. If event_def_ids is empty, then the request will return the first\nWorkflowEvent thrown by the WfRun.",
              "label": "repeated",
              "type": "WorkflowEventDefId",
              "longType": "WorkflowEventDefId",
              "fullType": "littlehorse.WorkflowEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "workflow_events_to_ignore",
              "description": "Since a single WfRun may throw multiple WorkflowEvent's with the same WorkflowEventDefId, it\nis necessary to provide a client the ability to \"ignore\" WorkflowEvent's that have already been\n'awaited'. Any WorkflowEvent specified by this field is ignored by the rpc.",
              "label": "repeated",
              "type": "WorkflowEventId",
              "longType": "WorkflowEventId",
              "fullType": "littlehorse.WorkflowEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteExternalEventDefRequest",
          "longName": "DeleteExternalEventDefRequest",
          "fullName": "littlehorse.DeleteExternalEventDefRequest",
          "description": "Deletes an ExternalEventDef",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the ExternalEventDef to delete.",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteExternalEventRequest",
          "longName": "DeleteExternalEventRequest",
          "fullName": "littlehorse.DeleteExternalEventRequest",
          "description": "Deletes an ExternalEvent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the ExternalEvent to delete.",
              "label": "",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteTaskDefRequest",
          "longName": "DeleteTaskDefRequest",
          "fullName": "littlehorse.DeleteTaskDefRequest",
          "description": "Deletes a TaskDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the TaskDef to delete.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteUserTaskDefRequest",
          "longName": "DeleteUserTaskDefRequest",
          "fullName": "littlehorse.DeleteUserTaskDefRequest",
          "description": "Deletes a UserTaskDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the UserTaskDef to delete.",
              "label": "",
              "type": "UserTaskDefId",
              "longType": "UserTaskDefId",
              "fullType": "littlehorse.UserTaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteWfRunRequest",
          "longName": "DeleteWfRunRequest",
          "fullName": "littlehorse.DeleteWfRunRequest",
          "description": "Deletes a WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the WfRun to delete.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "DeleteWfSpecRequest",
          "longName": "DeleteWfSpecRequest",
          "fullName": "littlehorse.DeleteWfSpecRequest",
          "description": "Deletes a WfSpec",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the WfSpec to delete",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventDefIdList",
          "longName": "ExternalEventDefIdList",
          "fullName": "littlehorse.ExternalEventDefIdList",
          "description": "List of ExternalEventDef Id's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventIdList",
          "longName": "ExternalEventIdList",
          "fullName": "littlehorse.ExternalEventIdList",
          "description": "List of ExternalEvent Id's",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventList",
          "longName": "ExternalEventList",
          "fullName": "littlehorse.ExternalEventList",
          "description": "A list of ExternalEvents.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "A list of ExternalEvent objects.",
              "label": "repeated",
              "type": "ExternalEvent",
              "longType": "ExternalEvent",
              "fullType": "littlehorse.ExternalEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestUserTaskDefRequest",
          "longName": "GetLatestUserTaskDefRequest",
          "fullName": "littlehorse.GetLatestUserTaskDefRequest",
          "description": "Returns the UserTaskDef with a given name and the highest version number.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the UserTaskDef to search for.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "GetLatestWfSpecRequest",
          "longName": "GetLatestWfSpecRequest",
          "fullName": "littlehorse.GetLatestWfSpecRequest",
          "description": "Get the latest WfSpec with a given name and optionally majorVersion",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the WfSpec to get. This is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "major_version",
              "description": "Optionally get only WfSpec's that have the same major version. This can be useful\nif you want to guarantee that there have been no breaking changes to the API of the\nWfSpec, for example, to ensure that there have been no changes to searchable variables\nor required input variables.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_major_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LHHostInfo",
          "longName": "LHHostInfo",
          "fullName": "littlehorse.LHHostInfo",
          "description": "Information about a specific LH Server to contact.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "host",
              "description": "The host on the server",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "port",
              "description": "The port for the specified listener.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListExternalEventsRequest",
          "longName": "ListExternalEventsRequest",
          "fullName": "littlehorse.ListExternalEventsRequest",
          "description": "List all ExternalEvents for a specific WfRunId. Note that List Requests return actual\nExternalEvent objects, not ExternalEventId's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The WfRunId for whom we list ExternalEvent's.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListNodeRunsRequest",
          "longName": "ListNodeRunsRequest",
          "fullName": "littlehorse.ListNodeRunsRequest",
          "description": "List all NodeRun's for a given WfRun. Note that List requests return actual NodeRun Objects,\nnot NodeRunId's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The WfRun for whom we list NodeRun's.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "Optionally specify the thread run number to filter NodeRun's by.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_thread_run_number",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTaskMetricsRequest",
          "longName": "ListTaskMetricsRequest",
          "fullName": "littlehorse.ListTaskMetricsRequest",
          "description": "Query to retrieve TaskDef Metrics over a period of time.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_def_id",
              "description": "TaskDef id for whichwe retrieve metrics.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_window_start",
              "description": "This parameter is a timestamp that is used to determine the *last* window returned. The\nserver will then return `num_windows` worth of data from before this timestamp.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "Window size",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "num_windows",
              "description": "Number of windows to retrieve.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTaskMetricsResponse",
          "longName": "ListTaskMetricsResponse",
          "fullName": "littlehorse.ListTaskMetricsResponse",
          "description": "A list of TaskDef Metrics WIndows",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "List of TaskDef Metrics Windows",
              "label": "repeated",
              "type": "TaskDefMetrics",
              "longType": "TaskDefMetrics",
              "fullType": "littlehorse.TaskDefMetrics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListTaskRunsRequest",
          "longName": "ListTaskRunsRequest",
          "fullName": "littlehorse.ListTaskRunsRequest",
          "description": "List TaskRun's for a specific WfRun",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The WfRun for which to list TaskRun's",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListUserTaskRunRequest",
          "longName": "ListUserTaskRunRequest",
          "fullName": "littlehorse.ListUserTaskRunRequest",
          "description": "List UserTaskRun's for a specific WfRun",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The WfRun for which to list UserTaskRuns",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListVariablesRequest",
          "longName": "ListVariablesRequest",
          "fullName": "littlehorse.ListVariablesRequest",
          "description": "List all Variables for a specific WfRun. Note that List requests return actual Variable Objects,\nnot VariableId's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The WfRun for whom we will list Variables.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWfMetricsRequest",
          "longName": "ListWfMetricsRequest",
          "fullName": "littlehorse.ListWfMetricsRequest",
          "description": "Query to retrieve WfSpec Metrics over a period of time.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_id",
              "description": "WfSpecId of metrics to get.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "last_window_start",
              "description": "This parameter is a timestamp that is used to determine the *last* window returned. The\nserver will then return `num_windows` worth of data from before this timestamp.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "The window size",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "num_windows",
              "description": "Number of windows to retrieve",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ListWfMetricsResponse",
          "longName": "ListWfMetricsResponse",
          "fullName": "littlehorse.ListWfMetricsResponse",
          "description": "A list of WfSpec Metrics Windows",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "List of WfSpec Metrics Windows",
              "label": "repeated",
              "type": "WfSpecMetrics",
              "longType": "WfSpecMetrics",
              "fullType": "littlehorse.WfSpecMetrics",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "MigrateWfSpecRequest",
          "longName": "MigrateWfSpecRequest",
          "fullName": "littlehorse.MigrateWfSpecRequest",
          "description": "EXPERIMENTAL: migrate live WfRun's from one version of a WfSpec to another.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "old_wf_spec",
              "description": "",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "migration",
              "description": "",
              "label": "",
              "type": "WfSpecVersionMigration",
              "longType": "WfSpecVersionMigration",
              "fullType": "littlehorse.WfSpecVersionMigration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeRunIdList",
          "longName": "NodeRunIdList",
          "fullName": "littlehorse.NodeRunIdList",
          "description": "List of NodeRun Id's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "NodeRunId",
              "longType": "NodeRunId",
              "fullType": "littlehorse.NodeRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeRunList",
          "longName": "NodeRunList",
          "fullName": "littlehorse.NodeRunList",
          "description": "A list of NodeRun Objects.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "A list of NodeRun Objects.",
              "label": "repeated",
              "type": "NodeRun",
              "longType": "NodeRun",
              "fullType": "littlehorse.NodeRun",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PollTaskRequest",
          "longName": "PollTaskRequest",
          "fullName": "littlehorse.PollTaskRequest",
          "description": "Request sent by the Task Worker SDK to tell the Server that the Task Worker is ready\nto execute a TaskRun. Generally used only by the Task Worker SDK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task_def_id",
              "description": "Is the TaskDefId that the Task Worker wants to execute.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "client_id",
              "description": "Is the ID of the Task Worker.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_worker_version",
              "description": "Optionally specifies the version of the Task Worker, so that it can be recorded\nfor debugging purposes on the TaskRun itself.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_task_worker_version",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PollTaskResponse",
          "longName": "PollTaskResponse",
          "fullName": "littlehorse.PollTaskResponse",
          "description": "Response from the server for PollTaskRequest.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "result",
              "description": "If possible, a ScheduledTask is returned.",
              "label": "optional",
              "type": "ScheduledTask",
              "longType": "ScheduledTask",
              "fullType": "littlehorse.ScheduledTask",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_result",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutExternalEventDefRequest",
          "longName": "PutExternalEventDefRequest",
          "fullName": "littlehorse.PutExternalEventDefRequest",
          "description": "Field to create an ExternalEventDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the resulting ExternalEventDef.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retention_policy",
              "description": "Policy to determine how long an ExternalEvent is retained after creation if it\nis not yet claimed by a WfRun. Note that once a WfRun has been matched with the\nExternalEvent, the ExternalEvent is deleted if/when that WfRun is deleted.\nIf not set, then ExternalEvent's are not deleted if they are not matched with\na WfRun.\n\nA future version of LittleHorse will allow changing the retention_policy, which\nwill trigger a cleanup of old `ExternalEvent`s.",
              "label": "",
              "type": "ExternalEventRetentionPolicy",
              "longType": "ExternalEventRetentionPolicy",
              "fullType": "littlehorse.ExternalEventRetentionPolicy",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutExternalEventRequest",
          "longName": "PutExternalEventRequest",
          "fullName": "littlehorse.PutExternalEventRequest",
          "description": "Request used to create an ExternalEvent.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "The ID of the WfRun that this Event is sent to.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "external_event_def_id",
              "description": "The ID of the ExternalEventDef that this event implements.",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "guid",
              "description": "Note that an ExternalEventDefId is a three-part ID:\n1. WfRunId\n2. ExternalEventDef Name\n3. A guid\nThe guid from part 3) can be optionally provided to the PutExternalEventRequest\nin order to make it idempotent. It is a best practice to do so.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_guid",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "The content of this event.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "Optionally specify that this ExternalEvent may only be claimed by a specific ThreadRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_thread_run_number",
              "defaultValue": ""
            },
            {
              "name": "node_run_position",
              "description": "Optionally specify that this ExternalEvent may only be claimed by a specific NodeRun.\nIn order for this to be set, you must also set thread_run_number.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_node_run_position",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutTaskDefRequest",
          "longName": "PutTaskDefRequest",
          "fullName": "littlehorse.PutTaskDefRequest",
          "description": "Creates a TaskDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the TaskDef to create.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "input_vars",
              "description": "Variables required to execute the TaskDef. Normally, these are automatically\ngenerated by the Task Worker SDK.",
              "label": "repeated",
              "type": "VariableDef",
              "longType": "VariableDef",
              "fullType": "littlehorse.VariableDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutUserTaskDefRequest",
          "longName": "PutUserTaskDefRequest",
          "fullName": "littlehorse.PutUserTaskDefRequest",
          "description": "Creates a UserTaskDef.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the UserTaskDef to create.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "The fields that should be presented to the user on the screen in order to fill\nout the User Task. Note that these fields also define a data contract for the\nresult of the UserTaskDef.",
              "label": "repeated",
              "type": "UserTaskField",
              "longType": "UserTaskField",
              "fullType": "littlehorse.UserTaskField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Optional metadata field to store user-defined data. Does not impact workflow\nexecution. Fine to store up to a few KB of text here.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutWfSpecRequest",
          "longName": "PutWfSpecRequest",
          "fullName": "littlehorse.PutWfSpecRequest",
          "description": "Creates a WfSpec. Generally, this request is generated by the Workflow object in\nour various SDK's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the resulting WfSpec.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_specs",
              "description": "Map from name the ThreadSpec.",
              "label": "repeated",
              "type": "ThreadSpecsEntry",
              "longType": "PutWfSpecRequest.ThreadSpecsEntry",
              "fullType": "littlehorse.PutWfSpecRequest.ThreadSpecsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entrypoint_thread_name",
              "description": "The name of the ThreadSpec to be used as the workflow entrypoint.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retention_policy",
              "description": "Optional policy to determine how long a WfRun is retained in the data store after\nit is completed or terminated.",
              "label": "optional",
              "type": "WorkflowRetentionPolicy",
              "longType": "WorkflowRetentionPolicy",
              "fullType": "littlehorse.WorkflowRetentionPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_retention_policy",
              "defaultValue": ""
            },
            {
              "name": "parent_wf_spec",
              "description": "Parent WfSpec Reference. If this is set, then all WfRun's for this WfSpec *MUST* be\nChild WfRun's of the specified WfSpec.",
              "label": "optional",
              "type": "ParentWfSpecReference",
              "longType": "WfSpec.ParentWfSpecReference",
              "fullType": "littlehorse.WfSpec.ParentWfSpecReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_wf_spec",
              "defaultValue": ""
            },
            {
              "name": "allowed_updates",
              "description": "Configures the behavior of this individual request. Can be used to prevent\nbreaking changes to the WfSpec, prevent any changes to the WfSpec, or allow\nall changes to the WfSpec.",
              "label": "",
              "type": "AllowedUpdateType",
              "longType": "AllowedUpdateType",
              "fullType": "littlehorse.AllowedUpdateType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadSpecsEntry",
          "longName": "PutWfSpecRequest.ThreadSpecsEntry",
          "fullName": "littlehorse.PutWfSpecRequest.ThreadSpecsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "ThreadSpec",
              "longType": "ThreadSpec",
              "fullType": "littlehorse.ThreadSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PutWorkflowEventDefRequest",
          "longName": "PutWorkflowEventDefRequest",
          "fullName": "littlehorse.PutWorkflowEventDefRequest",
          "description": "EXPERIMENTAL: Creates a WorkflowEventDef",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "VariableType",
              "longType": "VariableType",
              "fullType": "littlehorse.VariableType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterTaskWorkerRequest",
          "longName": "RegisterTaskWorkerRequest",
          "fullName": "littlehorse.RegisterTaskWorkerRequest",
          "description": "Message used by Task Worker to register itself to the server and ask for assignments of\nservers to poll.\n\nUsed by the Task Worker SDK; generally, you shouldn't have to touch this manually.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_worker_id",
              "description": "Is the ID of the Task Worker.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_id",
              "description": "The TaskDef the worker wants to poll for.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "listener_name",
              "description": "The listener that the worker is polling on. Used by the server to determine which\nadvertised hosts to return.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RegisterTaskWorkerResponse",
          "longName": "RegisterTaskWorkerResponse",
          "fullName": "littlehorse.RegisterTaskWorkerResponse",
          "description": "Response containing list of Servers that the Task Worker should connect to and start polling from.\nOnly used internally by the Task Worker SDK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "your_hosts",
              "description": "The list of LH Server hosts that the Task Worker should start polling.",
              "label": "repeated",
              "type": "LHHostInfo",
              "longType": "LHHostInfo",
              "fullType": "littlehorse.LHHostInfo",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_cluster_healthy",
              "description": "Whether the LH Cluster is healthy.",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_cluster_healthy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ReportTaskRun",
          "longName": "ReportTaskRun",
          "fullName": "littlehorse.ReportTaskRun",
          "description": "Request used by the Task Worker SDK to report the result of a TaskRun execution.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task_run_id",
              "description": "ID of the TaskRun",
              "label": "",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "time",
              "description": "When the TaskRun was executed",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the TaskRun",
              "label": "",
              "type": "TaskStatus",
              "longType": "TaskStatus",
              "fullType": "littlehorse.TaskStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "log_output",
              "description": "Optional information for logging or exceptions",
              "label": "optional",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_log_output",
              "defaultValue": ""
            },
            {
              "name": "attempt_number",
              "description": "Attempt number of the TaskRun",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "output",
              "description": "Successfully completed task",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "Technical error",
              "label": "",
              "type": "LHTaskError",
              "longType": "LHTaskError",
              "fullType": "littlehorse.LHTaskError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "exception",
              "description": "Business exception",
              "label": "",
              "type": "LHTaskException",
              "longType": "LHTaskException",
              "fullType": "littlehorse.LHTaskException",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResumeWfRunRequest",
          "longName": "ResumeWfRunRequest",
          "fullName": "littlehorse.ResumeWfRunRequest",
          "description": "Resume a WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "Is the WfRunId",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "The number of the ThreadRun to resume. Note that resuming the entrypoint ThreadRun (which\nalways has number `0`) causes the whole WfRun to resume. If you do not manually set\nthe thread_run_number field, it defaults to zero, so resuming the entire WfRun is the\ndefault behavior.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "RunWfRequest",
          "longName": "RunWfRequest",
          "fullName": "littlehorse.RunWfRequest",
          "description": "Create a Workflow Run.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_name",
              "description": "The name of the WfSpec to run.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "major_version",
              "description": "Optionally specify the major version of the WfSpec to run. This guarantees that\nthe \"signature\" of the WfSpec (i.e. the required input variables, and searchable\nvariables) will not change for this app.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_major_version",
              "defaultValue": ""
            },
            {
              "name": "revision",
              "description": "Optionally specify the specific revision of the WfSpec to run. It is not recommended\nto use this in practice, as the WfSpec logic should be de-coupled from the applications\nthat run WfRun's.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_revision",
              "defaultValue": ""
            },
            {
              "name": "variables",
              "description": "A map from Variable Name to Values for those variables. The provided variables are\npassed as input to the Entrypoint ThreadRun.",
              "label": "repeated",
              "type": "VariablesEntry",
              "longType": "RunWfRequest.VariablesEntry",
              "fullType": "littlehorse.RunWfRequest.VariablesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "id",
              "description": "You can optionally specify the ID of this WfRun. This is a recommended best practice\nas it also makes your request idempotent and allows you to easily find the WfRun at\na later time.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_id",
              "defaultValue": ""
            },
            {
              "name": "parent_wf_run_id",
              "description": "",
              "label": "optional",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_wf_run_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariablesEntry",
          "longName": "RunWfRequest.VariablesEntry",
          "fullName": "littlehorse.RunWfRequest.VariablesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ScheduledTask",
          "longName": "ScheduledTask",
          "fullName": "littlehorse.ScheduledTask",
          "description": "Message sent by server to Task Worker SDK specifying a specific TaskRun to be executed.\nThis is used and handled internally by the Task Worker SDK.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_run_id",
              "description": "Id of the TaskRun to execute.",
              "label": "",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_id",
              "description": "ID of the TaskDef to which the TaskRun belongs.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attempt_number",
              "description": "Attempt number of the TaskRun, zero indexed. attempt_number of `0` means this is the\nfirst attempt; `1` means this is the first retry, etc.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "variables",
              "description": "Input variables for this TaskRun.",
              "label": "repeated",
              "type": "VarNameAndVal",
              "longType": "VarNameAndVal",
              "fullType": "littlehorse.VarNameAndVal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source",
              "description": "Source of the TaskRun. Currently, there are two options:\n1. A TASK node\n2. A reminder task scheduled by a trigger on a User Task.",
              "label": "",
              "type": "TaskRunSource",
              "longType": "TaskRunSource",
              "fullType": "littlehorse.TaskRunSource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchExternalEventDefRequest",
          "longName": "SearchExternalEventDefRequest",
          "fullName": "littlehorse.SearchExternalEventDefRequest",
          "description": "Search for ExternalEventDef's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "prefix",
              "description": "Optionally search only for ExternalEventDef's whose name starts with this prefix.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_prefix",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchExternalEventRequest",
          "longName": "SearchExternalEventRequest",
          "fullName": "littlehorse.SearchExternalEventRequest",
          "description": "EVOLVING: Search for ExternalEvent's.\n\nCurrently, this request allows you to search for ExternalEvent's based on either:\n1. A WfRunId\n2. An ExternalEventDefName and status.\n\nThis specific RPC is under discussions for a Refactor and will soon experience breaking changes.\nIt is recommended for applications needing to search by WfRunId to instead use the\n`rpc ListExternalEvents` call, as we plan to remove the 'by WfRunId' option from this request.\n\nSpecifically, we plan to remove the \"by wfRunId\" option (which is redundant with the ListExternalEvents\nrequest), and \"flatten\" the \"ByExtEvtDefNameAndStatusRequest\" fields into the main message.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "wf_run_id",
              "description": "",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext_evt_criteria",
              "defaultValue": ""
            },
            {
              "name": "external_event_def_name_and_status",
              "description": "",
              "label": "",
              "type": "ByExtEvtDefNameAndStatusRequest",
              "longType": "SearchExternalEventRequest.ByExtEvtDefNameAndStatusRequest",
              "fullType": "littlehorse.SearchExternalEventRequest.ByExtEvtDefNameAndStatusRequest",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "ext_evt_criteria",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ByExtEvtDefNameAndStatusRequest",
          "longName": "SearchExternalEventRequest.ByExtEvtDefNameAndStatusRequest",
          "fullName": "littlehorse.SearchExternalEventRequest.ByExtEvtDefNameAndStatusRequest",
          "description": "EVOLVING: message encapsulating criteria to search for ExternalEvent's by their status\nand ExternalEventDefName.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_def_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "is_claimed",
              "description": "",
              "label": "optional",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_is_claimed",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchNodeRunRequest",
          "longName": "SearchNodeRunRequest",
          "fullName": "littlehorse.SearchNodeRunRequest",
          "description": "Search for NodeRun's by certain criteria.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "earliest_start",
              "description": "Only return NodeRun's created after this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_earliest_start",
              "defaultValue": ""
            },
            {
              "name": "latest_start",
              "description": "Only return NodeRun's created before this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_latest_start",
              "defaultValue": ""
            },
            {
              "name": "node_type",
              "description": "Specifies the type of NodeRun to search for.",
              "label": "",
              "type": "NodeType",
              "longType": "SearchNodeRunRequest.NodeType",
              "fullType": "littlehorse.SearchNodeRunRequest.NodeType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Specifies the status of NodeRun to search for.",
              "label": "",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchTaskDefRequest",
          "longName": "SearchTaskDefRequest",
          "fullName": "littlehorse.SearchTaskDefRequest",
          "description": "Search for TaskDef's based on certain criteria.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "prefix",
              "description": "Optionally specify to only return TaskDef's with a specific prefix.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_prefix",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchTaskRunRequest",
          "longName": "SearchTaskRunRequest",
          "fullName": "littlehorse.SearchTaskRunRequest",
          "description": "Searches for TaskRuns by various criteria.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "task_def_name",
              "description": "Specifies the TaskDef of TaskRun's to return. This is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Specifies to only return TaskRun's matching this status.",
              "label": "optional",
              "type": "TaskStatus",
              "longType": "TaskStatus",
              "fullType": "littlehorse.TaskStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "earliest_start",
              "description": "Specifies to only return TaskRun's that were scheduled after this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_earliest_start",
              "defaultValue": ""
            },
            {
              "name": "latest_start",
              "description": "Specifies to only return TaskRun's that were scheduled before this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_latest_start",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchTenantRequest",
          "longName": "SearchTenantRequest",
          "fullName": "littlehorse.SearchTenantRequest",
          "description": "Search for all available TenantIds for current Principal",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchUserTaskDefRequest",
          "longName": "SearchUserTaskDefRequest",
          "fullName": "littlehorse.SearchUserTaskDefRequest",
          "description": "Search for UserTaskDef's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "prefix",
              "description": "Return all UserTaskDef's with a specific prefix.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "user_task_def_criteria",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Return all UserTaskDef's with a specific name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "user_task_def_criteria",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchUserTaskRunRequest",
          "longName": "SearchUserTaskRunRequest",
          "fullName": "littlehorse.SearchUserTaskRunRequest",
          "description": "Search for UserTaskRun's matching certain criteria. The attributes are additive,\nyou may specify any combination of fields in this request. Only UserTaskRun's\nmatching all criteria will be returned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of UserTaskRun's to return.",
              "label": "optional",
              "type": "UserTaskRunStatus",
              "longType": "UserTaskRunStatus",
              "fullType": "littlehorse.UserTaskRunStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "user_task_def_name",
              "description": "UserTaskDef name to search for.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_task_def_name",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "Search for UserTaskRun's assigned to this user id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "Search for UserTaskRun's assigned to this user group.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            },
            {
              "name": "earliest_start",
              "description": "Search for UserTaskRun's that were created after this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_earliest_start",
              "defaultValue": ""
            },
            {
              "name": "latest_start",
              "description": "Search for UserTaskRun's that were created before this time.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_latest_start",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchVariableRequest",
          "longName": "SearchVariableRequest",
          "fullName": "littlehorse.SearchVariableRequest",
          "description": "Search for Variables by their value. This request is also highly useful to search for\nWfRun's based on the value of Variable's that are not in the Entrypoint ThreadRun,\nand also when you are using LittleHorse as a data store and need to perform a search.\n\nYou may only search for a Variable that has an index specified on it. This may be done\nvia th `.searchable()` method on our SDK's.\n\nNote that we do not yet support searching JSON_OBJ or JSON_ARR fields, but you may\nstill mark those fields as searchable. We will soon add the ability to query those\nfields via the indices.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "Specifies the value that the variable must be. Exact match is required.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_major_version",
              "description": "Specifies major version of the WfSpec for the associated WfRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_wf_spec_major_version",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_revision",
              "description": "Specifies the revision of the WfSpec for the associated WfRun.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_wf_spec_revision",
              "defaultValue": ""
            },
            {
              "name": "var_name",
              "description": "Specifies the name of the variable to search for. This is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_name",
              "description": "Specifies the name of the WfSpec for the associated WfRun's. This is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchWfRunRequest",
          "longName": "SearchWfRunRequest",
          "fullName": "littlehorse.SearchWfRunRequest",
          "description": "A request used to retrieve a list of WfRunId's by certain criteria.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_name",
              "description": "The WfSpec whose WfRun's we are searching for. This is required.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_major_version",
              "description": "Specifies to return only WfRun's from this WfSpec Major Version.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_wf_spec_major_version",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_revision",
              "description": "Specifies to return only WfRun's from this WfSpec Revision. Can only be set if\nwf_spec_major_version is also set.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_wf_spec_revision",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Specifies to return only WfRun's matching this status.",
              "label": "optional",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_status",
              "defaultValue": ""
            },
            {
              "name": "earliest_start",
              "description": "Specifies to return only WfRun's that started after this time",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_earliest_start",
              "defaultValue": ""
            },
            {
              "name": "latest_start",
              "description": "Specifies to return only WfRun's that started before this time",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_latest_start",
              "defaultValue": ""
            },
            {
              "name": "variable_filters",
              "description": "Allows filtering WfRun's based on the value of the Variables. This ONLY\nworks for the Variables in the entrypiont threadrun (that is, variables\nwhere the threadRunNumber == 0).",
              "label": "repeated",
              "type": "VariableMatch",
              "longType": "VariableMatch",
              "fullType": "littlehorse.VariableMatch",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SearchWfSpecRequest",
          "longName": "SearchWfSpecRequest",
          "fullName": "littlehorse.SearchWfSpecRequest",
          "description": "Search for WfSpec's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            },
            {
              "name": "limit",
              "description": "Maximum results to return in one request.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_limit",
              "defaultValue": ""
            },
            {
              "name": "name",
              "description": "Return WfSpec's with a specific name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "wf_spec_criteria",
              "defaultValue": ""
            },
            {
              "name": "prefix",
              "description": "Return WfSpec's with a specific prefix.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "wf_spec_criteria",
              "defaultValue": ""
            },
            {
              "name": "task_def_name",
              "description": "Return all WfSpec's that make use of a given TaskDef.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "wf_spec_criteria",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ServerVersionResponse",
          "longName": "ServerVersionResponse",
          "fullName": "littlehorse.ServerVersionResponse",
          "description": "The version of the LH Server according to Semantic Versioning",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "major_version",
              "description": "Server Major Version",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "minor_version",
              "description": "Server Minor Version",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "patch_version",
              "description": "Server Patch Version",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pre_release_identifier",
              "description": "Prerelease Identifier. If this is set, then the server is NOT a production release\nbut rather a release candidate or experimental pre-release.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_pre_release_identifier",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StopWfRunRequest",
          "longName": "StopWfRunRequest",
          "fullName": "littlehorse.StopWfRunRequest",
          "description": "Message to HALT a WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_run_id",
              "description": "Is the WfRunId",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_run_number",
              "description": "The number of the ThreadRun to halt. Note that halting the entrypoint ThreadRun (which\nalways has number `0`) causes the whole WfRun to halt. If you do not manually set\nthe thread_run_number field, it defaults to zero, so stopping the entire WfRun is the\ndefault behavior.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskDefIdList",
          "longName": "TaskDefIdList",
          "fullName": "littlehorse.TaskDefIdList",
          "description": "List of TaskDef Id's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskDefMetrics",
          "longName": "TaskDefMetrics",
          "fullName": "littlehorse.TaskDefMetrics",
          "description": "Metrics for a TaskDef in a certain time period.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_def_id",
              "description": "TaskDef that the metrics apply to.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_start",
              "description": "When the window started.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "Length of the window.",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schedule_to_start_max",
              "description": "Longest time that a TaskRun was in the TASK_SCHEDULED state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "schedule_to_start_avg",
              "description": "Average time that a TaskRun was in the TASK_SCHEDULED state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_to_complete_max",
              "description": "Longest time between a TaskRun being started and completed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_to_complete_avg",
              "description": "Average time between a TaskRun being started and completed",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_completed",
              "description": "Total number of TaskRun's that reached the TASK_SUCCESS state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_errored",
              "description": "Total number of TaskRun's that reached the TASK_ERROR state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_started",
              "description": "Total number of TaskRun's that transitioned to the TASK_RUNNING state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_scheduled",
              "description": "Total number of TaskRun's that were scheduled",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskDefMetricsQueryRequest",
          "longName": "TaskDefMetricsQueryRequest",
          "fullName": "littlehorse.TaskDefMetricsQueryRequest",
          "description": "Query to retrieve a specific TaskDef Metrics Window.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "window_start",
              "description": "Return the window *containing* this timestamp. The window start is not guaranteed to\nalign perfectly with the request.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_type",
              "description": "The window size",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_name",
              "description": "The name of the specific TaskDef for which we are calculating metrics.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_task_def_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskRunIdList",
          "longName": "TaskRunIdList",
          "fullName": "littlehorse.TaskRunIdList",
          "description": "List of TaskRun ID's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskRunList",
          "longName": "TaskRunList",
          "fullName": "littlehorse.TaskRunList",
          "description": "A list of TaskRun's",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "A list of TaskRun Objects",
              "label": "repeated",
              "type": "TaskRun",
              "longType": "TaskRun",
              "fullType": "littlehorse.TaskRun",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskWorkerHeartBeatRequest",
          "longName": "TaskWorkerHeartBeatRequest",
          "fullName": "littlehorse.TaskWorkerHeartBeatRequest",
          "description": "Message used by Task Worker to register itself to the server and ask for assignments of\nservers to poll.\n\nUsed by the Task Worker SDK; generally, you shouldn't have to touch this manually.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "client_id",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_id",
              "description": "",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "listener_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TenantIdList",
          "longName": "TenantIdList",
          "fullName": "littlehorse.TenantIdList",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "TenantId",
              "longType": "TenantId",
              "fullType": "littlehorse.TenantId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "Bookmark for cursor-based pagination; pass if applicable.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskDefIdList",
          "longName": "UserTaskDefIdList",
          "fullName": "littlehorse.UserTaskDefIdList",
          "description": "List of UserTaskDef Id's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "UserTaskDefId",
              "longType": "UserTaskDefId",
              "fullType": "littlehorse.UserTaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskRunIdList",
          "longName": "UserTaskRunIdList",
          "fullName": "littlehorse.UserTaskRunIdList",
          "description": "A list of UserTaskRun Id's",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskRunList",
          "longName": "UserTaskRunList",
          "fullName": "littlehorse.UserTaskRunList",
          "description": "List of UserTaskRuns",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "A list of UserTaskRun Objects",
              "label": "repeated",
              "type": "UserTaskRun",
              "longType": "UserTaskRun",
              "fullType": "littlehorse.UserTaskRun",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableIdList",
          "longName": "VariableIdList",
          "fullName": "littlehorse.VariableIdList",
          "description": "This is a list of Variable ID's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "VariableId",
              "longType": "VariableId",
              "fullType": "littlehorse.VariableId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableList",
          "longName": "VariableList",
          "fullName": "littlehorse.VariableList",
          "description": "A list of Variables.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "A list of Variable objects.",
              "label": "repeated",
              "type": "Variable",
              "longType": "Variable",
              "fullType": "littlehorse.Variable",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableMatch",
          "longName": "VariableMatch",
          "fullName": "littlehorse.VariableMatch",
          "description": "Used by a SearchWfRunRequest to filter WfRun's and only return those whose Variable's\nmatch a certain filter.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "var_name",
              "description": "The name of the variable to inspect.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The value that the Variable must have in order to satisfy this VariableMatch",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfRunIdList",
          "longName": "WfRunIdList",
          "fullName": "littlehorse.WfRunIdList",
          "description": "List of WfRun Id's",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecIdList",
          "longName": "WfSpecIdList",
          "fullName": "littlehorse.WfSpecIdList",
          "description": "List of WfSpec Id's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "results",
              "description": "The resulting object id's.",
              "label": "repeated",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "bookmark",
              "description": "The bookmark can be used for cursor-based pagination. If it is null, the server\nhas returned all results. If it is set, you can pass it into your next request\nto resume searching where your previous request left off.",
              "label": "optional",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_bookmark",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecMetrics",
          "longName": "WfSpecMetrics",
          "fullName": "littlehorse.WfSpecMetrics",
          "description": "Metrics for a WfSpec in a specific time window",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_id",
              "description": "The WfSpecId that these metrics analyze",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_start",
              "description": "The time that the window started",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The length of the window",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_started",
              "description": "Total number of WfRun's created for this WfSpec",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_completed",
              "description": "Total number of WfRun's that reached the COMPLETED state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_errored",
              "description": "Total number of WfRun's that reached the ERROR state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_to_complete_max",
              "description": "Longest time between a WfRun being started and reaching the COMPLETED state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_to_complete_avg",
              "description": "Average time that a WfRun took to reach the COMPLETED state",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecMetricsQueryRequest",
          "longName": "WfSpecMetricsQueryRequest",
          "fullName": "littlehorse.WfSpecMetricsQueryRequest",
          "description": "Query to retrieve a specific WfSpec Metrics Window.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_id",
              "description": "WfSpecId of metrics to get.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_start",
              "description": "Return the window *containing* this timestamp. The window start is not guaranteed to\nalign perfectly with the request.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "window_length",
              "description": "The window size",
              "label": "",
              "type": "MetricsWindowLength",
              "longType": "MetricsWindowLength",
              "fullType": "littlehorse.MetricsWindowLength",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": [
        {
          "name": "LittleHorse",
          "longName": "LittleHorse",
          "fullName": "littlehorse.LittleHorse",
          "description": "",
          "methods": [
            {
              "name": "PutTaskDef",
              "description": "Creates a TaskDef.",
              "requestType": "PutTaskDefRequest",
              "requestLongType": "PutTaskDefRequest",
              "requestFullType": "littlehorse.PutTaskDefRequest",
              "requestStreaming": false,
              "responseType": "TaskDef",
              "responseLongType": "TaskDef",
              "responseFullType": "littlehorse.TaskDef",
              "responseStreaming": false
            },
            {
              "name": "GetTaskDef",
              "description": "Gets a TaskDef.",
              "requestType": "TaskDefId",
              "requestLongType": "TaskDefId",
              "requestFullType": "littlehorse.TaskDefId",
              "requestStreaming": false,
              "responseType": "TaskDef",
              "responseLongType": "TaskDef",
              "responseFullType": "littlehorse.TaskDef",
              "responseStreaming": false
            },
            {
              "name": "PutExternalEventDef",
              "description": "Creates an ExternalEventDef.",
              "requestType": "PutExternalEventDefRequest",
              "requestLongType": "PutExternalEventDefRequest",
              "requestFullType": "littlehorse.PutExternalEventDefRequest",
              "requestStreaming": false,
              "responseType": "ExternalEventDef",
              "responseLongType": "ExternalEventDef",
              "responseFullType": "littlehorse.ExternalEventDef",
              "responseStreaming": false
            },
            {
              "name": "GetExternalEventDef",
              "description": "Gets an ExternalEventDef.",
              "requestType": "ExternalEventDefId",
              "requestLongType": "ExternalEventDefId",
              "requestFullType": "littlehorse.ExternalEventDefId",
              "requestStreaming": false,
              "responseType": "ExternalEventDef",
              "responseLongType": "ExternalEventDef",
              "responseFullType": "littlehorse.ExternalEventDef",
              "responseStreaming": false
            },
            {
              "name": "PutWorkflowEventDef",
              "description": "EXPERIMENTAL: Creates a WorkflowEventDef.",
              "requestType": "PutWorkflowEventDefRequest",
              "requestLongType": "PutWorkflowEventDefRequest",
              "requestFullType": "littlehorse.PutWorkflowEventDefRequest",
              "requestStreaming": false,
              "responseType": "WorkflowEventDef",
              "responseLongType": "WorkflowEventDef",
              "responseFullType": "littlehorse.WorkflowEventDef",
              "responseStreaming": false
            },
            {
              "name": "PutWfSpec",
              "description": "Creates a WfSpec.",
              "requestType": "PutWfSpecRequest",
              "requestLongType": "PutWfSpecRequest",
              "requestFullType": "littlehorse.PutWfSpecRequest",
              "requestStreaming": false,
              "responseType": "WfSpec",
              "responseLongType": "WfSpec",
              "responseFullType": "littlehorse.WfSpec",
              "responseStreaming": false
            },
            {
              "name": "GetWfSpec",
              "description": "Gets a WfSpec.",
              "requestType": "WfSpecId",
              "requestLongType": "WfSpecId",
              "requestFullType": "littlehorse.WfSpecId",
              "requestStreaming": false,
              "responseType": "WfSpec",
              "responseLongType": "WfSpec",
              "responseFullType": "littlehorse.WfSpec",
              "responseStreaming": false
            },
            {
              "name": "GetLatestWfSpec",
              "description": "Returns the latest WfSpec with a specified name (and optionally a specified Major Version).",
              "requestType": "GetLatestWfSpecRequest",
              "requestLongType": "GetLatestWfSpecRequest",
              "requestFullType": "littlehorse.GetLatestWfSpecRequest",
              "requestStreaming": false,
              "responseType": "WfSpec",
              "responseLongType": "WfSpec",
              "responseFullType": "littlehorse.WfSpec",
              "responseStreaming": false
            },
            {
              "name": "MigrateWfSpec",
              "description": "EXPERIMENTAL: Migrates all WfRun's from one version of a WfSpec onto a newer version of the\nsame WfSpec. This is useful for long-running WfRun's (eg. a 60-day marketing campaign) where\nyou must update WfRun's that are in the RUNNING state rather than allowing them to run to\ncompletion.\n\nAs of 0.7.2, this feature is only partially implemented.",
              "requestType": "MigrateWfSpecRequest",
              "requestLongType": "MigrateWfSpecRequest",
              "requestFullType": "littlehorse.MigrateWfSpecRequest",
              "requestStreaming": false,
              "responseType": "WfSpec",
              "responseLongType": "WfSpec",
              "responseFullType": "littlehorse.WfSpec",
              "responseStreaming": false
            },
            {
              "name": "PutUserTaskDef",
              "description": "Creates a UserTaskDef.",
              "requestType": "PutUserTaskDefRequest",
              "requestLongType": "PutUserTaskDefRequest",
              "requestFullType": "littlehorse.PutUserTaskDefRequest",
              "requestStreaming": false,
              "responseType": "UserTaskDef",
              "responseLongType": "UserTaskDef",
              "responseFullType": "littlehorse.UserTaskDef",
              "responseStreaming": false
            },
            {
              "name": "GetUserTaskDef",
              "description": "Gets a specific UserTaskDef.\n\nThis RPC is highly useful for applications built around\nUser Tasks. For example, a UI that dynamically displays form fields based on the User Task\nmight first receive a UserTaskRun, then use that UserTaskRun to look up the UserTaskDef.\nThe frontend would inspect the UserTaskDef and display a form field on the browser page\nfor each field in the UserTaskDef.",
              "requestType": "UserTaskDefId",
              "requestLongType": "UserTaskDefId",
              "requestFullType": "littlehorse.UserTaskDefId",
              "requestStreaming": false,
              "responseType": "UserTaskDef",
              "responseLongType": "UserTaskDef",
              "responseFullType": "littlehorse.UserTaskDef",
              "responseStreaming": false
            },
            {
              "name": "GetLatestUserTaskDef",
              "description": "Returns the most recent UserTaskDef with a specific name.",
              "requestType": "GetLatestUserTaskDefRequest",
              "requestLongType": "GetLatestUserTaskDefRequest",
              "requestFullType": "littlehorse.GetLatestUserTaskDefRequest",
              "requestStreaming": false,
              "responseType": "UserTaskDef",
              "responseLongType": "UserTaskDef",
              "responseFullType": "littlehorse.UserTaskDef",
              "responseStreaming": false
            },
            {
              "name": "RunWf",
              "description": "Runs a WfSpec to create a WfRun.",
              "requestType": "RunWfRequest",
              "requestLongType": "RunWfRequest",
              "requestFullType": "littlehorse.RunWfRequest",
              "requestStreaming": false,
              "responseType": "WfRun",
              "responseLongType": "WfRun",
              "responseFullType": "littlehorse.WfRun",
              "responseStreaming": false
            },
            {
              "name": "GetWfRun",
              "description": "Gets a WfRun. Although useful for development and debugging, this RPC is not often\nused by applications.",
              "requestType": "WfRunId",
              "requestLongType": "WfRunId",
              "requestFullType": "littlehorse.WfRunId",
              "requestStreaming": false,
              "responseType": "WfRun",
              "responseLongType": "WfRun",
              "responseFullType": "littlehorse.WfRun",
              "responseStreaming": false
            },
            {
              "name": "GetUserTaskRun",
              "description": "Loads a specific UserTaskRun. It includes information about to whom the UserTask is\ncurrently assigned, history of assignments and reassignments, and any context for that\nUserTaskRun which is specific to the WfRun.",
              "requestType": "UserTaskRunId",
              "requestLongType": "UserTaskRunId",
              "requestFullType": "littlehorse.UserTaskRunId",
              "requestStreaming": false,
              "responseType": "UserTaskRun",
              "responseLongType": "UserTaskRun",
              "responseFullType": "littlehorse.UserTaskRun",
              "responseStreaming": false
            },
            {
              "name": "AssignUserTaskRun",
              "description": "Change the ownership of a UserTaskRun to a new userId, userGroup, or both. The\naction will be reflected in your next call to SearchUserTaskRun. This RPC is useful for\napplications that are using User Tasks to build an internal task-list and wish to\nadminister the tasks.",
              "requestType": "AssignUserTaskRunRequest",
              "requestLongType": "AssignUserTaskRunRequest",
              "requestFullType": "littlehorse.AssignUserTaskRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "CompleteUserTaskRun",
              "description": "Completes a UserTaskRun. Includes the results of the UserTaskRun, the UserTaskRun Id, and\nthe userId of the user who completes the UserTaskRun. Results in the UserTask NodeRun being\ncompleted, and unblocks the associated ThreadRun in the WfRun.\n\nThis RPC is highly useful for applications built around a WfSpec that uses USER_TASK nodes.",
              "requestType": "CompleteUserTaskRunRequest",
              "requestLongType": "CompleteUserTaskRunRequest",
              "requestFullType": "littlehorse.CompleteUserTaskRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "CancelUserTaskRun",
              "description": "Cancels a UserTaskRun. This will result in an EXCEPTION being propagated to the WfRun.",
              "requestType": "CancelUserTaskRunRequest",
              "requestLongType": "CancelUserTaskRunRequest",
              "requestFullType": "littlehorse.CancelUserTaskRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "ListUserTaskRuns",
              "description": "Lists all UserTaskRun's for a specific WfRun. Can be useful when using a WfRun\nto model an entity.",
              "requestType": "ListUserTaskRunRequest",
              "requestLongType": "ListUserTaskRunRequest",
              "requestFullType": "littlehorse.ListUserTaskRunRequest",
              "requestStreaming": false,
              "responseType": "UserTaskRunList",
              "responseLongType": "UserTaskRunList",
              "responseFullType": "littlehorse.UserTaskRunList",
              "responseStreaming": false
            },
            {
              "name": "GetNodeRun",
              "description": "Gets a specific NodeRun.",
              "requestType": "NodeRunId",
              "requestLongType": "NodeRunId",
              "requestFullType": "littlehorse.NodeRunId",
              "requestStreaming": false,
              "responseType": "NodeRun",
              "responseLongType": "NodeRun",
              "responseFullType": "littlehorse.NodeRun",
              "responseStreaming": false
            },
            {
              "name": "ListNodeRuns",
              "description": "Lists all NodeRun's for a specific WfRun.",
              "requestType": "ListNodeRunsRequest",
              "requestLongType": "ListNodeRunsRequest",
              "requestFullType": "littlehorse.ListNodeRunsRequest",
              "requestStreaming": false,
              "responseType": "NodeRunList",
              "responseLongType": "NodeRunList",
              "responseFullType": "littlehorse.NodeRunList",
              "responseStreaming": false
            },
            {
              "name": "GetTaskRun",
              "description": "Gets a specific TaskRun.",
              "requestType": "TaskRunId",
              "requestLongType": "TaskRunId",
              "requestFullType": "littlehorse.TaskRunId",
              "requestStreaming": false,
              "responseType": "TaskRun",
              "responseLongType": "TaskRun",
              "responseFullType": "littlehorse.TaskRun",
              "responseStreaming": false
            },
            {
              "name": "ListTaskRuns",
              "description": "Lists all TaskRun's for a specific WfRun.",
              "requestType": "ListTaskRunsRequest",
              "requestLongType": "ListTaskRunsRequest",
              "requestFullType": "littlehorse.ListTaskRunsRequest",
              "requestStreaming": false,
              "responseType": "TaskRunList",
              "responseLongType": "TaskRunList",
              "responseFullType": "littlehorse.TaskRunList",
              "responseStreaming": false
            },
            {
              "name": "GetVariable",
              "description": "Get the value of a specific Variable. When using a WfRun to model an entity, this\nRPC is useful for retrieving information. It is equivalent to looking up the value of a\ncolumn for a specific row in a SQL table.",
              "requestType": "VariableId",
              "requestLongType": "VariableId",
              "requestFullType": "littlehorse.VariableId",
              "requestStreaming": false,
              "responseType": "Variable",
              "responseLongType": "Variable",
              "responseFullType": "littlehorse.Variable",
              "responseStreaming": false
            },
            {
              "name": "ListVariables",
              "description": "List all Variables from a WfRun.",
              "requestType": "ListVariablesRequest",
              "requestLongType": "ListVariablesRequest",
              "requestFullType": "littlehorse.ListVariablesRequest",
              "requestStreaming": false,
              "responseType": "VariableList",
              "responseLongType": "VariableList",
              "responseFullType": "littlehorse.VariableList",
              "responseStreaming": false
            },
            {
              "name": "PutExternalEvent",
              "description": "Post an ExternalEvent. This RPC is highly useful for",
              "requestType": "PutExternalEventRequest",
              "requestLongType": "PutExternalEventRequest",
              "requestFullType": "littlehorse.PutExternalEventRequest",
              "requestStreaming": false,
              "responseType": "ExternalEvent",
              "responseLongType": "ExternalEvent",
              "responseFullType": "littlehorse.ExternalEvent",
              "responseStreaming": false
            },
            {
              "name": "GetExternalEvent",
              "description": "Get a specific ExternalEvent.",
              "requestType": "ExternalEventId",
              "requestLongType": "ExternalEventId",
              "requestFullType": "littlehorse.ExternalEventId",
              "requestStreaming": false,
              "responseType": "ExternalEvent",
              "responseLongType": "ExternalEvent",
              "responseFullType": "littlehorse.ExternalEvent",
              "responseStreaming": false
            },
            {
              "name": "AwaitWorkflowEvent",
              "description": "Waits for a WorkflowEvent to be thrown by a given WfRun. Returns immediately if a matching\nWorkflowEvent has already been thrown; throws a DEADLINE_EXCEEDED error if the WorkflowEvent\nis not thrown before the deadline specified by the client.\n\nTo specify the deadline, the client should use GRPC deadlines.",
              "requestType": "AwaitWorkflowEventRequest",
              "requestLongType": "AwaitWorkflowEventRequest",
              "requestFullType": "littlehorse.AwaitWorkflowEventRequest",
              "requestStreaming": false,
              "responseType": "WorkflowEvent",
              "responseLongType": "WorkflowEvent",
              "responseFullType": "littlehorse.WorkflowEvent",
              "responseStreaming": false
            },
            {
              "name": "ListExternalEvents",
              "description": "List ExternalEvent's for a specific WfRun.",
              "requestType": "ListExternalEventsRequest",
              "requestLongType": "ListExternalEventsRequest",
              "requestFullType": "littlehorse.ListExternalEventsRequest",
              "requestStreaming": false,
              "responseType": "ExternalEventList",
              "responseLongType": "ExternalEventList",
              "responseFullType": "littlehorse.ExternalEventList",
              "responseStreaming": false
            },
            {
              "name": "SearchWfRun",
              "description": "Search for WfRun's. This RPC is highly useful for applications that store data\nin LittleHorse and need to find a specific WfRun based on certain indexed fields.",
              "requestType": "SearchWfRunRequest",
              "requestLongType": "SearchWfRunRequest",
              "requestFullType": "littlehorse.SearchWfRunRequest",
              "requestStreaming": false,
              "responseType": "WfRunIdList",
              "responseLongType": "WfRunIdList",
              "responseFullType": "littlehorse.WfRunIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchNodeRun",
              "description": "Search for NodeRun's. This RPC is useful for monitoring and finding bugs in\nyour workflows or Task Workers.",
              "requestType": "SearchNodeRunRequest",
              "requestLongType": "SearchNodeRunRequest",
              "requestFullType": "littlehorse.SearchNodeRunRequest",
              "requestStreaming": false,
              "responseType": "NodeRunIdList",
              "responseLongType": "NodeRunIdList",
              "responseFullType": "littlehorse.NodeRunIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchTaskRun",
              "description": "Search for TaskRun's. This RPC is useful for finding bugs in your Task Workers.",
              "requestType": "SearchTaskRunRequest",
              "requestLongType": "SearchTaskRunRequest",
              "requestFullType": "littlehorse.SearchTaskRunRequest",
              "requestStreaming": false,
              "responseType": "TaskRunIdList",
              "responseLongType": "TaskRunIdList",
              "responseFullType": "littlehorse.TaskRunIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchUserTaskRun",
              "description": "Search for UserTaskRun's. This RPC is highly useful for applications that connect\nhuman end-users to LittleHorse: it enables you to find all tasks assigned to a specific\nperson or group of people.",
              "requestType": "SearchUserTaskRunRequest",
              "requestLongType": "SearchUserTaskRunRequest",
              "requestFullType": "littlehorse.SearchUserTaskRunRequest",
              "requestStreaming": false,
              "responseType": "UserTaskRunIdList",
              "responseLongType": "UserTaskRunIdList",
              "responseFullType": "littlehorse.UserTaskRunIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchVariable",
              "description": "Search for Variable's. This RPC is highly useful for applications that store data\nin LittleHorse and need to find a specific WfRun based on certain indexed fields.",
              "requestType": "SearchVariableRequest",
              "requestLongType": "SearchVariableRequest",
              "requestFullType": "littlehorse.SearchVariableRequest",
              "requestStreaming": false,
              "responseType": "VariableIdList",
              "responseLongType": "VariableIdList",
              "responseFullType": "littlehorse.VariableIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchExternalEvent",
              "description": "Search for ExternalEvent's.",
              "requestType": "SearchExternalEventRequest",
              "requestLongType": "SearchExternalEventRequest",
              "requestFullType": "littlehorse.SearchExternalEventRequest",
              "requestStreaming": false,
              "responseType": "ExternalEventIdList",
              "responseLongType": "ExternalEventIdList",
              "responseFullType": "littlehorse.ExternalEventIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchTaskDef",
              "description": "Search for TaskDef's.",
              "requestType": "SearchTaskDefRequest",
              "requestLongType": "SearchTaskDefRequest",
              "requestFullType": "littlehorse.SearchTaskDefRequest",
              "requestStreaming": false,
              "responseType": "TaskDefIdList",
              "responseLongType": "TaskDefIdList",
              "responseFullType": "littlehorse.TaskDefIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchUserTaskDef",
              "description": "Search for UserTaskDef's.",
              "requestType": "SearchUserTaskDefRequest",
              "requestLongType": "SearchUserTaskDefRequest",
              "requestFullType": "littlehorse.SearchUserTaskDefRequest",
              "requestStreaming": false,
              "responseType": "UserTaskDefIdList",
              "responseLongType": "UserTaskDefIdList",
              "responseFullType": "littlehorse.UserTaskDefIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchWfSpec",
              "description": "Search for WfSpec's.",
              "requestType": "SearchWfSpecRequest",
              "requestLongType": "SearchWfSpecRequest",
              "requestFullType": "littlehorse.SearchWfSpecRequest",
              "requestStreaming": false,
              "responseType": "WfSpecIdList",
              "responseLongType": "WfSpecIdList",
              "responseFullType": "littlehorse.WfSpecIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchExternalEventDef",
              "description": "Search for ExternalEventDef's.",
              "requestType": "SearchExternalEventDefRequest",
              "requestLongType": "SearchExternalEventDefRequest",
              "requestFullType": "littlehorse.SearchExternalEventDefRequest",
              "requestStreaming": false,
              "responseType": "ExternalEventDefIdList",
              "responseLongType": "ExternalEventDefIdList",
              "responseFullType": "littlehorse.ExternalEventDefIdList",
              "responseStreaming": false
            },
            {
              "name": "SearchTenant",
              "description": "Search for all available TenantIds for current Principal",
              "requestType": "SearchTenantRequest",
              "requestLongType": "SearchTenantRequest",
              "requestFullType": "littlehorse.SearchTenantRequest",
              "requestStreaming": false,
              "responseType": "TenantIdList",
              "responseLongType": "TenantIdList",
              "responseFullType": "littlehorse.TenantIdList",
              "responseStreaming": false
            },
            {
              "name": "RegisterTaskWorker",
              "description": "Used by the Task Worker to:\n1. Tell the LH Server that the Task Worker has joined the Task Worker Group.\n2. Receive the assignemnt of LH Server's to poll from.\nGenerally, you won't use this request manually.",
              "requestType": "RegisterTaskWorkerRequest",
              "requestLongType": "RegisterTaskWorkerRequest",
              "requestFullType": "littlehorse.RegisterTaskWorkerRequest",
              "requestStreaming": false,
              "responseType": "RegisterTaskWorkerResponse",
              "responseLongType": "RegisterTaskWorkerResponse",
              "responseFullType": "littlehorse.RegisterTaskWorkerResponse",
              "responseStreaming": false
            },
            {
              "name": "PollTask",
              "description": "Used by Task Workers to listen for TaskRuns on the Task Queue. Generally, you won't\nuse this RPC manually.",
              "requestType": "PollTaskRequest",
              "requestLongType": "PollTaskRequest",
              "requestFullType": "littlehorse.PollTaskRequest",
              "requestStreaming": true,
              "responseType": "PollTaskResponse",
              "responseLongType": "PollTaskResponse",
              "responseFullType": "littlehorse.PollTaskResponse",
              "responseStreaming": true
            },
            {
              "name": "ReportTask",
              "description": "Used by Task Workers to report the result of a TaskRun. Generally, you won't use\nthis rpc manually.",
              "requestType": "ReportTaskRun",
              "requestLongType": "ReportTaskRun",
              "requestFullType": "littlehorse.ReportTaskRun",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "StopWfRun",
              "description": "Move a WfRun or a specific ThreadRun in that WfRun to the HALTED state.",
              "requestType": "StopWfRunRequest",
              "requestLongType": "StopWfRunRequest",
              "requestFullType": "littlehorse.StopWfRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "ResumeWfRun",
              "description": "Resumes a WfRun or a specific ThreadRun of a WfRun.",
              "requestType": "ResumeWfRunRequest",
              "requestLongType": "ResumeWfRunRequest",
              "requestFullType": "littlehorse.ResumeWfRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "DeleteWfRun",
              "description": "Deletes a WfRun. The WfRun cannot be in the RUNNING state.",
              "requestType": "DeleteWfRunRequest",
              "requestLongType": "DeleteWfRunRequest",
              "requestFullType": "littlehorse.DeleteWfRunRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "DeleteTaskDef",
              "description": "Deletes a TaskDef.",
              "requestType": "DeleteTaskDefRequest",
              "requestLongType": "DeleteTaskDefRequest",
              "requestFullType": "littlehorse.DeleteTaskDefRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "DeleteWfSpec",
              "description": "Deletes a WfSpec.",
              "requestType": "DeleteWfSpecRequest",
              "requestLongType": "DeleteWfSpecRequest",
              "requestFullType": "littlehorse.DeleteWfSpecRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "DeleteUserTaskDef",
              "description": "Deletes a UserTaskDef.",
              "requestType": "DeleteUserTaskDefRequest",
              "requestLongType": "DeleteUserTaskDefRequest",
              "requestFullType": "littlehorse.DeleteUserTaskDefRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "DeleteExternalEventDef",
              "description": "Deletes an ExternalEventDef.",
              "requestType": "DeleteExternalEventDefRequest",
              "requestLongType": "DeleteExternalEventDefRequest",
              "requestFullType": "littlehorse.DeleteExternalEventDefRequest",
              "requestStreaming": false,
              "responseType": "Empty",
              "responseLongType": ".google.protobuf.Empty",
              "responseFullType": "google.protobuf.Empty",
              "responseStreaming": false
            },
            {
              "name": "GetTaskDefMetricsWindow",
              "description": "Returns TaskDef Metrics for a specific TaskDef and a specific time window.",
              "requestType": "TaskDefMetricsQueryRequest",
              "requestLongType": "TaskDefMetricsQueryRequest",
              "requestFullType": "littlehorse.TaskDefMetricsQueryRequest",
              "requestStreaming": false,
              "responseType": "TaskDefMetrics",
              "responseLongType": "TaskDefMetrics",
              "responseFullType": "littlehorse.TaskDefMetrics",
              "responseStreaming": false
            },
            {
              "name": "GetWfSpecMetricsWindow",
              "description": "Returns WfSpec Metrics for a specific WfSpec and a specific time window.",
              "requestType": "WfSpecMetricsQueryRequest",
              "requestLongType": "WfSpecMetricsQueryRequest",
              "requestFullType": "littlehorse.WfSpecMetricsQueryRequest",
              "requestStreaming": false,
              "responseType": "WfSpecMetrics",
              "responseLongType": "WfSpecMetrics",
              "responseFullType": "littlehorse.WfSpecMetrics",
              "responseStreaming": false
            },
            {
              "name": "ListTaskDefMetrics",
              "description": "Returns a list of TaskDef Metrics Windows.",
              "requestType": "ListTaskMetricsRequest",
              "requestLongType": "ListTaskMetricsRequest",
              "requestFullType": "littlehorse.ListTaskMetricsRequest",
              "requestStreaming": false,
              "responseType": "ListTaskMetricsResponse",
              "responseLongType": "ListTaskMetricsResponse",
              "responseFullType": "littlehorse.ListTaskMetricsResponse",
              "responseStreaming": false
            },
            {
              "name": "ListWfSpecMetrics",
              "description": "Returns a list of WfSpec Metrics Windows.",
              "requestType": "ListWfMetricsRequest",
              "requestLongType": "ListWfMetricsRequest",
              "requestFullType": "littlehorse.ListWfMetricsRequest",
              "requestStreaming": false,
              "responseType": "ListWfMetricsResponse",
              "responseLongType": "ListWfMetricsResponse",
              "responseFullType": "littlehorse.ListWfMetricsResponse",
              "responseStreaming": false
            },
            {
              "name": "PutTenant",
              "description": "EXPERIMENTAL: Creates another Tenant in the LH Server.",
              "requestType": "PutTenantRequest",
              "requestLongType": "PutTenantRequest",
              "requestFullType": "littlehorse.PutTenantRequest",
              "requestStreaming": false,
              "responseType": "Tenant",
              "responseLongType": "Tenant",
              "responseFullType": "littlehorse.Tenant",
              "responseStreaming": false
            },
            {
              "name": "PutPrincipal",
              "description": "EXPERIMENTAL: Creates an Principal.",
              "requestType": "PutPrincipalRequest",
              "requestLongType": "PutPrincipalRequest",
              "requestFullType": "littlehorse.PutPrincipalRequest",
              "requestStreaming": false,
              "responseType": "Principal",
              "responseLongType": "Principal",
              "responseFullType": "littlehorse.Principal",
              "responseStreaming": false
            },
            {
              "name": "Whoami",
              "description": "Returns the Principal of the caller.",
              "requestType": "Empty",
              "requestLongType": ".google.protobuf.Empty",
              "requestFullType": "google.protobuf.Empty",
              "requestStreaming": false,
              "responseType": "Principal",
              "responseLongType": "Principal",
              "responseFullType": "littlehorse.Principal",
              "responseStreaming": false
            },
            {
              "name": "GetServerVersion",
              "description": "Gets the version of the LH Server.",
              "requestType": "Empty",
              "requestLongType": ".google.protobuf.Empty",
              "requestFullType": "google.protobuf.Empty",
              "requestStreaming": false,
              "responseType": "ServerVersionResponse",
              "responseLongType": "ServerVersionResponse",
              "responseFullType": "littlehorse.ServerVersionResponse",
              "responseStreaming": false
            }
          ]
        }
      ]
    },
    {
      "name": "task_def.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "TaskDef",
          "longName": "TaskDef",
          "fullName": "littlehorse.TaskDef",
          "description": "A TaskDef defines a blueprint for a TaskRun that can be dispatched to Task Workers.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of this TaskDef.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "input_vars",
              "description": "The input variables required to execute this TaskDef.",
              "label": "repeated",
              "type": "VariableDef",
              "longType": "VariableDef",
              "fullType": "littlehorse.VariableDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "The time at which this TaskDef was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "task_run.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "LHTaskError",
          "longName": "LHTaskError",
          "fullName": "littlehorse.LHTaskError",
          "description": "Message denoting a TaskRun failed for technical reasons.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "type",
              "description": "The technical error code.",
              "label": "",
              "type": "LHErrorType",
              "longType": "LHErrorType",
              "fullType": "littlehorse.LHErrorType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "Human readable message for debugging.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "LHTaskException",
          "longName": "LHTaskException",
          "fullName": "littlehorse.LHTaskException",
          "description": "Message denoting a TaskRun's execution signaled that something went wrong in the\nbusiness process, throwing a littlehorse 'EXCEPTION'.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The user-defined Failure name, for example, \"credit-card-declined\"",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "Human readadble description of the failure.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskAttempt",
          "longName": "TaskAttempt",
          "fullName": "littlehorse.TaskAttempt",
          "description": "A single time that a TaskRun was scheduled for execution on a Task Queue.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "log_output",
              "description": "Optional information provided by the Task Worker SDK for debugging. Usually, if set\nit contains a stacktrace or it contains information logged via `WorkerContext#log()`.",
              "label": "optional",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_log_output",
              "defaultValue": ""
            },
            {
              "name": "schedule_time",
              "description": "The time the TaskAttempt was scheduled on the Task Queue. Not set for a TaskAttempt that is\nin the TASK_PENDING status; for example, when waiting between retries with exponential\nbackoff.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_schedule_time",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "The time the TaskAttempt was pulled off the queue and sent to a TaskWorker.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_start_time",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "The time the TaskAttempt was finished (either completed, reported as failed, or\ntimed out)",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_time",
              "defaultValue": ""
            },
            {
              "name": "task_worker_id",
              "description": "EXPERIMENTAL: the ID of the Task Worker who executed this TaskRun.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_worker_version",
              "description": "The version of the Task Worker that executed the TaskAttempt.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_task_worker_version",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of this TaskAttempt.",
              "label": "",
              "type": "TaskStatus",
              "longType": "TaskStatus",
              "fullType": "littlehorse.TaskStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "output",
              "description": "Denotes the Task Function executed properly and returned an output.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "error",
              "description": "An unexpected technical error was encountered. May or may not be retriable.",
              "label": "",
              "type": "LHTaskError",
              "longType": "LHTaskError",
              "fullType": "littlehorse.LHTaskError",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            },
            {
              "name": "exception",
              "description": "The Task Function encountered a business problem and threw a technical exception.",
              "label": "",
              "type": "LHTaskException",
              "longType": "LHTaskException",
              "fullType": "littlehorse.LHTaskException",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "result",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskNodeReference",
          "longName": "TaskNodeReference",
          "fullName": "littlehorse.TaskNodeReference",
          "description": "Reference to a NodeRun of type TASK which caused a TaskRun to be scheduled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_run_id",
              "description": "The ID of the NodeRun which caused this TASK to be scheduled.",
              "label": "",
              "type": "NodeRunId",
              "longType": "NodeRunId",
              "fullType": "littlehorse.NodeRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskRun",
          "longName": "TaskRun",
          "fullName": "littlehorse.TaskRun",
          "description": "A TaskRun resents a single instance of a TaskDef being executed.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the TaskRun. Note that the TaskRunId contains the WfRunId.",
              "label": "",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_def_id",
              "description": "The ID of the TaskDef being executed.",
              "label": "",
              "type": "TaskDefId",
              "longType": "TaskDefId",
              "fullType": "littlehorse.TaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "attempts",
              "description": "All attempts scheduled for this TaskRun. A TaskAttempt represents an occurrence of\nthe TaskRun being put on a Task Queue to be executed by the Task Workers.",
              "label": "repeated",
              "type": "TaskAttempt",
              "longType": "TaskAttempt",
              "fullType": "littlehorse.TaskAttempt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "input_variables",
              "description": "The input variables to pass into this TaskRun. Note that this is a list and not\na map, because ordering matters. Depending on the language implementation, not\nevery LittleHorse Task Worker SDK has the ability to determine the names of the\nvariables from the method signature, so we provide both names and ordering.",
              "label": "repeated",
              "type": "VarNameAndVal",
              "longType": "VarNameAndVal",
              "fullType": "littlehorse.VarNameAndVal",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "source",
              "description": "The source (in the WfRun) that caused this TaskRun to be created. Currently, this\ncan be either a TASK node, or a User Task Action Task Trigger in a USER_TASK node (such\nas a task used to send reminders).",
              "label": "",
              "type": "TaskRunSource",
              "longType": "TaskRunSource",
              "fullType": "littlehorse.TaskRunSource",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "scheduled_at",
              "description": "When the TaskRun was scheduled.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the TaskRun.",
              "label": "",
              "type": "TaskStatus",
              "longType": "TaskStatus",
              "fullType": "littlehorse.TaskStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timeout_seconds",
              "description": "The timeout before LH considers a TaskAttempt to be timed out.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "total_attempts",
              "description": "The maximum number of attempts that may be scheduled for this TaskRun. NOTE: setting\ntotal_attempts to 1 means that there are no retries.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "exponential_backoff",
              "description": "Optional backoff policy .",
              "label": "optional",
              "type": "ExponentialBackoffRetryPolicy",
              "longType": "ExponentialBackoffRetryPolicy",
              "fullType": "littlehorse.ExponentialBackoffRetryPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_exponential_backoff",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "TaskRunSource",
          "longName": "TaskRunSource",
          "fullName": "littlehorse.TaskRunSource",
          "description": "The source of a TaskRun; i.e. why it was scheduled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "task_node",
              "description": "Reference to a NodeRun of type TASK which scheduled this TaskRun.",
              "label": "",
              "type": "TaskNodeReference",
              "longType": "TaskNodeReference",
              "fullType": "littlehorse.TaskNodeReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "task_run_source",
              "defaultValue": ""
            },
            {
              "name": "user_task_trigger",
              "description": "Reference to the specific UserTaskRun trigger action which scheduled this TaskRun",
              "label": "",
              "type": "UserTaskTriggerReference",
              "longType": "UserTaskTriggerReference",
              "fullType": "littlehorse.UserTaskTriggerReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "task_run_source",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_id",
              "description": "The ID of the WfSpec that is being executed. Always set in ScheduledTask.source so\nthat the WorkerContext can know this information.",
              "label": "optional",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_wf_spec_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VarNameAndVal",
          "longName": "VarNameAndVal",
          "fullName": "littlehorse.VarNameAndVal",
          "description": "A key-value pair of variable name and value.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "var_name",
              "description": "The variable name.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The value of the variable for this TaskRun.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "user_tasks.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "UserTaskRunStatus",
          "longName": "UserTaskRunStatus",
          "fullName": "littlehorse.UserTaskRunStatus",
          "description": "The status that a UserTaskRun can be in.",
          "values": [
            {
              "name": "UNASSIGNED",
              "number": "0",
              "description": "Not assigned to a specific user yet."
            },
            {
              "name": "ASSIGNED",
              "number": "1",
              "description": "Assigned to a specific user, but not completed or cancelled yet."
            },
            {
              "name": "DONE",
              "number": "3",
              "description": "Done."
            },
            {
              "name": "CANCELLED",
              "number": "4",
              "description": "Cancelled."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "AssignUserTaskRunRequest",
          "longName": "AssignUserTaskRunRequest",
          "fullName": "littlehorse.AssignUserTaskRunRequest",
          "description": "Re-Assigns a UserTaskRun to a specific userId or userGroup.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "user_task_run_id",
              "description": "The UserTaskRun to assign to a new user_id or user_group.",
              "label": "",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "override_claim",
              "description": "If override_claim is set to false and the UserTaskRun is already assigned to\na user_id, then the request throws a FAILED_PRECONDITION error. If set to\ntrue, then the old claim is overriden and the UserTaskRun is assigned to\nthe new user.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "The new user_group to which the UserTaskRun is assigned. If not set, then\nthe user_group of the UserTaskRun is actively unset by this request. At least\none of the user_group and user_id must be set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "The new user_id to which the UserTaskRun is assigned. If not set, then\nthe user_id of the UserTaskRun is actively unset by this request. At least\none of the user_group and user_id must be set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CancelUserTaskRunRequest",
          "longName": "CancelUserTaskRunRequest",
          "fullName": "littlehorse.CancelUserTaskRunRequest",
          "description": "Cancels a UserTaskRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "user_task_run_id",
              "description": "The id of the UserTaskRun to cancel.",
              "label": "",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "CompleteUserTaskRunRequest",
          "longName": "CompleteUserTaskRunRequest",
          "fullName": "littlehorse.CompleteUserTaskRunRequest",
          "description": "Completes a UserTaskRun with provided values.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "user_task_run_id",
              "description": "The id of UserTaskRun to complete.",
              "label": "",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "results",
              "description": "A map from UserTaskField.name to a VariableValue containing the results of the\nuser filling out the form.",
              "label": "repeated",
              "type": "ResultsEntry",
              "longType": "CompleteUserTaskRunRequest.ResultsEntry",
              "fullType": "littlehorse.CompleteUserTaskRunRequest.ResultsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "The ID of the user who executed the task.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResultsEntry",
          "longName": "CompleteUserTaskRunRequest.ResultsEntry",
          "fullName": "littlehorse.CompleteUserTaskRunRequest.ResultsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskDef",
          "longName": "UserTaskDef",
          "fullName": "littlehorse.UserTaskDef",
          "description": "UserTaskDef is the metadata blueprint for UserTaskRuns.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the `UserTaskDef`",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "version",
              "description": "The version of the `UserTaskDef`. Only simple versioning is supported.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Metadata field that does not impact WfRun execution. Useful for providing\ncontext on the UserTaskRun, for example when displaying it on a general-purpose\ntask manager application.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "fields",
              "description": "These are the fields comprise the User Task. A User Task Manager application, or\nany application used to complete a UserTaskRun, should inspect these fields and\ndisplay form entries for each one.",
              "label": "repeated",
              "type": "UserTaskField",
              "longType": "UserTaskField",
              "fullType": "littlehorse.UserTaskField",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "The time the UserTaskRun was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskEvent",
          "longName": "UserTaskEvent",
          "fullName": "littlehorse.UserTaskEvent",
          "description": "This is an event stored in the audit log of a `UserTaskRun` purely for observability\npurposes.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "time",
              "description": "the time the event occurred.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "task_executed",
              "description": "Denotes that a TaskRun was scheduled via a trigger.",
              "label": "",
              "type": "UTETaskExecuted",
              "longType": "UserTaskEvent.UTETaskExecuted",
              "fullType": "littlehorse.UserTaskEvent.UTETaskExecuted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "assigned",
              "description": "Denotes that the UserTaskRun was assigned.",
              "label": "",
              "type": "UTEAssigned",
              "longType": "UserTaskEvent.UTEAssigned",
              "fullType": "littlehorse.UserTaskEvent.UTEAssigned",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            },
            {
              "name": "cancelled",
              "description": "Denotes that the UserTaskRun was cancelled.\n\nTODO: Add \"save user task\" and \"complete user task\" to the\naudit log",
              "label": "",
              "type": "UTECancelled",
              "longType": "UserTaskEvent.UTECancelled",
              "fullType": "littlehorse.UserTaskEvent.UTECancelled",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "event",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTEAssigned",
          "longName": "UserTaskEvent.UTEAssigned",
          "fullName": "littlehorse.UserTaskEvent.UTEAssigned",
          "description": "Message denoting that the UserTaskRun was assigned.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "old_user_id",
              "description": "The user_id before the ownership change, if set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_old_user_id",
              "defaultValue": ""
            },
            {
              "name": "old_user_group",
              "description": "The user_group before the ownership change, if set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_old_user_group",
              "defaultValue": ""
            },
            {
              "name": "new_user_id",
              "description": "The user_id after the ownership change, if set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_new_user_id",
              "defaultValue": ""
            },
            {
              "name": "new_user_group",
              "description": "The user_group after the ownership change, if set.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_new_user_group",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTECancelled",
          "longName": "UserTaskEvent.UTECancelled",
          "fullName": "littlehorse.UserTaskEvent.UTECancelled",
          "description": "Empty message used to denote that the `UserTaskRun` was cancelled.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UTETaskExecuted",
          "longName": "UserTaskEvent.UTETaskExecuted",
          "fullName": "littlehorse.UserTaskEvent.UTETaskExecuted",
          "description": "Message to denote that a `TaskRun` was scheduled by a trigger for this UserTaskRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "task_run",
              "description": "The `TaskRunId` of the scheduled `TaskRun`",
              "label": "",
              "type": "TaskRunId",
              "longType": "TaskRunId",
              "fullType": "littlehorse.TaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskField",
          "longName": "UserTaskField",
          "fullName": "littlehorse.UserTaskField",
          "description": "A UserTaskField is a specific field of data to be entered into a UserTaskRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "name",
              "description": "The name of the field. When a UserTaskRun is completed, the NodeOutput is a\nsingle-level JSON_OBJ. Each key is the name of the field. Must be unique.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The type of the output. Must be a primitive type (STR, BOOL, INT, DOUBLE).",
              "label": "",
              "type": "VariableType",
              "longType": "VariableType",
              "fullType": "littlehorse.VariableType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "description",
              "description": "Optional description which can be displayed by the User Task UI application.\nDoes not affect WfRun execution.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_description",
              "defaultValue": ""
            },
            {
              "name": "display_name",
              "description": "The name to be displayed by the User Task UI application. Does not affect\nWfRun execution.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required",
              "description": "Whether this field is required for UserTaskRun completion.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskRun",
          "longName": "UserTaskRun",
          "fullName": "littlehorse.UserTaskRun",
          "description": "A UserTaskRun is a running instance of a UserTaskDef. It is created when a\nThreadRun arrives at a Node of type `USER_TASK`.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the UserTaskRun.",
              "label": "",
              "type": "UserTaskRunId",
              "longType": "UserTaskRunId",
              "fullType": "littlehorse.UserTaskRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_task_def_id",
              "description": "The ID of the UserTaskDef that this UserTaskRun comes from.",
              "label": "",
              "type": "UserTaskDefId",
              "longType": "UserTaskDefId",
              "fullType": "littlehorse.UserTaskDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "The user_group to which this UserTaskRun is assigned. Not Set if not assigned\nto a group. At least one of user_group or user_id will be set for any given\nUserTaskRun.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "The user_id to which this UserTaskRun is assigned. Not Set if not assigned\nto a user. At least one of user_group or user_id will be set for any given\nUserTaskRun. If user_id is set, then the UserTaskRun cannot be in the\nUNASSIGNED status.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            },
            {
              "name": "results",
              "description": "The results of the UserTaskRun. Empty if the UserTaskRun has not yet been completed.\nEach key in this map is the `name` of a corresponding `UserTaskField` on the\nUserTaskDef.",
              "label": "repeated",
              "type": "ResultsEntry",
              "longType": "UserTaskRun.ResultsEntry",
              "fullType": "littlehorse.UserTaskRun.ResultsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "Status of the UserTaskRun. Can be UNASSIGNED, ASSIGNED, DONE, or CANCELLED.",
              "label": "",
              "type": "UserTaskRunStatus",
              "longType": "UserTaskRunStatus",
              "fullType": "littlehorse.UserTaskRunStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "events",
              "description": "A list of events that have happened. Used for auditing information.",
              "label": "repeated",
              "type": "UserTaskEvent",
              "longType": "UserTaskEvent",
              "fullType": "littlehorse.UserTaskEvent",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "notes",
              "description": "Notes about this UserTaskRun that are **specific to the WfRun**. These notes\nare set by the WfSpec based on variables inside the specific `WfRun` and are\nintended to be displayed on the User Task Manager application. They do not\naffect WfRun execution.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_notes",
              "defaultValue": ""
            },
            {
              "name": "scheduled_time",
              "description": "The time that the UserTaskRun was created/scheduled.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_run_id",
              "description": "The NodeRun with which the UserTaskRun is associated.",
              "label": "",
              "type": "NodeRunId",
              "longType": "NodeRunId",
              "fullType": "littlehorse.NodeRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "epoch",
              "description": "Current observed epoch of the UserTaskRun, related to the number of times it has been\nupdated or re-assigned. Used internally to implement automated reassignment and reminder\ntasks.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ResultsEntry",
          "longName": "UserTaskRun.ResultsEntry",
          "fullName": "littlehorse.UserTaskRun.ResultsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskTriggerReference",
          "longName": "UserTaskTriggerReference",
          "fullName": "littlehorse.UserTaskTriggerReference",
          "description": "All TaskRun's have a \"trigger reference\" which refers to the WfRun Element that\ncaused the TaskRun to be scheduled. For example, a TaskRun on a regular TASK_NODE\nhas a TaskNodeReference.\n\nThe UserTaskTriggerReference serves as the \"Trigger Reference\" for a TaskRun that\nwas scheduled by a lifecycle hook on a UserTaskRun (eg. a reminder task).\n\nThe UserTaskTriggerReference is most useful in the WorkerContext of the Task Worker\nSDK, which allows the Task Method to determine where the TaskRun comes from.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "node_run_id",
              "description": "Is the NodeRun that the UserTaskRun belongs to.",
              "label": "",
              "type": "NodeRunId",
              "longType": "NodeRunId",
              "fullType": "littlehorse.NodeRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_task_event_number",
              "description": "Is the index in the `events` field of the UserTaskRun that the TaskRun corresponds\nto.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "Is the user_id that the UserTaskRun is assigned to. Unset if UserTaskRun is not\nasigned to a specific user_id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "Is the user_id that the UserTaskRun is assigned to. Unset if UserTaskRun is not\nasigned to a specific user_id.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "variable.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "Variable",
          "longName": "Variable",
          "fullName": "littlehorse.Variable",
          "description": "A Variable is an instance of a variable assigned to a WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "ID of this Variable. Note that the VariableId contains the relevant\nWfRunId inside it, the threadRunNumber, and the name of the Variabe.",
              "label": "",
              "type": "VariableId",
              "longType": "VariableId",
              "fullType": "littlehorse.VariableId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "The value of this Variable.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "When the Variable was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_id",
              "description": "The ID of the WfSpec that this Variable belongs to.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariableValue",
          "longName": "VariableValue",
          "fullName": "littlehorse.VariableValue",
          "description": "VariableValue is a structure containing a value in LittleHorse. It can be\nused to pass input variables into a WfRun/ThreadRun/TaskRun/etc, as output\nfrom a TaskRun, as the value of a WfRun's Variable, etc.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "json_obj",
              "description": "A String representing a serialized json object.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "json_arr",
              "description": "A String representing a serialized json list.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "double",
              "description": "A 64-bit floating point number.",
              "label": "",
              "type": "double",
              "longType": "double",
              "fullType": "double",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "bool",
              "description": "A boolean.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "str",
              "description": "A string.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "int",
              "description": "A 64-bit integer.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            },
            {
              "name": "bytes",
              "description": "An arbitrary String of bytes.",
              "label": "",
              "type": "bytes",
              "longType": "bytes",
              "fullType": "bytes",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "value",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "wf_run.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "ThreadType",
          "longName": "ThreadType",
          "fullName": "littlehorse.ThreadType",
          "description": "The type of a ThreadRUn.",
          "values": [
            {
              "name": "ENTRYPOINT",
              "number": "0",
              "description": "The ENTRYPOINT ThreadRun. Exactly one per WfRun. Always has number == 0."
            },
            {
              "name": "CHILD",
              "number": "1",
              "description": "A ThreadRun explicitly created by another ThreadRun via a START_THREAD or START_MULTIPLE_THREADS\nNodeRun."
            },
            {
              "name": "INTERRUPT",
              "number": "2",
              "description": "A ThreadRun that was created to handle an Interrupt."
            },
            {
              "name": "FAILURE_HANDLER",
              "number": "3",
              "description": "A ThreadRun that was created to handle a Failure."
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "FailureBeingHandled",
          "longName": "FailureBeingHandled",
          "fullName": "littlehorse.FailureBeingHandled",
          "description": "Points to the Failure that is currently being handled in the ThreadRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "thread_run_number",
              "description": "The thread run number.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_run_position",
              "description": "The position of the NodeRun causing the failure.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failure_number",
              "description": "The number of the failure.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "HandlingFailureHaltReason",
          "longName": "HandlingFailureHaltReason",
          "fullName": "littlehorse.HandlingFailureHaltReason",
          "description": "A Halt Reason denoting that a ThreadRun is halted while a Failure Handler is being run.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "handler_thread_id",
              "description": "The ID of the Failure Handler ThreadRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Interrupted",
          "longName": "Interrupted",
          "fullName": "littlehorse.Interrupted",
          "description": "A Halt Reason denoting that a ThreadRun is halted because it is waiting for the\ninterrupt handler threadRun to run.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "interrupt_thread_id",
              "description": "The ID of the Interrupt Handler ThreadRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ManualHalt",
          "longName": "ManualHalt",
          "fullName": "littlehorse.ManualHalt",
          "description": "A Halt Reason denoting that a ThreadRun was halted manually, via the `rpc StopWfRun` request.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "meaning_of_life",
              "description": "Nothing to store.",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ParentHalted",
          "longName": "ParentHalted",
          "fullName": "littlehorse.ParentHalted",
          "description": "A Halt Reason denoting that a ThreadRun is halted because its parent is also HALTED.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "parent_thread_id",
              "description": "The ID of the halted parent.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingFailureHandler",
          "longName": "PendingFailureHandler",
          "fullName": "littlehorse.PendingFailureHandler",
          "description": "Represents a Failure Handler that is pending to be run.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "failed_thread_run",
              "description": "The ThreadRun that failed.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "handler_spec_name",
              "description": "The name of the ThreadSpec to run to handle the failure.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingFailureHandlerHaltReason",
          "longName": "PendingFailureHandlerHaltReason",
          "fullName": "littlehorse.PendingFailureHandlerHaltReason",
          "description": "A Halt Reason denoting that a ThreadRun is halted while a Failure Handler is *enqueued* to be\nrun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "node_run_position",
              "description": "The position of the NodeRun which threw the failure.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingInterrupt",
          "longName": "PendingInterrupt",
          "fullName": "littlehorse.PendingInterrupt",
          "description": "Represents an ExternalEvent that has a registered Interrupt Handler for it\nand which is pending to be sent to the relevant ThreadRun's.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_id",
              "description": "The ID of the ExternalEvent triggering the Interrupt.",
              "label": "",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "handler_spec_name",
              "description": "The name of the ThreadSpec to run to handle the Interrupt.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interrupted_thread_id",
              "description": "The ID of the ThreadRun to interrupt. Must wait for this ThreadRun to be\nHALTED before running the Interrupt Handler.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "PendingInterruptHaltReason",
          "longName": "PendingInterruptHaltReason",
          "fullName": "littlehorse.PendingInterruptHaltReason",
          "description": "A Halt Reason denoting that a ThreadRun is halted while waiting for an Interrupt handler\nto be run.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_id",
              "description": "The ExternalEventId that caused the Interrupt.",
              "label": "",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadHaltReason",
          "longName": "ThreadHaltReason",
          "fullName": "littlehorse.ThreadHaltReason",
          "description": "Denotes a reason why a ThreadRun is halted. See `ThreadRun.halt_reasons` for context.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "parent_halted",
              "description": "Parent threadRun halted.",
              "label": "",
              "type": "ParentHalted",
              "longType": "ParentHalted",
              "fullType": "littlehorse.ParentHalted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            },
            {
              "name": "interrupted",
              "description": "Handling an Interrupt.",
              "label": "",
              "type": "Interrupted",
              "longType": "Interrupted",
              "fullType": "littlehorse.Interrupted",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            },
            {
              "name": "pending_interrupt",
              "description": "Waiting to handle Interrupt.",
              "label": "",
              "type": "PendingInterruptHaltReason",
              "longType": "PendingInterruptHaltReason",
              "fullType": "littlehorse.PendingInterruptHaltReason",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            },
            {
              "name": "pending_failure",
              "description": "Waiting to handle a failure.",
              "label": "",
              "type": "PendingFailureHandlerHaltReason",
              "longType": "PendingFailureHandlerHaltReason",
              "fullType": "littlehorse.PendingFailureHandlerHaltReason",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            },
            {
              "name": "handling_failure",
              "description": "Handling a failure.",
              "label": "",
              "type": "HandlingFailureHaltReason",
              "longType": "HandlingFailureHaltReason",
              "fullType": "littlehorse.HandlingFailureHaltReason",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            },
            {
              "name": "manual_halt",
              "description": "Manually stopped the WfRun.",
              "label": "",
              "type": "ManualHalt",
              "longType": "ManualHalt",
              "fullType": "littlehorse.ManualHalt",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "reason",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadRun",
          "longName": "ThreadRun",
          "fullName": "littlehorse.ThreadRun",
          "description": "A ThreadRun is a running thread of execution within a WfRun.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_id",
              "description": "The current WfSpecId of this ThreadRun. This must be set explicitly because\nduring a WfSpec Version Migration, it is possible for different ThreadSpec's to\nhave different WfSpec versions.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "number",
              "description": "The number of the ThreadRun. This is an auto-incremented integer corresponding to\nthe chronological ordering of when the ThreadRun's were created. If you have not\nconfigured any retention policy for the ThreadRun's (i.e. never clean them up), then\nthis also corresponds to the position of the ThreadRun in the WfRun's `thread_runs`\nlist.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of the ThreadRun.",
              "label": "",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_spec_name",
              "description": "The name of the ThreadSpec being run.",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "The time the ThreadRun was started.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "The time the ThreadRun was completed or failed. Unset if still active.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_time",
              "defaultValue": ""
            },
            {
              "name": "error_message",
              "description": "Human-readable error message detailing what went wrong in the case of a failure.",
              "label": "optional",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_error_message",
              "defaultValue": ""
            },
            {
              "name": "child_thread_ids",
              "description": "List of thread_run_number's for all child thread_runs.",
              "label": "repeated",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "parent_thread_id",
              "description": "Set for every ThreadRun except the ENTRYPOINT. This is the id of the parent thread.",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_thread_id",
              "defaultValue": ""
            },
            {
              "name": "halt_reasons",
              "description": "If the ThreadRun is HALTED, this contains a list of every reason for which the\nThreadRun is HALTED. Once every reason is \"resolved\" (and thus removed from the list),\nthen the ThreadRun will return to the RUNNING state.",
              "label": "repeated",
              "type": "ThreadHaltReason",
              "longType": "ThreadHaltReason",
              "fullType": "littlehorse.ThreadHaltReason",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interrupt_trigger_id",
              "description": "If this ThreadRun is of type INTERRUPT_HANDLER, this field is set to the ID of the\nExternalEvent that caused the Interrupt.",
              "label": "optional",
              "type": "ExternalEventId",
              "longType": "ExternalEventId",
              "fullType": "littlehorse.ExternalEventId",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_interrupt_trigger_id",
              "defaultValue": ""
            },
            {
              "name": "failure_being_handled",
              "description": "If this ThreadRun is of type FAILURE_HANDLER, this field is set to the exact Failure\nthat is being handled by this ThreadRun.",
              "label": "optional",
              "type": "FailureBeingHandled",
              "longType": "FailureBeingHandled",
              "fullType": "littlehorse.FailureBeingHandled",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_failure_being_handled",
              "defaultValue": ""
            },
            {
              "name": "current_node_position",
              "description": "This is the current `position` of the current NodeRun being run. This is an\nauto-incremented field that gets incremented every time we run a new NodeRun.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "handled_failed_children",
              "description": "List of every child ThreadRun which both a) failed, and b) was properly handled by a\nFailure Handler.\n\nThis is important because at the EXIT node, if a Child ThreadRun was discovered to have\nfailed, then this ThreadRun (the parent) also fails with the same failure as the child.\nIf, however, a Failure Handler had previously \"handled\" the Child Failure, that ThreadRun's\nnumber is appended to this list, and then the EXIT node ignores that ThreadRun.",
              "label": "repeated",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "The Type of this ThreadRun.",
              "label": "",
              "type": "ThreadType",
              "longType": "ThreadType",
              "fullType": "littlehorse.ThreadType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfRun",
          "longName": "WfRun",
          "fullName": "littlehorse.WfRun",
          "description": "A WfRun is a running instance of a WfSpec.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the WfRun.",
              "label": "",
              "type": "WfRunId",
              "longType": "WfRunId",
              "fullType": "littlehorse.WfRunId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_id",
              "description": "The ID of the WfSpec that this WfRun belongs to.",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "old_wf_spec_versions",
              "description": "When a WfRun is migrated from an old verison of a WfSpec to a newer one, we add the\nold WfSpecId to this list for historical auditing and debugging purposes.",
              "label": "repeated",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "The status of this WfRun.",
              "label": "",
              "type": "LHStatus",
              "longType": "LHStatus",
              "fullType": "littlehorse.LHStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "greatest_threadrun_number",
              "description": "The ID number of the greatest ThreadRUn in this WfRun. The total number of ThreadRuns\nis given by greatest_thread_run_number + 1.\n\nIntroduced now since with ThreadRun-level retention, we can't rely upon\nthread_runs.size() to determine the number of ThreadRuns, as a ThreadRun is removed\nfrom the thread_runs list once its retention period expires.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "start_time",
              "description": "The time the WfRun was started.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "end_time",
              "description": "The time the WfRun failed or completed.",
              "label": "optional",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_end_time",
              "defaultValue": ""
            },
            {
              "name": "thread_runs",
              "description": "A list of all active ThreadRun's and terminated ThreadRun's whose retention periods\nhave not yet expired.",
              "label": "repeated",
              "type": "ThreadRun",
              "longType": "ThreadRun",
              "fullType": "littlehorse.ThreadRun",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_interrupts",
              "description": "A list of Interrupt events that will fire once their appropriate ThreadRun's finish\nhalting.",
              "label": "repeated",
              "type": "PendingInterrupt",
              "longType": "PendingInterrupt",
              "fullType": "littlehorse.PendingInterrupt",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "pending_failures",
              "description": "A list of pending failure handlers which will fire once their appropriate ThreadRun's\nfinish halting.",
              "label": "repeated",
              "type": "PendingFailureHandler",
              "longType": "PendingFailureHandler",
              "fullType": "littlehorse.PendingFailureHandler",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "wf_spec.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": true,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [
        {
          "name": "LHFailureType",
          "longName": "FailureHandlerDef.LHFailureType",
          "fullName": "littlehorse.FailureHandlerDef.LHFailureType",
          "description": "",
          "values": [
            {
              "name": "FAILURE_TYPE_ERROR",
              "number": "0",
              "description": ""
            },
            {
              "name": "FAILURE_TYPE_EXCEPTION",
              "number": "1",
              "description": ""
            }
          ]
        },
        {
          "name": "WfRunVariableAccessLevel",
          "longName": "WfRunVariableAccessLevel",
          "fullName": "littlehorse.WfRunVariableAccessLevel",
          "description": "",
          "values": [
            {
              "name": "PUBLIC_VAR",
              "number": "0",
              "description": ""
            },
            {
              "name": "PRIVATE_VAR",
              "number": "1",
              "description": ""
            },
            {
              "name": "INHERITED_VAR",
              "number": "2",
              "description": ""
            }
          ]
        }
      ],
      "extensions": [],
      "messages": [
        {
          "name": "Edge",
          "longName": "Edge",
          "fullName": "littlehorse.Edge",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "sink_node_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "condition",
              "description": "",
              "label": "optional",
              "type": "EdgeCondition",
              "longType": "EdgeCondition",
              "fullType": "littlehorse.EdgeCondition",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_condition",
              "defaultValue": ""
            },
            {
              "name": "variable_mutations",
              "description": "",
              "label": "repeated",
              "type": "VariableMutation",
              "longType": "VariableMutation",
              "fullType": "littlehorse.VariableMutation",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EdgeCondition",
          "longName": "EdgeCondition",
          "fullName": "littlehorse.EdgeCondition",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "comparator",
              "description": "",
              "label": "",
              "type": "Comparator",
              "longType": "Comparator",
              "fullType": "littlehorse.Comparator",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "left",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "right",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "EntrypointNode",
          "longName": "EntrypointNode",
          "fullName": "littlehorse.EntrypointNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "ExitNode",
          "longName": "ExitNode",
          "fullName": "littlehorse.ExitNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "failure_def",
              "description": "",
              "label": "optional",
              "type": "FailureDef",
              "longType": "FailureDef",
              "fullType": "littlehorse.FailureDef",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_failure_def",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ExternalEventNode",
          "longName": "ExternalEventNode",
          "fullName": "littlehorse.ExternalEventNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_def_id",
              "description": "",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "timeout_seconds",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FailureDef",
          "longName": "FailureDef",
          "fullName": "littlehorse.FailureDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "failure_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "message",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_content",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "FailureHandlerDef",
          "longName": "FailureHandlerDef",
          "fullName": "littlehorse.FailureHandlerDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "handler_spec_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "specific_failure",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "failure_to_catch",
              "defaultValue": ""
            },
            {
              "name": "any_failure_of_type",
              "description": "",
              "label": "",
              "type": "LHFailureType",
              "longType": "FailureHandlerDef.LHFailureType",
              "fullType": "littlehorse.FailureHandlerDef.LHFailureType",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "failure_to_catch",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "InterruptDef",
          "longName": "InterruptDef",
          "fullName": "littlehorse.InterruptDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "external_event_def_id",
              "description": "",
              "label": "",
              "type": "ExternalEventDefId",
              "longType": "ExternalEventDefId",
              "fullType": "littlehorse.ExternalEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "handler_spec_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "JsonIndex",
          "longName": "JsonIndex",
          "fullName": "littlehorse.JsonIndex",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "field_path",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "field_type",
              "description": "",
              "label": "",
              "type": "VariableType",
              "longType": "VariableType",
              "fullType": "littlehorse.VariableType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "Node",
          "longName": "Node",
          "fullName": "littlehorse.Node",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "outgoing_edges",
              "description": "",
              "label": "repeated",
              "type": "Edge",
              "longType": "Edge",
              "fullType": "littlehorse.Edge",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "failure_handlers",
              "description": "",
              "label": "repeated",
              "type": "FailureHandlerDef",
              "longType": "FailureHandlerDef",
              "fullType": "littlehorse.FailureHandlerDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entrypoint",
              "description": "",
              "label": "",
              "type": "EntrypointNode",
              "longType": "EntrypointNode",
              "fullType": "littlehorse.EntrypointNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "exit",
              "description": "",
              "label": "",
              "type": "ExitNode",
              "longType": "ExitNode",
              "fullType": "littlehorse.ExitNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "task",
              "description": "",
              "label": "",
              "type": "TaskNode",
              "longType": "TaskNode",
              "fullType": "littlehorse.TaskNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "external_event",
              "description": "",
              "label": "",
              "type": "ExternalEventNode",
              "longType": "ExternalEventNode",
              "fullType": "littlehorse.ExternalEventNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "start_thread",
              "description": "",
              "label": "",
              "type": "StartThreadNode",
              "longType": "StartThreadNode",
              "fullType": "littlehorse.StartThreadNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "wait_for_threads",
              "description": "",
              "label": "",
              "type": "WaitForThreadsNode",
              "longType": "WaitForThreadsNode",
              "fullType": "littlehorse.WaitForThreadsNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "nop",
              "description": "",
              "label": "",
              "type": "NopNode",
              "longType": "NopNode",
              "fullType": "littlehorse.NopNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "sleep",
              "description": "",
              "label": "",
              "type": "SleepNode",
              "longType": "SleepNode",
              "fullType": "littlehorse.SleepNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "user_task",
              "description": "",
              "label": "",
              "type": "UserTaskNode",
              "longType": "UserTaskNode",
              "fullType": "littlehorse.UserTaskNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "start_multiple_threads",
              "description": "",
              "label": "",
              "type": "StartMultipleThreadsNode",
              "longType": "StartMultipleThreadsNode",
              "fullType": "littlehorse.StartMultipleThreadsNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            },
            {
              "name": "throw_event",
              "description": "",
              "label": "",
              "type": "ThrowEventNode",
              "longType": "ThrowEventNode",
              "fullType": "littlehorse.ThrowEventNode",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "node",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeMigration",
          "longName": "NodeMigration",
          "fullName": "littlehorse.NodeMigration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_node_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NopNode",
          "longName": "NopNode",
          "fullName": "littlehorse.NopNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": false,
          "hasOneofs": false,
          "extensions": [],
          "fields": []
        },
        {
          "name": "SearchableVariableDef",
          "longName": "SearchableVariableDef",
          "fullName": "littlehorse.SearchableVariableDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "var_def",
              "description": "Future: Add index information (local/remote/etc)",
              "label": "",
              "type": "VariableDef",
              "longType": "VariableDef",
              "fullType": "littlehorse.VariableDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "SleepNode",
          "longName": "SleepNode",
          "fullName": "littlehorse.SleepNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "raw_seconds",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "sleep_length",
              "defaultValue": ""
            },
            {
              "name": "timestamp",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "sleep_length",
              "defaultValue": ""
            },
            {
              "name": "iso_date",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "sleep_length",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StartMultipleThreadsNode",
          "longName": "StartMultipleThreadsNode",
          "fullName": "littlehorse.StartMultipleThreadsNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "thread_spec_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "variables",
              "description": "",
              "label": "repeated",
              "type": "VariablesEntry",
              "longType": "StartMultipleThreadsNode.VariablesEntry",
              "fullType": "littlehorse.StartMultipleThreadsNode.VariablesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "iterable",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariablesEntry",
          "longName": "StartMultipleThreadsNode.VariablesEntry",
          "fullName": "littlehorse.StartMultipleThreadsNode.VariablesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "StartThreadNode",
          "longName": "StartThreadNode",
          "fullName": "littlehorse.StartThreadNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "thread_spec_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "variables",
              "description": "",
              "label": "repeated",
              "type": "VariablesEntry",
              "longType": "StartThreadNode.VariablesEntry",
              "fullType": "littlehorse.StartThreadNode.VariablesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "VariablesEntry",
          "longName": "StartThreadNode.VariablesEntry",
          "fullName": "littlehorse.StartThreadNode.VariablesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadRetentionPolicy",
          "longName": "ThreadRetentionPolicy",
          "fullName": "littlehorse.ThreadRetentionPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "seconds_after_thread_termination",
              "description": "Delete associated ThreadRun's X seconds after they terminate, regardless\nof status.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "thread_gc_policy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadSpec",
          "longName": "ThreadSpec",
          "fullName": "littlehorse.ThreadSpec",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "nodes",
              "description": "",
              "label": "repeated",
              "type": "NodesEntry",
              "longType": "ThreadSpec.NodesEntry",
              "fullType": "littlehorse.ThreadSpec.NodesEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "variable_defs",
              "description": "",
              "label": "repeated",
              "type": "ThreadVarDef",
              "longType": "ThreadVarDef",
              "fullType": "littlehorse.ThreadVarDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "interrupt_defs",
              "description": "",
              "label": "repeated",
              "type": "InterruptDef",
              "longType": "InterruptDef",
              "fullType": "littlehorse.InterruptDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retention_policy",
              "description": "",
              "label": "optional",
              "type": "ThreadRetentionPolicy",
              "longType": "ThreadRetentionPolicy",
              "fullType": "littlehorse.ThreadRetentionPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_retention_policy",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodesEntry",
          "longName": "ThreadSpec.NodesEntry",
          "fullName": "littlehorse.ThreadSpec.NodesEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "Node",
              "longType": "Node",
              "fullType": "littlehorse.Node",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadSpecMigration",
          "longName": "ThreadSpecMigration",
          "fullName": "littlehorse.ThreadSpecMigration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_thread_spec_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "node_migrations",
              "description": "",
              "label": "repeated",
              "type": "NodeMigrationsEntry",
              "longType": "ThreadSpecMigration.NodeMigrationsEntry",
              "fullType": "littlehorse.ThreadSpecMigration.NodeMigrationsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "NodeMigrationsEntry",
          "longName": "ThreadSpecMigration.NodeMigrationsEntry",
          "fullName": "littlehorse.ThreadSpecMigration.NodeMigrationsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "NodeMigration",
              "longType": "NodeMigration",
              "fullType": "littlehorse.NodeMigration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadVarDef",
          "longName": "ThreadVarDef",
          "fullName": "littlehorse.ThreadVarDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "var_def",
              "description": "",
              "label": "",
              "type": "VariableDef",
              "longType": "VariableDef",
              "fullType": "littlehorse.VariableDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "required",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "searchable",
              "description": "",
              "label": "",
              "type": "bool",
              "longType": "bool",
              "fullType": "bool",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "json_indexes",
              "description": "",
              "label": "repeated",
              "type": "JsonIndex",
              "longType": "JsonIndex",
              "fullType": "littlehorse.JsonIndex",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "access_level",
              "description": "",
              "label": "",
              "type": "WfRunVariableAccessLevel",
              "longType": "WfRunVariableAccessLevel",
              "fullType": "littlehorse.WfRunVariableAccessLevel",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThrowEventNode",
          "longName": "ThrowEventNode",
          "fullName": "littlehorse.ThrowEventNode",
          "description": "A SubNode that throws a WorkflowEvent of a specific type.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "event_def_id",
              "description": "The WorkflowEventDefId of the WorkflowEvent that is thrown",
              "label": "",
              "type": "WorkflowEventDefId",
              "longType": "WorkflowEventDefId",
              "fullType": "littlehorse.WorkflowEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "A VariableAssignment defining the content of the WorkflowEvent that is thrown",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "UserTaskNode",
          "longName": "UserTaskNode",
          "fullName": "littlehorse.UserTaskNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "user_task_def_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_group",
              "description": "to whom should the User Task Run be assigned?",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_group",
              "defaultValue": ""
            },
            {
              "name": "user_id",
              "description": "",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_id",
              "defaultValue": ""
            },
            {
              "name": "actions",
              "description": "This is used to, for example, send a push notification to a mobile app\nto remind someone that they need to fill out a task, or to re-assign\nthe task to another group of people",
              "label": "repeated",
              "type": "UTActionTrigger",
              "longType": "UTActionTrigger",
              "fullType": "littlehorse.UTActionTrigger",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "user_task_def_version",
              "description": "So, once the WfSpec is created, this will be pinned to a version. Customer\ncan optionally specify a specific version or can leave it null, in which\ncase we just use the latest",
              "label": "optional",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_user_task_def_version",
              "defaultValue": ""
            },
            {
              "name": "notes",
              "description": "Allow WfRun-specific notes for this User Task.",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_notes",
              "defaultValue": ""
            },
            {
              "name": "on_cancellation_exception_name",
              "description": "Specifies the name of the exception thrown when the User Task is canceled",
              "label": "optional",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_on_cancellation_exception_name",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WaitForThreadsNode",
          "longName": "WaitForThreadsNode",
          "fullName": "littlehorse.WaitForThreadsNode",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "threads",
              "description": "",
              "label": "",
              "type": "ThreadsToWaitFor",
              "longType": "WaitForThreadsNode.ThreadsToWaitFor",
              "fullType": "littlehorse.WaitForThreadsNode.ThreadsToWaitFor",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "threads_to_wait_for",
              "defaultValue": ""
            },
            {
              "name": "thread_list",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "threads_to_wait_for",
              "defaultValue": ""
            },
            {
              "name": "per_thread_failure_handlers",
              "description": "",
              "label": "repeated",
              "type": "FailureHandlerDef",
              "longType": "FailureHandlerDef",
              "fullType": "littlehorse.FailureHandlerDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadToWaitFor",
          "longName": "WaitForThreadsNode.ThreadToWaitFor",
          "fullName": "littlehorse.WaitForThreadsNode.ThreadToWaitFor",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "thread_run_number",
              "description": "",
              "label": "",
              "type": "VariableAssignment",
              "longType": "VariableAssignment",
              "fullType": "littlehorse.VariableAssignment",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadsToWaitFor",
          "longName": "WaitForThreadsNode.ThreadsToWaitFor",
          "fullName": "littlehorse.WaitForThreadsNode.ThreadsToWaitFor",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "threads",
              "description": "",
              "label": "repeated",
              "type": "ThreadToWaitFor",
              "longType": "WaitForThreadsNode.ThreadToWaitFor",
              "fullType": "littlehorse.WaitForThreadsNode.ThreadToWaitFor",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpec",
          "longName": "WfSpec",
          "fullName": "littlehorse.WfSpec",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "WfSpecId",
              "longType": "WfSpecId",
              "fullType": "littlehorse.WfSpecId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "frozen_variables",
              "description": "",
              "label": "repeated",
              "type": "ThreadVarDef",
              "longType": "ThreadVarDef",
              "fullType": "littlehorse.ThreadVarDef",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "status",
              "description": "to be used for WfSpec Status, i.e. ACTIVE/TERMINATING/ARCHIVED",
              "label": "",
              "type": "MetadataStatus",
              "longType": "MetadataStatus",
              "fullType": "littlehorse.MetadataStatus",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_specs",
              "description": "",
              "label": "repeated",
              "type": "ThreadSpecsEntry",
              "longType": "WfSpec.ThreadSpecsEntry",
              "fullType": "littlehorse.WfSpec.ThreadSpecsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "entrypoint_thread_name",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "retention_policy",
              "description": "",
              "label": "optional",
              "type": "WorkflowRetentionPolicy",
              "longType": "WorkflowRetentionPolicy",
              "fullType": "littlehorse.WorkflowRetentionPolicy",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_retention_policy",
              "defaultValue": ""
            },
            {
              "name": "migration",
              "description": "",
              "label": "optional",
              "type": "WfSpecVersionMigration",
              "longType": "WfSpecVersionMigration",
              "fullType": "littlehorse.WfSpecVersionMigration",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_migration",
              "defaultValue": ""
            },
            {
              "name": "parent_wf_spec",
              "description": "Reference to the parent WfSpec. If this is set, all WfRun's for this WfSpec must be the\nchild of a WfRun belonging to the referenced WfSpec.",
              "label": "optional",
              "type": "ParentWfSpecReference",
              "longType": "WfSpec.ParentWfSpecReference",
              "fullType": "littlehorse.WfSpec.ParentWfSpecReference",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "_parent_wf_spec",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ParentWfSpecReference",
          "longName": "WfSpec.ParentWfSpecReference",
          "fullName": "littlehorse.WfSpec.ParentWfSpecReference",
          "description": "Reference to another WfSpec. If a WfSpec has a ParentWfSpecReference, then all\nWfRun's for that WfSpec *MUST* be the child of a WfRun of the provided WfSpec; meaning\nthat the RunWf RPC must provide a `parent_wf_run_id` that belongs to the specified\nWfSpec.\n\nCurrently, only reference by names is supported.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "wf_spec_name",
              "description": "Name of the Parent WfSpec",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "wf_spec_major_version",
              "description": "FOR NOW: no validation of variables on parent. In the future we will pass\nwf_spec_major_version, but we should probably examine the rules for\nevolution in the future.",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadSpecsEntry",
          "longName": "WfSpec.ThreadSpecsEntry",
          "fullName": "littlehorse.WfSpec.ThreadSpecsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "ThreadSpec",
              "longType": "ThreadSpec",
              "fullType": "littlehorse.ThreadSpec",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WfSpecVersionMigration",
          "longName": "WfSpecVersionMigration",
          "fullName": "littlehorse.WfSpecVersionMigration",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "new_major_version",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "new_revision",
              "description": "",
              "label": "",
              "type": "int32",
              "longType": "int32",
              "fullType": "int32",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "thread_spec_migrations",
              "description": "",
              "label": "repeated",
              "type": "ThreadSpecMigrationsEntry",
              "longType": "WfSpecVersionMigration.ThreadSpecMigrationsEntry",
              "fullType": "littlehorse.WfSpecVersionMigration.ThreadSpecMigrationsEntry",
              "ismap": true,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "ThreadSpecMigrationsEntry",
          "longName": "WfSpecVersionMigration.ThreadSpecMigrationsEntry",
          "fullName": "littlehorse.WfSpecVersionMigration.ThreadSpecMigrationsEntry",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "key",
              "description": "",
              "label": "",
              "type": "string",
              "longType": "string",
              "fullType": "string",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "value",
              "description": "",
              "label": "",
              "type": "ThreadSpecMigration",
              "longType": "ThreadSpecMigration",
              "fullType": "littlehorse.ThreadSpecMigration",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WorkflowRetentionPolicy",
          "longName": "WorkflowRetentionPolicy",
          "fullName": "littlehorse.WorkflowRetentionPolicy",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": true,
          "extensions": [],
          "fields": [
            {
              "name": "seconds_after_wf_termination",
              "description": "Delete all WfRun's X seconds after they terminate, regardless of\nstatus.",
              "label": "",
              "type": "int64",
              "longType": "int64",
              "fullType": "int64",
              "ismap": false,
              "isoneof": true,
              "oneofdecl": "wf_gc_policy",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    },
    {
      "name": "workflow_event.proto",
      "description": "",
      "package": "littlehorse",
      "hasEnums": false,
      "hasExtensions": false,
      "hasMessages": true,
      "hasServices": false,
      "enums": [],
      "extensions": [],
      "messages": [
        {
          "name": "WorkflowEvent",
          "longName": "WorkflowEvent",
          "fullName": "littlehorse.WorkflowEvent",
          "description": "A WorkflowEvent represents a \"Thing That Happened\" *INSIDE* a WfRun. It is DIFFERENT from\nan ExternalEvent, because an ExternalEvent represents something that happened OUTSIDE the WfRun,\nand is used to send information to the WfRun.\n\nIn contrast, a WorkflowEvent is thrown by the WfRun and is used to send information to the outside\nworld.",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "The ID of the WorkflowEvent. Contains WfRunId and WorkflowEventDefId.",
              "label": "",
              "type": "WorkflowEventId",
              "longType": "WorkflowEventId",
              "fullType": "littlehorse.WorkflowEventId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "content",
              "description": "The content of the WorkflowEvent.",
              "label": "",
              "type": "VariableValue",
              "longType": "VariableValue",
              "fullType": "littlehorse.VariableValue",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "The time that the WorkflowEvent was created.",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        },
        {
          "name": "WorkflowEventDef",
          "longName": "WorkflowEventDef",
          "fullName": "littlehorse.WorkflowEventDef",
          "description": "",
          "hasExtensions": false,
          "hasFields": true,
          "hasOneofs": false,
          "extensions": [],
          "fields": [
            {
              "name": "id",
              "description": "",
              "label": "",
              "type": "WorkflowEventDefId",
              "longType": "WorkflowEventDefId",
              "fullType": "littlehorse.WorkflowEventDefId",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "created_at",
              "description": "",
              "label": "",
              "type": "Timestamp",
              "longType": "google.protobuf.Timestamp",
              "fullType": "google.protobuf.Timestamp",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            },
            {
              "name": "type",
              "description": "",
              "label": "",
              "type": "VariableType",
              "longType": "VariableType",
              "fullType": "littlehorse.VariableType",
              "ismap": false,
              "isoneof": false,
              "oneofdecl": "",
              "defaultValue": ""
            }
          ]
        }
      ],
      "services": []
    }
  ],
  "scalarValueTypes": [
    {
      "protoType": "double",
      "notes": "",
      "cppType": "double",
      "csType": "double",
      "goType": "float64",
      "javaType": "double",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "float",
      "notes": "",
      "cppType": "float",
      "csType": "float",
      "goType": "float32",
      "javaType": "float",
      "phpType": "float",
      "pythonType": "float",
      "rubyType": "Float"
    },
    {
      "protoType": "int32",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "int64",
      "notes": "Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "uint32",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "uint64",
      "notes": "Uses variable-length encoding.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint32",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sint64",
      "notes": "Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "fixed32",
      "notes": "Always four bytes. More efficient than uint32 if values are often greater than 2^28.",
      "cppType": "uint32",
      "csType": "uint",
      "goType": "uint32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "fixed64",
      "notes": "Always eight bytes. More efficient than uint64 if values are often greater than 2^56.",
      "cppType": "uint64",
      "csType": "ulong",
      "goType": "uint64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "sfixed32",
      "notes": "Always four bytes.",
      "cppType": "int32",
      "csType": "int",
      "goType": "int32",
      "javaType": "int",
      "phpType": "integer",
      "pythonType": "int",
      "rubyType": "Bignum or Fixnum (as required)"
    },
    {
      "protoType": "sfixed64",
      "notes": "Always eight bytes.",
      "cppType": "int64",
      "csType": "long",
      "goType": "int64",
      "javaType": "long",
      "phpType": "integer/string",
      "pythonType": "int/long",
      "rubyType": "Bignum"
    },
    {
      "protoType": "bool",
      "notes": "",
      "cppType": "bool",
      "csType": "bool",
      "goType": "bool",
      "javaType": "boolean",
      "phpType": "boolean",
      "pythonType": "boolean",
      "rubyType": "TrueClass/FalseClass"
    },
    {
      "protoType": "string",
      "notes": "A string must always contain UTF-8 encoded or 7-bit ASCII text.",
      "cppType": "string",
      "csType": "string",
      "goType": "string",
      "javaType": "String",
      "phpType": "string",
      "pythonType": "str/unicode",
      "rubyType": "String (UTF-8)"
    },
    {
      "protoType": "bytes",
      "notes": "May contain any arbitrary sequence of bytes.",
      "cppType": "string",
      "csType": "ByteString",
      "goType": "[]byte",
      "javaType": "ByteString",
      "phpType": "string",
      "pythonType": "str",
      "rubyType": "String (ASCII-8BIT)"
    }
  ]
}