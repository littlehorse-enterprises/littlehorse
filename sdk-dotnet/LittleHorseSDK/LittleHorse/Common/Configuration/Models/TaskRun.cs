// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: task_run.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LittleHorse.Common.Proto {

  /// <summary>Holder for reflection information generated from task_run.proto</summary>
  public static partial class TaskRunReflection {

    #region Descriptor
    /// <summary>File descriptor for task_run.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaskRunReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg50YXNrX3J1bi5wcm90bxILbGl0dGxlaG9yc2UaH2dvb2dsZS9wcm90b2J1",
            "Zi90aW1lc3RhbXAucHJvdG8aEmNvbW1vbl9lbnVtcy5wcm90bxoTY29tbW9u",
            "X3dmc3BlYy5wcm90bxoOdmFyaWFibGUucHJvdG8aD29iamVjdF9pZC5wcm90",
            "bxoQdXNlcl90YXNrcy5wcm90byLZAwoHVGFza1J1bhIiCgJpZBgBIAEoCzIW",
            "LmxpdHRsZWhvcnNlLlRhc2tSdW5JZBIrCgt0YXNrX2RlZl9pZBgCIAEoCzIW",
            "LmxpdHRsZWhvcnNlLlRhc2tEZWZJZBIqCghhdHRlbXB0cxgDIAMoCzIYLmxp",
            "dHRsZWhvcnNlLlRhc2tBdHRlbXB0EjMKD2lucHV0X3ZhcmlhYmxlcxgFIAMo",
            "CzIaLmxpdHRsZWhvcnNlLlZhck5hbWVBbmRWYWwSKgoGc291cmNlGAYgASgL",
            "MhoubGl0dGxlaG9yc2UuVGFza1J1blNvdXJjZRIwCgxzY2hlZHVsZWRfYXQY",
            "ByABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEicKBnN0YXR1cxgI",
            "IAEoDjIXLmxpdHRsZWhvcnNlLlRhc2tTdGF0dXMSFwoPdGltZW91dF9zZWNv",
            "bmRzGAkgASgFEhYKDnRvdGFsX2F0dGVtcHRzGAQgASgFEkwKE2V4cG9uZW50",
            "aWFsX2JhY2tvZmYYCiABKAsyKi5saXR0bGVob3JzZS5FeHBvbmVudGlhbEJh",
            "Y2tvZmZSZXRyeVBvbGljeUgAiAEBQhYKFF9leHBvbmVudGlhbF9iYWNrb2Zm",
            "IlwKDVZhck5hbWVBbmRWYWwSEAoIdmFyX25hbWUYASABKAkSKQoFdmFsdWUY",
            "AiABKAsyGi5saXR0bGVob3JzZS5WYXJpYWJsZVZhbHVlEg4KBm1hc2tlZBgD",
            "IAEoCCLGBAoLVGFza0F0dGVtcHQSMwoKbG9nX291dHB1dBgCIAEoCzIaLmxp",
            "dHRsZWhvcnNlLlZhcmlhYmxlVmFsdWVIAYgBARI2Cg1zY2hlZHVsZV90aW1l",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgCiAEBEjMKCnN0",
            "YXJ0X3RpbWUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAOI",
            "AQESMQoIZW5kX3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wSASIAQESFgoOdGFza193b3JrZXJfaWQYByABKAkSIAoTdGFza193b3Jr",
            "ZXJfdmVyc2lvbhgIIAEoCUgFiAEBEicKBnN0YXR1cxgJIAEoDjIXLmxpdHRs",
            "ZWhvcnNlLlRhc2tTdGF0dXMSLAoGb3V0cHV0GAEgASgLMhoubGl0dGxlaG9y",
            "c2UuVmFyaWFibGVWYWx1ZUgAEikKBWVycm9yGAogASgLMhgubGl0dGxlaG9y",
            "c2UuTEhUYXNrRXJyb3JIABIxCglleGNlcHRpb24YCyABKAsyHC5saXR0bGVo",
            "b3JzZS5MSFRhc2tFeGNlcHRpb25IABIUCgxtYXNrZWRfdmFsdWUYDCABKAhC",
            "CAoGcmVzdWx0Qg0KC19sb2dfb3V0cHV0QhAKDl9zY2hlZHVsZV90aW1lQg0K",
            "C19zdGFydF90aW1lQgsKCV9lbmRfdGltZUIWChRfdGFza193b3JrZXJfdmVy",
            "c2lvbiLaAQoNVGFza1J1blNvdXJjZRIzCgl0YXNrX25vZGUYASABKAsyHi5s",
            "aXR0bGVob3JzZS5UYXNrTm9kZVJlZmVyZW5jZUgAEkIKEXVzZXJfdGFza190",
            "cmlnZ2VyGAIgASgLMiUubGl0dGxlaG9yc2UuVXNlclRhc2tUcmlnZ2VyUmVm",
            "ZXJlbmNlSAASLgoKd2Zfc3BlY19pZBgDIAEoCzIVLmxpdHRsZWhvcnNlLldm",
            "U3BlY0lkSAGIAQFCEQoPdGFza19ydW5fc291cmNlQg0KC193Zl9zcGVjX2lk",
            "IkAKEVRhc2tOb2RlUmVmZXJlbmNlEisKC25vZGVfcnVuX2lkGAEgASgLMhYu",
            "bGl0dGxlaG9yc2UuTm9kZVJ1bklkIkYKC0xIVGFza0Vycm9yEiYKBHR5cGUY",
            "ASABKA4yGC5saXR0bGVob3JzZS5MSEVycm9yVHlwZRIPCgdtZXNzYWdlGAIg",
            "ASgJIl0KD0xIVGFza0V4Y2VwdGlvbhIMCgRuYW1lGAEgASgJEg8KB21lc3Nh",
            "Z2UYAiABKAkSKwoHY29udGVudBgDIAEoCzIaLmxpdHRsZWhvcnNlLlZhcmlh",
            "YmxlVmFsdWVCSQofaW8ubGl0dGxlaG9yc2Uuc2RrLmNvbW1vbi5wcm90b1AB",
            "WgkuO2xocHJvdG+qAhhMaXR0bGVIb3JzZS5Db21tb24uUHJvdG9iBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::LittleHorse.Common.Proto.CommonEnumsReflection.Descriptor, global::LittleHorse.Common.Proto.CommonWfspecReflection.Descriptor, global::LittleHorse.Common.Proto.VariableReflection.Descriptor, global::LittleHorse.Common.Proto.ObjectIdReflection.Descriptor, global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskRun), global::LittleHorse.Common.Proto.TaskRun.Parser, new[]{ "Id", "TaskDefId", "Attempts", "InputVariables", "Source", "ScheduledAt", "Status", "TimeoutSeconds", "TotalAttempts", "ExponentialBackoff" }, new[]{ "ExponentialBackoff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.VarNameAndVal), global::LittleHorse.Common.Proto.VarNameAndVal.Parser, new[]{ "VarName", "Value", "Masked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskAttempt), global::LittleHorse.Common.Proto.TaskAttempt.Parser, new[]{ "LogOutput", "ScheduleTime", "StartTime", "EndTime", "TaskWorkerId", "TaskWorkerVersion", "Status", "Output", "Error", "Exception", "MaskedValue" }, new[]{ "Result", "LogOutput", "ScheduleTime", "StartTime", "EndTime", "TaskWorkerVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskRunSource), global::LittleHorse.Common.Proto.TaskRunSource.Parser, new[]{ "TaskNode", "UserTaskTrigger", "WfSpecId" }, new[]{ "TaskRunSource", "WfSpecId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskNodeReference), global::LittleHorse.Common.Proto.TaskNodeReference.Parser, new[]{ "NodeRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.LHTaskError), global::LittleHorse.Common.Proto.LHTaskError.Parser, new[]{ "Type", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.LHTaskException), global::LittleHorse.Common.Proto.LHTaskException.Parser, new[]{ "Name", "Message", "Content" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A TaskRun resents a single instance of a TaskDef being executed.
  /// </summary>
  public sealed partial class TaskRun : pb::IMessage<TaskRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRun> _parser = new pb::MessageParser<TaskRun>(() => new TaskRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRun(TaskRun other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      attempts_ = other.attempts_.Clone();
      inputVariables_ = other.inputVariables_.Clone();
      source_ = other.source_ != null ? other.source_.Clone() : null;
      scheduledAt_ = other.scheduledAt_ != null ? other.scheduledAt_.Clone() : null;
      status_ = other.status_;
      timeoutSeconds_ = other.timeoutSeconds_;
      totalAttempts_ = other.totalAttempts_;
      exponentialBackoff_ = other.exponentialBackoff_ != null ? other.exponentialBackoff_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRun Clone() {
      return new TaskRun(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskRunId id_;
    /// <summary>
    /// The ID of the TaskRun. Note that the TaskRunId contains the WfRunId.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskRunId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// The ID of the TaskDef being executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "attempts" field.</summary>
    public const int AttemptsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TaskAttempt> _repeated_attempts_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.TaskAttempt.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskAttempt> attempts_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskAttempt>();
    /// <summary>
    /// All attempts scheduled for this TaskRun. A TaskAttempt represents an occurrence of
    /// the TaskRun being put on a Task Queue to be executed by the Task Workers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskAttempt> Attempts {
      get { return attempts_; }
    }

    /// <summary>Field number for the "input_variables" field.</summary>
    public const int InputVariablesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VarNameAndVal> _repeated_inputVariables_codec
        = pb::FieldCodec.ForMessage(42, global::LittleHorse.Common.Proto.VarNameAndVal.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal> inputVariables_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal>();
    /// <summary>
    /// The input variables to pass into this TaskRun. Note that this is a list and not
    /// a map, because ordering matters. Depending on the language implementation, not
    /// every LittleHorse Task Worker SDK has the ability to determine the names of the
    /// variables from the method signature, so we provide both names and ordering.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal> InputVariables {
      get { return inputVariables_; }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 6;
    private global::LittleHorse.Common.Proto.TaskRunSource source_;
    /// <summary>
    /// The source (in the WfRun) that caused this TaskRun to be created. Currently, this
    /// can be either a TASK node, or a User Task Action Task Trigger in a USER_TASK node (such
    /// as a task used to send reminders).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskRunSource Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "scheduled_at" field.</summary>
    public const int ScheduledAtFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledAt_;
    /// <summary>
    /// When the TaskRun was scheduled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledAt {
      get { return scheduledAt_; }
      set {
        scheduledAt_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::LittleHorse.Common.Proto.TaskStatus status_ = global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled;
    /// <summary>
    /// The status of the TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "timeout_seconds" field.</summary>
    public const int TimeoutSecondsFieldNumber = 9;
    private int timeoutSeconds_;
    /// <summary>
    /// The timeout before LH considers a TaskAttempt to be timed out.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TimeoutSeconds {
      get { return timeoutSeconds_; }
      set {
        timeoutSeconds_ = value;
      }
    }

    /// <summary>Field number for the "total_attempts" field.</summary>
    public const int TotalAttemptsFieldNumber = 4;
    private int totalAttempts_;
    /// <summary>
    /// The maximum number of attempts that may be scheduled for this TaskRun. NOTE: setting
    /// total_attempts to 1 means that there are no retries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalAttempts {
      get { return totalAttempts_; }
      set {
        totalAttempts_ = value;
      }
    }

    /// <summary>Field number for the "exponential_backoff" field.</summary>
    public const int ExponentialBackoffFieldNumber = 10;
    private global::LittleHorse.Common.Proto.ExponentialBackoffRetryPolicy exponentialBackoff_;
    /// <summary>
    /// Optional backoff policy .
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExponentialBackoffRetryPolicy ExponentialBackoff {
      get { return exponentialBackoff_; }
      set {
        exponentialBackoff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if(!attempts_.Equals(other.attempts_)) return false;
      if(!inputVariables_.Equals(other.inputVariables_)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      if (!object.Equals(ScheduledAt, other.ScheduledAt)) return false;
      if (Status != other.Status) return false;
      if (TimeoutSeconds != other.TimeoutSeconds) return false;
      if (TotalAttempts != other.TotalAttempts) return false;
      if (!object.Equals(ExponentialBackoff, other.ExponentialBackoff)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      hash ^= attempts_.GetHashCode();
      hash ^= inputVariables_.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (scheduledAt_ != null) hash ^= ScheduledAt.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) hash ^= Status.GetHashCode();
      if (TimeoutSeconds != 0) hash ^= TimeoutSeconds.GetHashCode();
      if (TotalAttempts != 0) hash ^= TotalAttempts.GetHashCode();
      if (exponentialBackoff_ != null) hash ^= ExponentialBackoff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      attempts_.WriteTo(output, _repeated_attempts_codec);
      if (TotalAttempts != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalAttempts);
      }
      inputVariables_.WriteTo(output, _repeated_inputVariables_codec);
      if (source_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Source);
      }
      if (scheduledAt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ScheduledAt);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeoutSeconds != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TimeoutSeconds);
      }
      if (exponentialBackoff_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExponentialBackoff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      attempts_.WriteTo(ref output, _repeated_attempts_codec);
      if (TotalAttempts != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalAttempts);
      }
      inputVariables_.WriteTo(ref output, _repeated_inputVariables_codec);
      if (source_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Source);
      }
      if (scheduledAt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ScheduledAt);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TimeoutSeconds != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TimeoutSeconds);
      }
      if (exponentialBackoff_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ExponentialBackoff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      size += attempts_.CalculateSize(_repeated_attempts_codec);
      size += inputVariables_.CalculateSize(_repeated_inputVariables_codec);
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (scheduledAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledAt);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TimeoutSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeoutSeconds);
      }
      if (TotalAttempts != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalAttempts);
      }
      if (exponentialBackoff_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExponentialBackoff);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRun other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.TaskRunId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      attempts_.Add(other.attempts_);
      inputVariables_.Add(other.inputVariables_);
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::LittleHorse.Common.Proto.TaskRunSource();
        }
        Source.MergeFrom(other.Source);
      }
      if (other.scheduledAt_ != null) {
        if (scheduledAt_ == null) {
          ScheduledAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledAt.MergeFrom(other.ScheduledAt);
      }
      if (other.Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        Status = other.Status;
      }
      if (other.TimeoutSeconds != 0) {
        TimeoutSeconds = other.TimeoutSeconds;
      }
      if (other.TotalAttempts != 0) {
        TotalAttempts = other.TotalAttempts;
      }
      if (other.exponentialBackoff_ != null) {
        if (exponentialBackoff_ == null) {
          ExponentialBackoff = new global::LittleHorse.Common.Proto.ExponentialBackoffRetryPolicy();
        }
        ExponentialBackoff.MergeFrom(other.ExponentialBackoff);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 26: {
            attempts_.AddEntriesFrom(input, _repeated_attempts_codec);
            break;
          }
          case 32: {
            TotalAttempts = input.ReadInt32();
            break;
          }
          case 42: {
            inputVariables_.AddEntriesFrom(input, _repeated_inputVariables_codec);
            break;
          }
          case 50: {
            if (source_ == null) {
              Source = new global::LittleHorse.Common.Proto.TaskRunSource();
            }
            input.ReadMessage(Source);
            break;
          }
          case 58: {
            if (scheduledAt_ == null) {
              ScheduledAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledAt);
            break;
          }
          case 64: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeoutSeconds = input.ReadInt32();
            break;
          }
          case 82: {
            if (exponentialBackoff_ == null) {
              ExponentialBackoff = new global::LittleHorse.Common.Proto.ExponentialBackoffRetryPolicy();
            }
            input.ReadMessage(ExponentialBackoff);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 26: {
            attempts_.AddEntriesFrom(ref input, _repeated_attempts_codec);
            break;
          }
          case 32: {
            TotalAttempts = input.ReadInt32();
            break;
          }
          case 42: {
            inputVariables_.AddEntriesFrom(ref input, _repeated_inputVariables_codec);
            break;
          }
          case 50: {
            if (source_ == null) {
              Source = new global::LittleHorse.Common.Proto.TaskRunSource();
            }
            input.ReadMessage(Source);
            break;
          }
          case 58: {
            if (scheduledAt_ == null) {
              ScheduledAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledAt);
            break;
          }
          case 64: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 72: {
            TimeoutSeconds = input.ReadInt32();
            break;
          }
          case 82: {
            if (exponentialBackoff_ == null) {
              ExponentialBackoff = new global::LittleHorse.Common.Proto.ExponentialBackoffRetryPolicy();
            }
            input.ReadMessage(ExponentialBackoff);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A key-value pair of variable name and value.
  /// </summary>
  public sealed partial class VarNameAndVal : pb::IMessage<VarNameAndVal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VarNameAndVal> _parser = new pb::MessageParser<VarNameAndVal>(() => new VarNameAndVal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VarNameAndVal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VarNameAndVal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VarNameAndVal(VarNameAndVal other) : this() {
      varName_ = other.varName_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      masked_ = other.masked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VarNameAndVal Clone() {
      return new VarNameAndVal(this);
    }

    /// <summary>Field number for the "var_name" field.</summary>
    public const int VarNameFieldNumber = 1;
    private string varName_ = "";
    /// <summary>
    /// The variable name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VarName {
      get { return varName_; }
      set {
        varName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableValue value_;
    /// <summary>
    /// The value of the variable for this TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "masked" field.</summary>
    public const int MaskedFieldNumber = 3;
    private bool masked_;
    /// <summary>
    /// Indicates whether the content of the `value` field has been masked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Masked {
      get { return masked_; }
      set {
        masked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VarNameAndVal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VarNameAndVal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VarName != other.VarName) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (Masked != other.Masked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VarName.Length != 0) hash ^= VarName.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Masked != false) hash ^= Masked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VarName);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (Masked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Masked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VarName);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (Masked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Masked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarName);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Masked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VarNameAndVal other) {
      if (other == null) {
        return;
      }
      if (other.VarName.Length != 0) {
        VarName = other.VarName;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::LittleHorse.Common.Proto.VariableValue();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Masked != false) {
        Masked = other.Masked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VarName = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
          case 24: {
            Masked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VarName = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
          case 24: {
            Masked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A single time that a TaskRun was scheduled for execution on a Task Queue.
  /// </summary>
  public sealed partial class TaskAttempt : pb::IMessage<TaskAttempt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskAttempt> _parser = new pb::MessageParser<TaskAttempt>(() => new TaskAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskAttempt(TaskAttempt other) : this() {
      logOutput_ = other.logOutput_ != null ? other.logOutput_.Clone() : null;
      scheduleTime_ = other.scheduleTime_ != null ? other.scheduleTime_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      taskWorkerId_ = other.taskWorkerId_;
      taskWorkerVersion_ = other.taskWorkerVersion_;
      status_ = other.status_;
      maskedValue_ = other.maskedValue_;
      switch (other.ResultCase) {
        case ResultOneofCase.Output:
          Output = other.Output.Clone();
          break;
        case ResultOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResultOneofCase.Exception:
          Exception = other.Exception.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskAttempt Clone() {
      return new TaskAttempt(this);
    }

    /// <summary>Field number for the "log_output" field.</summary>
    public const int LogOutputFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableValue logOutput_;
    /// <summary>
    /// Optional information provided by the Task Worker SDK for debugging. Usually, if set
    /// it contains a stacktrace or it contains information logged via `WorkerContext#log()`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue LogOutput {
      get { return logOutput_; }
      set {
        logOutput_ = value;
      }
    }

    /// <summary>Field number for the "schedule_time" field.</summary>
    public const int ScheduleTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduleTime_;
    /// <summary>
    /// The time the TaskAttempt was scheduled on the Task Queue. Not set for a TaskAttempt that is
    /// in the TASK_PENDING status; for example, when waiting between retries with exponential
    /// backoff.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduleTime {
      get { return scheduleTime_; }
      set {
        scheduleTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time the TaskAttempt was pulled off the queue and sent to a TaskWorker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time the TaskAttempt was finished (either completed, reported as failed, or
    /// timed out)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "task_worker_id" field.</summary>
    public const int TaskWorkerIdFieldNumber = 7;
    private string taskWorkerId_ = "";
    /// <summary>
    /// EXPERIMENTAL: the ID of the Task Worker who executed this TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskWorkerId {
      get { return taskWorkerId_; }
      set {
        taskWorkerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_worker_version" field.</summary>
    public const int TaskWorkerVersionFieldNumber = 8;
    private readonly static string TaskWorkerVersionDefaultValue = "";

    private string taskWorkerVersion_;
    /// <summary>
    /// The version of the Task Worker that executed the TaskAttempt.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskWorkerVersion {
      get { return taskWorkerVersion_ ?? TaskWorkerVersionDefaultValue; }
      set {
        taskWorkerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_worker_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskWorkerVersion {
      get { return taskWorkerVersion_ != null; }
    }
    /// <summary>Clears the value of the "task_worker_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskWorkerVersion() {
      taskWorkerVersion_ = null;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 9;
    private global::LittleHorse.Common.Proto.TaskStatus status_ = global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled;
    /// <summary>
    /// The status of this TaskAttempt.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 1;
    /// <summary>
    /// Denotes the Task Function executed properly and returned an output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Output {
      get { return resultCase_ == ResultOneofCase.Output ? (global::LittleHorse.Common.Proto.VariableValue) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Output;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 10;
    /// <summary>
    /// An unexpected technical error was encountered. May or may not be retriable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHTaskError Error {
      get { return resultCase_ == ResultOneofCase.Error ? (global::LittleHorse.Common.Proto.LHTaskError) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Error;
      }
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 11;
    /// <summary>
    /// The Task Function encountered a business problem and threw a technical exception.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHTaskException Exception {
      get { return resultCase_ == ResultOneofCase.Exception ? (global::LittleHorse.Common.Proto.LHTaskException) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Exception;
      }
    }

    /// <summary>Field number for the "masked_value" field.</summary>
    public const int MaskedValueFieldNumber = 12;
    private bool maskedValue_;
    /// <summary>
    /// Indicates whether the result of the attempt field has been masked
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MaskedValue {
      get { return maskedValue_; }
      set {
        maskedValue_ = value;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Output = 1,
      Error = 10,
      Exception = 11,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogOutput, other.LogOutput)) return false;
      if (!object.Equals(ScheduleTime, other.ScheduleTime)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      if (TaskWorkerId != other.TaskWorkerId) return false;
      if (TaskWorkerVersion != other.TaskWorkerVersion) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Exception, other.Exception)) return false;
      if (MaskedValue != other.MaskedValue) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logOutput_ != null) hash ^= LogOutput.GetHashCode();
      if (scheduleTime_ != null) hash ^= ScheduleTime.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (TaskWorkerId.Length != 0) hash ^= TaskWorkerId.GetHashCode();
      if (HasTaskWorkerVersion) hash ^= TaskWorkerVersion.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) hash ^= Status.GetHashCode();
      if (resultCase_ == ResultOneofCase.Output) hash ^= Output.GetHashCode();
      if (resultCase_ == ResultOneofCase.Error) hash ^= Error.GetHashCode();
      if (resultCase_ == ResultOneofCase.Exception) hash ^= Exception.GetHashCode();
      if (MaskedValue != false) hash ^= MaskedValue.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCase_ == ResultOneofCase.Output) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (logOutput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LogOutput);
      }
      if (scheduleTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ScheduleTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TaskWorkerId);
      }
      if (HasTaskWorkerVersion) {
        output.WriteRawTag(66);
        output.WriteString(TaskWorkerVersion);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        output.WriteRawTag(90);
        output.WriteMessage(Exception);
      }
      if (MaskedValue != false) {
        output.WriteRawTag(96);
        output.WriteBool(MaskedValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCase_ == ResultOneofCase.Output) {
        output.WriteRawTag(10);
        output.WriteMessage(Output);
      }
      if (logOutput_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LogOutput);
      }
      if (scheduleTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ScheduleTime);
      }
      if (startTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndTime);
      }
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TaskWorkerId);
      }
      if (HasTaskWorkerVersion) {
        output.WriteRawTag(66);
        output.WriteString(TaskWorkerVersion);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(82);
        output.WriteMessage(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        output.WriteRawTag(90);
        output.WriteMessage(Exception);
      }
      if (MaskedValue != false) {
        output.WriteRawTag(96);
        output.WriteBool(MaskedValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logOutput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogOutput);
      }
      if (scheduleTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleTime);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (TaskWorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskWorkerId);
      }
      if (HasTaskWorkerVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskWorkerVersion);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Output) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (MaskedValue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskAttempt other) {
      if (other == null) {
        return;
      }
      if (other.logOutput_ != null) {
        if (logOutput_ == null) {
          LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
        }
        LogOutput.MergeFrom(other.LogOutput);
      }
      if (other.scheduleTime_ != null) {
        if (scheduleTime_ == null) {
          ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduleTime.MergeFrom(other.ScheduleTime);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      if (other.TaskWorkerId.Length != 0) {
        TaskWorkerId = other.TaskWorkerId;
      }
      if (other.HasTaskWorkerVersion) {
        TaskWorkerVersion = other.TaskWorkerVersion;
      }
      if (other.Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        Status = other.Status;
      }
      if (other.MaskedValue != false) {
        MaskedValue = other.MaskedValue;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Output:
          if (Output == null) {
            Output = new global::LittleHorse.Common.Proto.VariableValue();
          }
          Output.MergeFrom(other.Output);
          break;
        case ResultOneofCase.Error:
          if (Error == null) {
            Error = new global::LittleHorse.Common.Proto.LHTaskError();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResultOneofCase.Exception:
          if (Exception == null) {
            Exception = new global::LittleHorse.Common.Proto.LHTaskException();
          }
          Exception.MergeFrom(other.Exception);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.VariableValue subBuilder = new global::LittleHorse.Common.Proto.VariableValue();
            if (resultCase_ == ResultOneofCase.Output) {
              subBuilder.MergeFrom(Output);
            }
            input.ReadMessage(subBuilder);
            Output = subBuilder;
            break;
          }
          case 18: {
            if (logOutput_ == null) {
              LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(LogOutput);
            break;
          }
          case 26: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 58: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 66: {
            TaskWorkerVersion = input.ReadString();
            break;
          }
          case 72: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 82: {
            global::LittleHorse.Common.Proto.LHTaskError subBuilder = new global::LittleHorse.Common.Proto.LHTaskError();
            if (resultCase_ == ResultOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 90: {
            global::LittleHorse.Common.Proto.LHTaskException subBuilder = new global::LittleHorse.Common.Proto.LHTaskException();
            if (resultCase_ == ResultOneofCase.Exception) {
              subBuilder.MergeFrom(Exception);
            }
            input.ReadMessage(subBuilder);
            Exception = subBuilder;
            break;
          }
          case 96: {
            MaskedValue = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.VariableValue subBuilder = new global::LittleHorse.Common.Proto.VariableValue();
            if (resultCase_ == ResultOneofCase.Output) {
              subBuilder.MergeFrom(Output);
            }
            input.ReadMessage(subBuilder);
            Output = subBuilder;
            break;
          }
          case 18: {
            if (logOutput_ == null) {
              LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(LogOutput);
            break;
          }
          case 26: {
            if (scheduleTime_ == null) {
              ScheduleTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduleTime);
            break;
          }
          case 34: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 42: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
          case 58: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 66: {
            TaskWorkerVersion = input.ReadString();
            break;
          }
          case 72: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 82: {
            global::LittleHorse.Common.Proto.LHTaskError subBuilder = new global::LittleHorse.Common.Proto.LHTaskError();
            if (resultCase_ == ResultOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 90: {
            global::LittleHorse.Common.Proto.LHTaskException subBuilder = new global::LittleHorse.Common.Proto.LHTaskException();
            if (resultCase_ == ResultOneofCase.Exception) {
              subBuilder.MergeFrom(Exception);
            }
            input.ReadMessage(subBuilder);
            Exception = subBuilder;
            break;
          }
          case 96: {
            MaskedValue = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The source of a TaskRun; i.e. why it was scheduled.
  /// </summary>
  public sealed partial class TaskRunSource : pb::IMessage<TaskRunSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRunSource> _parser = new pb::MessageParser<TaskRunSource>(() => new TaskRunSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRunSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunSource(TaskRunSource other) : this() {
      wfSpecId_ = other.wfSpecId_ != null ? other.wfSpecId_.Clone() : null;
      switch (other.TaskRunSourceCase) {
        case TaskRunSourceOneofCase.TaskNode:
          TaskNode = other.TaskNode.Clone();
          break;
        case TaskRunSourceOneofCase.UserTaskTrigger:
          UserTaskTrigger = other.UserTaskTrigger.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunSource Clone() {
      return new TaskRunSource(this);
    }

    /// <summary>Field number for the "task_node" field.</summary>
    public const int TaskNodeFieldNumber = 1;
    /// <summary>
    /// Reference to a NodeRun of type TASK which scheduled this TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskNodeReference TaskNode {
      get { return taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode ? (global::LittleHorse.Common.Proto.TaskNodeReference) taskRunSource_ : null; }
      set {
        taskRunSource_ = value;
        taskRunSourceCase_ = value == null ? TaskRunSourceOneofCase.None : TaskRunSourceOneofCase.TaskNode;
      }
    }

    /// <summary>Field number for the "user_task_trigger" field.</summary>
    public const int UserTaskTriggerFieldNumber = 2;
    /// <summary>
    /// Reference to the specific UserTaskRun trigger action which scheduled this TaskRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskTriggerReference UserTaskTrigger {
      get { return taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger ? (global::LittleHorse.Common.Proto.UserTaskTriggerReference) taskRunSource_ : null; }
      set {
        taskRunSource_ = value;
        taskRunSourceCase_ = value == null ? TaskRunSourceOneofCase.None : TaskRunSourceOneofCase.UserTaskTrigger;
      }
    }

    /// <summary>Field number for the "wf_spec_id" field.</summary>
    public const int WfSpecIdFieldNumber = 3;
    private global::LittleHorse.Common.Proto.WfSpecId wfSpecId_;
    /// <summary>
    /// The ID of the WfSpec that is being executed. Always set in ScheduledTask.source so
    /// that the WorkerContext can know this information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId WfSpecId {
      get { return wfSpecId_; }
      set {
        wfSpecId_ = value;
      }
    }

    private object taskRunSource_;
    /// <summary>Enum of possible cases for the "task_run_source" oneof.</summary>
    public enum TaskRunSourceOneofCase {
      None = 0,
      TaskNode = 1,
      UserTaskTrigger = 2,
    }
    private TaskRunSourceOneofCase taskRunSourceCase_ = TaskRunSourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunSourceOneofCase TaskRunSourceCase {
      get { return taskRunSourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskRunSource() {
      taskRunSourceCase_ = TaskRunSourceOneofCase.None;
      taskRunSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRunSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRunSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskNode, other.TaskNode)) return false;
      if (!object.Equals(UserTaskTrigger, other.UserTaskTrigger)) return false;
      if (!object.Equals(WfSpecId, other.WfSpecId)) return false;
      if (TaskRunSourceCase != other.TaskRunSourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) hash ^= TaskNode.GetHashCode();
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) hash ^= UserTaskTrigger.GetHashCode();
      if (wfSpecId_ != null) hash ^= WfSpecId.GetHashCode();
      hash ^= (int) taskRunSourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskNode);
      }
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) {
        output.WriteRawTag(18);
        output.WriteMessage(UserTaskTrigger);
      }
      if (wfSpecId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WfSpecId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskNode);
      }
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) {
        output.WriteRawTag(18);
        output.WriteMessage(UserTaskTrigger);
      }
      if (wfSpecId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WfSpecId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskNode);
      }
      if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskTrigger);
      }
      if (wfSpecId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfSpecId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRunSource other) {
      if (other == null) {
        return;
      }
      if (other.wfSpecId_ != null) {
        if (wfSpecId_ == null) {
          WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        WfSpecId.MergeFrom(other.WfSpecId);
      }
      switch (other.TaskRunSourceCase) {
        case TaskRunSourceOneofCase.TaskNode:
          if (TaskNode == null) {
            TaskNode = new global::LittleHorse.Common.Proto.TaskNodeReference();
          }
          TaskNode.MergeFrom(other.TaskNode);
          break;
        case TaskRunSourceOneofCase.UserTaskTrigger:
          if (UserTaskTrigger == null) {
            UserTaskTrigger = new global::LittleHorse.Common.Proto.UserTaskTriggerReference();
          }
          UserTaskTrigger.MergeFrom(other.UserTaskTrigger);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.TaskNodeReference subBuilder = new global::LittleHorse.Common.Proto.TaskNodeReference();
            if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) {
              subBuilder.MergeFrom(TaskNode);
            }
            input.ReadMessage(subBuilder);
            TaskNode = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.UserTaskTriggerReference subBuilder = new global::LittleHorse.Common.Proto.UserTaskTriggerReference();
            if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) {
              subBuilder.MergeFrom(UserTaskTrigger);
            }
            input.ReadMessage(subBuilder);
            UserTaskTrigger = subBuilder;
            break;
          }
          case 26: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.TaskNodeReference subBuilder = new global::LittleHorse.Common.Proto.TaskNodeReference();
            if (taskRunSourceCase_ == TaskRunSourceOneofCase.TaskNode) {
              subBuilder.MergeFrom(TaskNode);
            }
            input.ReadMessage(subBuilder);
            TaskNode = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.UserTaskTriggerReference subBuilder = new global::LittleHorse.Common.Proto.UserTaskTriggerReference();
            if (taskRunSourceCase_ == TaskRunSourceOneofCase.UserTaskTrigger) {
              subBuilder.MergeFrom(UserTaskTrigger);
            }
            input.ReadMessage(subBuilder);
            UserTaskTrigger = subBuilder;
            break;
          }
          case 26: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reference to a NodeRun of type TASK which caused a TaskRun to be scheduled.
  /// </summary>
  public sealed partial class TaskNodeReference : pb::IMessage<TaskNodeReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskNodeReference> _parser = new pb::MessageParser<TaskNodeReference>(() => new TaskNodeReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskNodeReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskNodeReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskNodeReference(TaskNodeReference other) : this() {
      nodeRunId_ = other.nodeRunId_ != null ? other.nodeRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskNodeReference Clone() {
      return new TaskNodeReference(this);
    }

    /// <summary>Field number for the "node_run_id" field.</summary>
    public const int NodeRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.NodeRunId nodeRunId_;
    /// <summary>
    /// The ID of the NodeRun which caused this TASK to be scheduled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.NodeRunId NodeRunId {
      get { return nodeRunId_; }
      set {
        nodeRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskNodeReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskNodeReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeRunId, other.NodeRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeRunId_ != null) hash ^= NodeRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskNodeReference other) {
      if (other == null) {
        return;
      }
      if (other.nodeRunId_ != null) {
        if (nodeRunId_ == null) {
          NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
        }
        NodeRunId.MergeFrom(other.NodeRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message denoting a TaskRun failed for technical reasons.
  /// </summary>
  public sealed partial class LHTaskError : pb::IMessage<LHTaskError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LHTaskError> _parser = new pb::MessageParser<LHTaskError>(() => new LHTaskError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LHTaskError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskError(LHTaskError other) : this() {
      type_ = other.type_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskError Clone() {
      return new LHTaskError(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::LittleHorse.Common.Proto.LHErrorType type_ = global::LittleHorse.Common.Proto.LHErrorType.ChildFailure;
    /// <summary>
    /// The technical error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHErrorType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human readable message for debugging.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LHTaskError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LHTaskError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::LittleHorse.Common.Proto.LHErrorType.ChildFailure) hash ^= Type.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::LittleHorse.Common.Proto.LHErrorType.ChildFailure) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::LittleHorse.Common.Proto.LHErrorType.ChildFailure) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::LittleHorse.Common.Proto.LHErrorType.ChildFailure) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LHTaskError other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::LittleHorse.Common.Proto.LHErrorType.ChildFailure) {
        Type = other.Type;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::LittleHorse.Common.Proto.LHErrorType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::LittleHorse.Common.Proto.LHErrorType) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message denoting a TaskRun's execution signaled that something went wrong in the
  /// business process, throwing a littlehorse 'EXCEPTION'.
  /// </summary>
  public sealed partial class LHTaskException : pb::IMessage<LHTaskException>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LHTaskException> _parser = new pb::MessageParser<LHTaskException>(() => new LHTaskException());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LHTaskException> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskException() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskException(LHTaskException other) : this() {
      name_ = other.name_;
      message_ = other.message_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHTaskException Clone() {
      return new LHTaskException(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The user-defined Failure name, for example, "credit-card-declined"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human readadble description of the failure.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableValue content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LHTaskException);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LHTaskException other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Content, other.Content)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LHTaskException other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::LittleHorse.Common.Proto.VariableValue();
        }
        Content.MergeFrom(other.Content);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
