// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: wf_spec.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LittleHorse.Common.Proto {

  /// <summary>Holder for reflection information generated from wf_spec.proto</summary>
  public static partial class WfSpecReflection {

    #region Descriptor
    /// <summary>File descriptor for wf_spec.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WfSpecReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg13Zl9zcGVjLnByb3RvEgtsaXR0bGVob3JzZRofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxoSY29tbW9uX2VudW1zLnByb3RvGhNjb21tb25f",
            "d2ZzcGVjLnByb3RvGg9vYmplY3RfaWQucHJvdG8itAUKBldmU3BlYxIhCgJp",
            "ZBgBIAEoCzIVLmxpdHRsZWhvcnNlLldmU3BlY0lkEi4KCmNyZWF0ZWRfYXQY",
            "AiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjMKEGZyb3plbl92",
            "YXJpYWJsZXMYAyADKAsyGS5saXR0bGVob3JzZS5UaHJlYWRWYXJEZWYSKwoG",
            "c3RhdHVzGAQgASgOMhsubGl0dGxlaG9yc2UuTWV0YWRhdGFTdGF0dXMSOgoM",
            "dGhyZWFkX3NwZWNzGAUgAygLMiQubGl0dGxlaG9yc2UuV2ZTcGVjLlRocmVh",
            "ZFNwZWNzRW50cnkSHgoWZW50cnlwb2ludF90aHJlYWRfbmFtZRgGIAEoCRJD",
            "ChByZXRlbnRpb25fcG9saWN5GAcgASgLMiQubGl0dGxlaG9yc2UuV29ya2Zs",
            "b3dSZXRlbnRpb25Qb2xpY3lIAIgBARI7CgltaWdyYXRpb24YCCABKAsyIy5s",
            "aXR0bGVob3JzZS5XZlNwZWNWZXJzaW9uTWlncmF0aW9uSAGIAQESRgoOcGFy",
            "ZW50X3dmX3NwZWMYCSABKAsyKS5saXR0bGVob3JzZS5XZlNwZWMuUGFyZW50",
            "V2ZTcGVjUmVmZXJlbmNlSAKIAQEaSwoQVGhyZWFkU3BlY3NFbnRyeRILCgNr",
            "ZXkYASABKAkSJgoFdmFsdWUYAiABKAsyFy5saXR0bGVob3JzZS5UaHJlYWRT",
            "cGVjOgI4ARpMChVQYXJlbnRXZlNwZWNSZWZlcmVuY2USFAoMd2Zfc3BlY19u",
            "YW1lGAEgASgJEh0KFXdmX3NwZWNfbWFqb3JfdmVyc2lvbhgCIAEoBUITChFf",
            "cmV0ZW50aW9uX3BvbGljeUIMCgpfbWlncmF0aW9uQhEKD19wYXJlbnRfd2Zf",
            "c3BlYyJRChdXb3JrZmxvd1JldGVudGlvblBvbGljeRImChxzZWNvbmRzX2Fm",
            "dGVyX3dmX3Rlcm1pbmF0aW9uGAEgASgDSABCDgoMd2ZfZ2NfcG9saWN5Ik4K",
            "CUpzb25JbmRleBISCgpmaWVsZF9wYXRoGAEgASgJEi0KCmZpZWxkX3R5cGUY",
            "AiABKA4yGS5saXR0bGVob3JzZS5WYXJpYWJsZVR5cGUiygEKDFRocmVhZFZh",
            "ckRlZhIpCgd2YXJfZGVmGAEgASgLMhgubGl0dGxlaG9yc2UuVmFyaWFibGVE",
            "ZWYSEAoIcmVxdWlyZWQYAiABKAgSEgoKc2VhcmNoYWJsZRgDIAEoCBIsCgxq",
            "c29uX2luZGV4ZXMYBCADKAsyFi5saXR0bGVob3JzZS5Kc29uSW5kZXgSOwoM",
            "YWNjZXNzX2xldmVsGAUgASgOMiUubGl0dGxlaG9yc2UuV2ZSdW5WYXJpYWJs",
            "ZUFjY2Vzc0xldmVsIr0CCgpUaHJlYWRTcGVjEjEKBW5vZGVzGAEgAygLMiIu",
            "bGl0dGxlaG9yc2UuVGhyZWFkU3BlYy5Ob2Rlc0VudHJ5EjAKDXZhcmlhYmxl",
            "X2RlZnMYAiADKAsyGS5saXR0bGVob3JzZS5UaHJlYWRWYXJEZWYSMQoOaW50",
            "ZXJydXB0X2RlZnMYAyADKAsyGS5saXR0bGVob3JzZS5JbnRlcnJ1cHREZWYS",
            "QQoQcmV0ZW50aW9uX3BvbGljeRgEIAEoCzIiLmxpdHRsZWhvcnNlLlRocmVh",
            "ZFJldGVudGlvblBvbGljeUgAiAEBGj8KCk5vZGVzRW50cnkSCwoDa2V5GAEg",
            "ASgJEiAKBXZhbHVlGAIgASgLMhEubGl0dGxlaG9yc2UuTm9kZToCOAFCEwoR",
            "X3JldGVudGlvbl9wb2xpY3kiVwoVVGhyZWFkUmV0ZW50aW9uUG9saWN5EioK",
            "IHNlY29uZHNfYWZ0ZXJfdGhyZWFkX3Rlcm1pbmF0aW9uGAEgASgDSABCEgoQ",
            "dGhyZWFkX2djX3BvbGljeSJpCgxJbnRlcnJ1cHREZWYSPgoVZXh0ZXJuYWxf",
            "ZXZlbnRfZGVmX2lkGAEgASgLMh8ubGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVu",
            "dERlZklkEhkKEWhhbmRsZXJfc3BlY19uYW1lGAIgASgJIr4BCg9TdGFydFRo",
            "cmVhZE5vZGUSGAoQdGhyZWFkX3NwZWNfbmFtZRgBIAEoCRI+Cgl2YXJpYWJs",
            "ZXMYAiADKAsyKy5saXR0bGVob3JzZS5TdGFydFRocmVhZE5vZGUuVmFyaWFi",
            "bGVzRW50cnkaUQoOVmFyaWFibGVzRW50cnkSCwoDa2V5GAEgASgJEi4KBXZh",
            "bHVlGAIgASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3NpZ25tZW50OgI4",
            "ASKDAgoYU3RhcnRNdWx0aXBsZVRocmVhZHNOb2RlEhgKEHRocmVhZF9zcGVj",
            "X25hbWUYASABKAkSRwoJdmFyaWFibGVzGAIgAygLMjQubGl0dGxlaG9yc2Uu",
            "U3RhcnRNdWx0aXBsZVRocmVhZHNOb2RlLlZhcmlhYmxlc0VudHJ5EjEKCGl0",
            "ZXJhYmxlGAMgASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3NpZ25tZW50",
            "GlEKDlZhcmlhYmxlc0VudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEo",
            "CzIfLmxpdHRsZWhvcnNlLlZhcmlhYmxlQXNzaWdubWVudDoCOAEi8AEKEUZh",
            "aWx1cmVIYW5kbGVyRGVmEhkKEWhhbmRsZXJfc3BlY19uYW1lGAIgASgJEhoK",
            "EHNwZWNpZmljX2ZhaWx1cmUYASABKAlIABJLChNhbnlfZmFpbHVyZV9vZl90",
            "eXBlGAMgASgOMiwubGl0dGxlaG9yc2UuRmFpbHVyZUhhbmRsZXJEZWYuTEhG",
            "YWlsdXJlVHlwZUgAIkMKDUxIRmFpbHVyZVR5cGUSFgoSRkFJTFVSRV9UWVBF",
            "X0VSUk9SEAASGgoWRkFJTFVSRV9UWVBFX0VYQ0VQVElPThABQhIKEGZhaWx1",
            "cmVfdG9fY2F0Y2gikgMKEldhaXRGb3JUaHJlYWRzTm9kZRJDCgd0aHJlYWRz",
            "GAEgASgLMjAubGl0dGxlaG9yc2UuV2FpdEZvclRocmVhZHNOb2RlLlRocmVh",
            "ZHNUb1dhaXRGb3JIABI2Cgt0aHJlYWRfbGlzdBgCIAEoCzIfLmxpdHRsZWhv",
            "cnNlLlZhcmlhYmxlQXNzaWdubWVudEgAEkMKG3Blcl90aHJlYWRfZmFpbHVy",
            "ZV9oYW5kbGVycxgDIAMoCzIeLmxpdHRsZWhvcnNlLkZhaWx1cmVIYW5kbGVy",
            "RGVmGk0KD1RocmVhZFRvV2FpdEZvchI6ChF0aHJlYWRfcnVuX251bWJlchgB",
            "IAEoCzIfLmxpdHRsZWhvcnNlLlZhcmlhYmxlQXNzaWdubWVudBpUChBUaHJl",
            "YWRzVG9XYWl0Rm9yEkAKB3RocmVhZHMYASADKAsyLy5saXR0bGVob3JzZS5X",
            "YWl0Rm9yVGhyZWFkc05vZGUuVGhyZWFkVG9XYWl0Rm9yQhUKE3RocmVhZHNf",
            "dG9fd2FpdF9mb3IijQEKEUV4dGVybmFsRXZlbnROb2RlEj4KFWV4dGVybmFs",
            "X2V2ZW50X2RlZl9pZBgBIAEoCzIfLmxpdHRsZWhvcnNlLkV4dGVybmFsRXZl",
            "bnREZWZJZBI4Cg90aW1lb3V0X3NlY29uZHMYAiABKAsyHy5saXR0bGVob3Jz",
            "ZS5WYXJpYWJsZUFzc2lnbm1lbnQiEAoORW50cnlwb2ludE5vZGUiTQoIRXhp",
            "dE5vZGUSMQoLZmFpbHVyZV9kZWYYASABKAsyFy5saXR0bGVob3JzZS5GYWls",
            "dXJlRGVmSACIAQFCDgoMX2ZhaWx1cmVfZGVmInYKCkZhaWx1cmVEZWYSFAoM",
            "ZmFpbHVyZV9uYW1lGAEgASgJEg8KB21lc3NhZ2UYAiABKAkSNQoHY29udGVu",
            "dBgDIAEoCzIfLmxpdHRsZWhvcnNlLlZhcmlhYmxlQXNzaWdubWVudEgAiAEB",
            "QgoKCF9jb250ZW50IpwFCgROb2RlEikKDm91dGdvaW5nX2VkZ2VzGAEgAygL",
            "MhEubGl0dGxlaG9yc2UuRWRnZRI4ChBmYWlsdXJlX2hhbmRsZXJzGAQgAygL",
            "Mh4ubGl0dGxlaG9yc2UuRmFpbHVyZUhhbmRsZXJEZWYSMQoKZW50cnlwb2lu",
            "dBgFIAEoCzIbLmxpdHRsZWhvcnNlLkVudHJ5cG9pbnROb2RlSAASJQoEZXhp",
            "dBgGIAEoCzIVLmxpdHRsZWhvcnNlLkV4aXROb2RlSAASJQoEdGFzaxgHIAEo",
            "CzIVLmxpdHRsZWhvcnNlLlRhc2tOb2RlSAASOAoOZXh0ZXJuYWxfZXZlbnQY",
            "CCABKAsyHi5saXR0bGVob3JzZS5FeHRlcm5hbEV2ZW50Tm9kZUgAEjQKDHN0",
            "YXJ0X3RocmVhZBgJIAEoCzIcLmxpdHRsZWhvcnNlLlN0YXJ0VGhyZWFkTm9k",
            "ZUgAEjsKEHdhaXRfZm9yX3RocmVhZHMYCiABKAsyHy5saXR0bGVob3JzZS5X",
            "YWl0Rm9yVGhyZWFkc05vZGVIABIjCgNub3AYCyABKAsyFC5saXR0bGVob3Jz",
            "ZS5Ob3BOb2RlSAASJwoFc2xlZXAYDCABKAsyFi5saXR0bGVob3JzZS5TbGVl",
            "cE5vZGVIABIuCgl1c2VyX3Rhc2sYDSABKAsyGS5saXR0bGVob3JzZS5Vc2Vy",
            "VGFza05vZGVIABJHChZzdGFydF9tdWx0aXBsZV90aHJlYWRzGA8gASgLMiUu",
            "bGl0dGxlaG9yc2UuU3RhcnRNdWx0aXBsZVRocmVhZHNOb2RlSAASMgoLdGhy",
            "b3dfZXZlbnQYECABKAsyGy5saXR0bGVob3JzZS5UaHJvd0V2ZW50Tm9kZUgA",
            "QgYKBG5vZGUieQoOVGhyb3dFdmVudE5vZGUSNQoMZXZlbnRfZGVmX2lkGAEg",
            "ASgLMh8ubGl0dGxlaG9yc2UuV29ya2Zsb3dFdmVudERlZklkEjAKB2NvbnRl",
            "bnQYAiABKAsyHy5saXR0bGVob3JzZS5WYXJpYWJsZUFzc2lnbm1lbnQi0wMK",
            "DFVzZXJUYXNrTm9kZRIaChJ1c2VyX3Rhc2tfZGVmX25hbWUYASABKAkSOAoK",
            "dXNlcl9ncm91cBgCIAEoCzIfLmxpdHRsZWhvcnNlLlZhcmlhYmxlQXNzaWdu",
            "bWVudEgAiAEBEjUKB3VzZXJfaWQYAyABKAsyHy5saXR0bGVob3JzZS5WYXJp",
            "YWJsZUFzc2lnbm1lbnRIAYgBARItCgdhY3Rpb25zGAQgAygLMhwubGl0dGxl",
            "aG9yc2UuVVRBY3Rpb25UcmlnZ2VyEiIKFXVzZXJfdGFza19kZWZfdmVyc2lv",
            "bhgFIAEoBUgCiAEBEjMKBW5vdGVzGAYgASgLMh8ubGl0dGxlaG9yc2UuVmFy",
            "aWFibGVBc3NpZ25tZW50SAOIAQESTAoeb25fY2FuY2VsbGF0aW9uX2V4Y2Vw",
            "dGlvbl9uYW1lGAcgASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3NpZ25t",
            "ZW50SASIAQFCDQoLX3VzZXJfZ3JvdXBCCgoIX3VzZXJfaWRCGAoWX3VzZXJf",
            "dGFza19kZWZfdmVyc2lvbkIICgZfbm90ZXNCIQofX29uX2NhbmNlbGxhdGlv",
            "bl9leGNlcHRpb25fbmFtZSKbAQoNRWRnZUNvbmRpdGlvbhIrCgpjb21wYXJh",
            "dG9yGAEgASgOMhcubGl0dGxlaG9yc2UuQ29tcGFyYXRvchItCgRsZWZ0GAIg",
            "ASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3NpZ25tZW50Ei4KBXJpZ2h0",
            "GAMgASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3NpZ25tZW50IpsBCgRF",
            "ZGdlEhYKDnNpbmtfbm9kZV9uYW1lGAEgASgJEjIKCWNvbmRpdGlvbhgCIAEo",
            "CzIaLmxpdHRsZWhvcnNlLkVkZ2VDb25kaXRpb25IAIgBARI5ChJ2YXJpYWJs",
            "ZV9tdXRhdGlvbnMYAyADKAsyHS5saXR0bGVob3JzZS5WYXJpYWJsZU11dGF0",
            "aW9uQgwKCl9jb25kaXRpb24iCQoHTm9wTm9kZSK+AQoJU2xlZXBOb2RlEjYK",
            "C3Jhd19zZWNvbmRzGAEgASgLMh8ubGl0dGxlaG9yc2UuVmFyaWFibGVBc3Np",
            "Z25tZW50SAASNAoJdGltZXN0YW1wGAIgASgLMh8ubGl0dGxlaG9yc2UuVmFy",
            "aWFibGVBc3NpZ25tZW50SAASMwoIaXNvX2RhdGUYAyABKAsyHy5saXR0bGVo",
            "b3JzZS5WYXJpYWJsZUFzc2lnbm1lbnRIAEIOCgxzbGVlcF9sZW5ndGgihwIK",
            "FldmU3BlY1ZlcnNpb25NaWdyYXRpb24SGQoRbmV3X21ham9yX3ZlcnNpb24Y",
            "ASABKAUSFAoMbmV3X3JldmlzaW9uGAIgASgFEl0KFnRocmVhZF9zcGVjX21p",
            "Z3JhdGlvbnMYAyADKAsyPS5saXR0bGVob3JzZS5XZlNwZWNWZXJzaW9uTWln",
            "cmF0aW9uLlRocmVhZFNwZWNNaWdyYXRpb25zRW50cnkaXQoZVGhyZWFkU3Bl",
            "Y01pZ3JhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsy",
            "IC5saXR0bGVob3JzZS5UaHJlYWRTcGVjTWlncmF0aW9uOgI4ASLVAQoTVGhy",
            "ZWFkU3BlY01pZ3JhdGlvbhIcChRuZXdfdGhyZWFkX3NwZWNfbmFtZRgBIAEo",
            "CRJNCg9ub2RlX21pZ3JhdGlvbnMYAiADKAsyNC5saXR0bGVob3JzZS5UaHJl",
            "YWRTcGVjTWlncmF0aW9uLk5vZGVNaWdyYXRpb25zRW50cnkaUQoTTm9kZU1p",
            "Z3JhdGlvbnNFbnRyeRILCgNrZXkYASABKAkSKQoFdmFsdWUYAiABKAsyGi5s",
            "aXR0bGVob3JzZS5Ob2RlTWlncmF0aW9uOgI4ASImCg1Ob2RlTWlncmF0aW9u",
            "EhUKDW5ld19ub2RlX25hbWUYASABKAkqTgoYV2ZSdW5WYXJpYWJsZUFjY2Vz",
            "c0xldmVsEg4KClBVQkxJQ19WQVIQABIPCgtQUklWQVRFX1ZBUhABEhEKDUlO",
            "SEVSSVRFRF9WQVIQAkJJCh9pby5saXR0bGVob3JzZS5zZGsuY29tbW9uLnBy",
            "b3RvUAFaCS47bGhwcm90b6oCGExpdHRsZUhvcnNlLkNvbW1vbi5Qcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::LittleHorse.Common.Proto.CommonEnumsReflection.Descriptor, global::LittleHorse.Common.Proto.CommonWfspecReflection.Descriptor, global::LittleHorse.Common.Proto.ObjectIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LittleHorse.Common.Proto.WfRunVariableAccessLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpec), global::LittleHorse.Common.Proto.WfSpec.Parser, new[]{ "Id", "CreatedAt", "FrozenVariables", "Status", "ThreadSpecs", "EntrypointThreadName", "RetentionPolicy", "Migration", "ParentWfSpec" }, new[]{ "RetentionPolicy", "Migration", "ParentWfSpec" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference), global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference.Parser, new[]{ "WfSpecName", "WfSpecMajorVersion" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WorkflowRetentionPolicy), global::LittleHorse.Common.Proto.WorkflowRetentionPolicy.Parser, new[]{ "SecondsAfterWfTermination" }, new[]{ "WfGcPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.JsonIndex), global::LittleHorse.Common.Proto.JsonIndex.Parser, new[]{ "FieldPath", "FieldType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ThreadVarDef), global::LittleHorse.Common.Proto.ThreadVarDef.Parser, new[]{ "VarDef", "Required", "Searchable", "JsonIndexes", "AccessLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ThreadSpec), global::LittleHorse.Common.Proto.ThreadSpec.Parser, new[]{ "Nodes", "VariableDefs", "InterruptDefs", "RetentionPolicy" }, new[]{ "RetentionPolicy" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ThreadRetentionPolicy), global::LittleHorse.Common.Proto.ThreadRetentionPolicy.Parser, new[]{ "SecondsAfterThreadTermination" }, new[]{ "ThreadGcPolicy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.InterruptDef), global::LittleHorse.Common.Proto.InterruptDef.Parser, new[]{ "ExternalEventDefId", "HandlerSpecName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.StartThreadNode), global::LittleHorse.Common.Proto.StartThreadNode.Parser, new[]{ "ThreadSpecName", "Variables" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.StartMultipleThreadsNode), global::LittleHorse.Common.Proto.StartMultipleThreadsNode.Parser, new[]{ "ThreadSpecName", "Variables", "Iterable" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.FailureHandlerDef), global::LittleHorse.Common.Proto.FailureHandlerDef.Parser, new[]{ "HandlerSpecName", "SpecificFailure", "AnyFailureOfType" }, new[]{ "FailureToCatch" }, new[]{ typeof(global::LittleHorse.Common.Proto.FailureHandlerDef.Types.LHFailureType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WaitForThreadsNode), global::LittleHorse.Common.Proto.WaitForThreadsNode.Parser, new[]{ "Threads", "ThreadList", "PerThreadFailureHandlers" }, new[]{ "ThreadsToWaitFor" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor), global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor.Parser, new[]{ "ThreadRunNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor), global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor.Parser, new[]{ "Threads" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ExternalEventNode), global::LittleHorse.Common.Proto.ExternalEventNode.Parser, new[]{ "ExternalEventDefId", "TimeoutSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.EntrypointNode), global::LittleHorse.Common.Proto.EntrypointNode.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ExitNode), global::LittleHorse.Common.Proto.ExitNode.Parser, new[]{ "FailureDef" }, new[]{ "FailureDef" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.FailureDef), global::LittleHorse.Common.Proto.FailureDef.Parser, new[]{ "FailureName", "Message", "Content" }, new[]{ "Content" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.Node), global::LittleHorse.Common.Proto.Node.Parser, new[]{ "OutgoingEdges", "FailureHandlers", "Entrypoint", "Exit", "Task", "ExternalEvent", "StartThread", "WaitForThreads", "Nop", "Sleep", "UserTask", "StartMultipleThreads", "ThrowEvent" }, new[]{ "Node" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ThrowEventNode), global::LittleHorse.Common.Proto.ThrowEventNode.Parser, new[]{ "EventDefId", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskNode), global::LittleHorse.Common.Proto.UserTaskNode.Parser, new[]{ "UserTaskDefName", "UserGroup", "UserId", "Actions", "UserTaskDefVersion", "Notes", "OnCancellationExceptionName" }, new[]{ "UserGroup", "UserId", "UserTaskDefVersion", "Notes", "OnCancellationExceptionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.EdgeCondition), global::LittleHorse.Common.Proto.EdgeCondition.Parser, new[]{ "Comparator", "Left", "Right" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.Edge), global::LittleHorse.Common.Proto.Edge.Parser, new[]{ "SinkNodeName", "Condition", "VariableMutations" }, new[]{ "Condition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.NopNode), global::LittleHorse.Common.Proto.NopNode.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SleepNode), global::LittleHorse.Common.Proto.SleepNode.Parser, new[]{ "RawSeconds", "Timestamp", "IsoDate" }, new[]{ "SleepLength" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpecVersionMigration), global::LittleHorse.Common.Proto.WfSpecVersionMigration.Parser, new[]{ "NewMajorVersion", "NewRevision", "ThreadSpecMigrations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ThreadSpecMigration), global::LittleHorse.Common.Proto.ThreadSpecMigration.Parser, new[]{ "NewThreadSpecName", "NodeMigrations" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.NodeMigration), global::LittleHorse.Common.Proto.NodeMigration.Parser, new[]{ "NewNodeName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Determines the Access Level for a Variable in a ThreadSpec/WfSpec.
  /// </summary>
  public enum WfRunVariableAccessLevel {
    /// <summary>
    /// A `PUBLIC_VAR` can be accessed (read + mutated) by child `WfRun`'s.
    /// </summary>
    [pbr::OriginalName("PUBLIC_VAR")] PublicVar = 0,
    /// <summary>
    /// A `PRIVATE_VAR` cannot be accessed by a child `WfRun`.
    /// </summary>
    [pbr::OriginalName("PRIVATE_VAR")] PrivateVar = 1,
    /// <summary>
    /// An `INHERITED_VAR` is inherited from the parent `WfRun`. Only valid in a `WfSpec` that
    /// has a parent. Also can only be declared in the Entrypoint Thread.
    /// </summary>
    [pbr::OriginalName("INHERITED_VAR")] InheritedVar = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A `WfSpec` defines the logic for a workflow in LittleHorse. It is a metadata object
  /// and is a blueprint for a `WfRun` execution.
  /// </summary>
  public sealed partial class WfSpec : pb::IMessage<WfSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfSpec> _parser = new pb::MessageParser<WfSpec>(() => new WfSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpec(WfSpec other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      frozenVariables_ = other.frozenVariables_.Clone();
      status_ = other.status_;
      threadSpecs_ = other.threadSpecs_.Clone();
      entrypointThreadName_ = other.entrypointThreadName_;
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      migration_ = other.migration_ != null ? other.migration_.Clone() : null;
      parentWfSpec_ = other.parentWfSpec_ != null ? other.parentWfSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpec Clone() {
      return new WfSpec(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId id_;
    /// <summary>
    /// The ID of the `WfSpec`. Note that this ID is versioned with both a major
    /// version and a minor revision. Creating new WfSpec's with the same name
    /// and different specifications results in a completely new `WfSpec` object
    /// whose `id.name` is the same but with different version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// The timestamp at which the `WfSpec` was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "frozen_variables" field.</summary>
    public const int FrozenVariablesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ThreadVarDef> _repeated_frozenVariables_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.ThreadVarDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef> frozenVariables_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef>();
    /// <summary>
    /// Variables whose types cannot be changed without causing a Breaking Change between
    /// the versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef> FrozenVariables {
      get { return frozenVariables_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::LittleHorse.Common.Proto.MetadataStatus status_ = global::LittleHorse.Common.Proto.MetadataStatus.Active;
    /// <summary>
    /// The Status of the `WfSpec`. Currently, only `ACTIVE` exists. This field will be
    /// used in the future when de-commissioning a WfSpec gracefully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetadataStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "thread_specs" field.</summary>
    public const int ThreadSpecsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>.Codec _map_threadSpecs_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ThreadSpec.Parser), 42);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec> threadSpecs_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>();
    /// <summary>
    /// The various ThreadSpec's in this `WfSpec`. Each `ThreadSpec` defines a blueprint for
    /// a parallel thread of execution (a `ThreadRun`). They are referred to by their names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec> ThreadSpecs {
      get { return threadSpecs_; }
    }

    /// <summary>Field number for the "entrypoint_thread_name" field.</summary>
    public const int EntrypointThreadNameFieldNumber = 6;
    private string entrypointThreadName_ = "";
    /// <summary>
    /// The name of the `ENTRYPOINT` ThreadSpec. The Entrypoint is the `ThreadSpec` for the
    /// Entrypoint ThreadRun, which is the `ThreadRun` that is created upon starting the
    /// `WfRun`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntrypointThreadName {
      get { return entrypointThreadName_; }
      set {
        entrypointThreadName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 7;
    private global::LittleHorse.Common.Proto.WorkflowRetentionPolicy retentionPolicy_;
    /// <summary>
    /// Optional policy that configures cleaning up old `WfRun`'s after they are completed or
    /// failed. Recommended for production settings to avoid running out of disk space; unless
    /// you are using a `WfRun` as a data record, in which case the application should
    /// clean up `WfRun`'s as appropriate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WorkflowRetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    /// <summary>Field number for the "migration" field.</summary>
    public const int MigrationFieldNumber = 8;
    private global::LittleHorse.Common.Proto.WfSpecVersionMigration migration_;
    /// <summary>
    /// EXPERIMENTAL: ongoing migration from one version of a `WfSpec` to another.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecVersionMigration Migration {
      get { return migration_; }
      set {
        migration_ = value;
      }
    }

    /// <summary>Field number for the "parent_wf_spec" field.</summary>
    public const int ParentWfSpecFieldNumber = 9;
    private global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference parentWfSpec_;
    /// <summary>
    /// Reference to the parent WfSpec. If this is set, all WfRun's for this WfSpec must be the
    /// child of a WfRun belonging to the referenced WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference ParentWfSpec {
      get { return parentWfSpec_; }
      set {
        parentWfSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if(!frozenVariables_.Equals(other.frozenVariables_)) return false;
      if (Status != other.Status) return false;
      if (!ThreadSpecs.Equals(other.ThreadSpecs)) return false;
      if (EntrypointThreadName != other.EntrypointThreadName) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      if (!object.Equals(Migration, other.Migration)) return false;
      if (!object.Equals(ParentWfSpec, other.ParentWfSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      hash ^= frozenVariables_.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.MetadataStatus.Active) hash ^= Status.GetHashCode();
      hash ^= ThreadSpecs.GetHashCode();
      if (EntrypointThreadName.Length != 0) hash ^= EntrypointThreadName.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (migration_ != null) hash ^= Migration.GetHashCode();
      if (parentWfSpec_ != null) hash ^= ParentWfSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      frozenVariables_.WriteTo(output, _repeated_frozenVariables_codec);
      if (Status != global::LittleHorse.Common.Proto.MetadataStatus.Active) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      threadSpecs_.WriteTo(output, _map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RetentionPolicy);
      }
      if (migration_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Migration);
      }
      if (parentWfSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ParentWfSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      frozenVariables_.WriteTo(ref output, _repeated_frozenVariables_codec);
      if (Status != global::LittleHorse.Common.Proto.MetadataStatus.Active) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      threadSpecs_.WriteTo(ref output, _map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RetentionPolicy);
      }
      if (migration_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Migration);
      }
      if (parentWfSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ParentWfSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      size += frozenVariables_.CalculateSize(_repeated_frozenVariables_codec);
      if (Status != global::LittleHorse.Common.Proto.MetadataStatus.Active) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += threadSpecs_.CalculateSize(_map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (migration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Migration);
      }
      if (parentWfSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentWfSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfSpec other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      frozenVariables_.Add(other.frozenVariables_);
      if (other.Status != global::LittleHorse.Common.Proto.MetadataStatus.Active) {
        Status = other.Status;
      }
      threadSpecs_.MergeFrom(other.threadSpecs_);
      if (other.EntrypointThreadName.Length != 0) {
        EntrypointThreadName = other.EntrypointThreadName;
      }
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      if (other.migration_ != null) {
        if (migration_ == null) {
          Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
        }
        Migration.MergeFrom(other.Migration);
      }
      if (other.parentWfSpec_ != null) {
        if (parentWfSpec_ == null) {
          ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
        }
        ParentWfSpec.MergeFrom(other.ParentWfSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            frozenVariables_.AddEntriesFrom(input, _repeated_frozenVariables_codec);
            break;
          }
          case 32: {
            Status = (global::LittleHorse.Common.Proto.MetadataStatus) input.ReadEnum();
            break;
          }
          case 42: {
            threadSpecs_.AddEntriesFrom(input, _map_threadSpecs_codec);
            break;
          }
          case 50: {
            EntrypointThreadName = input.ReadString();
            break;
          }
          case 58: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
          case 66: {
            if (migration_ == null) {
              Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
            }
            input.ReadMessage(Migration);
            break;
          }
          case 74: {
            if (parentWfSpec_ == null) {
              ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
            }
            input.ReadMessage(ParentWfSpec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            frozenVariables_.AddEntriesFrom(ref input, _repeated_frozenVariables_codec);
            break;
          }
          case 32: {
            Status = (global::LittleHorse.Common.Proto.MetadataStatus) input.ReadEnum();
            break;
          }
          case 42: {
            threadSpecs_.AddEntriesFrom(ref input, _map_threadSpecs_codec);
            break;
          }
          case 50: {
            EntrypointThreadName = input.ReadString();
            break;
          }
          case 58: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
          case 66: {
            if (migration_ == null) {
              Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
            }
            input.ReadMessage(Migration);
            break;
          }
          case 74: {
            if (parentWfSpec_ == null) {
              ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
            }
            input.ReadMessage(ParentWfSpec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the WfSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Reference to another WfSpec. If a WfSpec has a ParentWfSpecReference, then all
      /// WfRun's for that WfSpec *MUST* be the child of a WfRun of the provided WfSpec; meaning
      /// that the RunWf RPC must provide a `parent_wf_run_id` that belongs to the specified
      /// WfSpec.
      ///
      /// Currently, only reference by names is supported.
      /// </summary>
      public sealed partial class ParentWfSpecReference : pb::IMessage<ParentWfSpecReference>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ParentWfSpecReference> _parser = new pb::MessageParser<ParentWfSpecReference>(() => new ParentWfSpecReference());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ParentWfSpecReference> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.WfSpec.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParentWfSpecReference() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParentWfSpecReference(ParentWfSpecReference other) : this() {
          wfSpecName_ = other.wfSpecName_;
          wfSpecMajorVersion_ = other.wfSpecMajorVersion_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ParentWfSpecReference Clone() {
          return new ParentWfSpecReference(this);
        }

        /// <summary>Field number for the "wf_spec_name" field.</summary>
        public const int WfSpecNameFieldNumber = 1;
        private string wfSpecName_ = "";
        /// <summary>
        /// Name of the Parent WfSpec
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string WfSpecName {
          get { return wfSpecName_; }
          set {
            wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "wf_spec_major_version" field.</summary>
        public const int WfSpecMajorVersionFieldNumber = 2;
        private int wfSpecMajorVersion_;
        /// <summary>
        /// FOR NOW: no validation of variables on parent. In the future we will pass
        /// wf_spec_major_version, but we should probably examine the rules for
        /// evolution in the future.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int WfSpecMajorVersion {
          get { return wfSpecMajorVersion_; }
          set {
            wfSpecMajorVersion_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ParentWfSpecReference);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ParentWfSpecReference other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (WfSpecName != other.WfSpecName) return false;
          if (WfSpecMajorVersion != other.WfSpecMajorVersion) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
          if (WfSpecMajorVersion != 0) hash ^= WfSpecMajorVersion.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (WfSpecName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(WfSpecName);
          }
          if (WfSpecMajorVersion != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(WfSpecMajorVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (WfSpecName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(WfSpecName);
          }
          if (WfSpecMajorVersion != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(WfSpecMajorVersion);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (WfSpecName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
          }
          if (WfSpecMajorVersion != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(WfSpecMajorVersion);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ParentWfSpecReference other) {
          if (other == null) {
            return;
          }
          if (other.WfSpecName.Length != 0) {
            WfSpecName = other.WfSpecName;
          }
          if (other.WfSpecMajorVersion != 0) {
            WfSpecMajorVersion = other.WfSpecMajorVersion;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                WfSpecName = input.ReadString();
                break;
              }
              case 16: {
                WfSpecMajorVersion = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                WfSpecName = input.ReadString();
                break;
              }
              case 16: {
                WfSpecMajorVersion = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// A WorkflowRetentionPolicy configures how long a WfRun is retained in the data store before
  /// being deleted after it is completed or failed.
  /// </summary>
  public sealed partial class WorkflowRetentionPolicy : pb::IMessage<WorkflowRetentionPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WorkflowRetentionPolicy> _parser = new pb::MessageParser<WorkflowRetentionPolicy>(() => new WorkflowRetentionPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WorkflowRetentionPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowRetentionPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowRetentionPolicy(WorkflowRetentionPolicy other) : this() {
      switch (other.WfGcPolicyCase) {
        case WfGcPolicyOneofCase.SecondsAfterWfTermination:
          SecondsAfterWfTermination = other.SecondsAfterWfTermination;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WorkflowRetentionPolicy Clone() {
      return new WorkflowRetentionPolicy(this);
    }

    /// <summary>Field number for the "seconds_after_wf_termination" field.</summary>
    public const int SecondsAfterWfTerminationFieldNumber = 1;
    /// <summary>
    /// Delete all WfRun's X seconds after they terminate, regardless of
    /// status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SecondsAfterWfTermination {
      get { return HasSecondsAfterWfTermination ? (long) wfGcPolicy_ : 0L; }
      set {
        wfGcPolicy_ = value;
        wfGcPolicyCase_ = WfGcPolicyOneofCase.SecondsAfterWfTermination;
      }
    }
    /// <summary>Gets whether the "seconds_after_wf_termination" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsAfterWfTermination {
      get { return wfGcPolicyCase_ == WfGcPolicyOneofCase.SecondsAfterWfTermination; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "seconds_after_wf_termination" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsAfterWfTermination() {
      if (HasSecondsAfterWfTermination) {
        ClearWfGcPolicy();
      }
    }

    private object wfGcPolicy_;
    /// <summary>Enum of possible cases for the "wf_gc_policy" oneof.</summary>
    public enum WfGcPolicyOneofCase {
      None = 0,
      SecondsAfterWfTermination = 1,
    }
    private WfGcPolicyOneofCase wfGcPolicyCase_ = WfGcPolicyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfGcPolicyOneofCase WfGcPolicyCase {
      get { return wfGcPolicyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfGcPolicy() {
      wfGcPolicyCase_ = WfGcPolicyOneofCase.None;
      wfGcPolicy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WorkflowRetentionPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WorkflowRetentionPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SecondsAfterWfTermination != other.SecondsAfterWfTermination) return false;
      if (WfGcPolicyCase != other.WfGcPolicyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSecondsAfterWfTermination) hash ^= SecondsAfterWfTermination.GetHashCode();
      hash ^= (int) wfGcPolicyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSecondsAfterWfTermination) {
        output.WriteRawTag(8);
        output.WriteInt64(SecondsAfterWfTermination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSecondsAfterWfTermination) {
        output.WriteRawTag(8);
        output.WriteInt64(SecondsAfterWfTermination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSecondsAfterWfTermination) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SecondsAfterWfTermination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WorkflowRetentionPolicy other) {
      if (other == null) {
        return;
      }
      switch (other.WfGcPolicyCase) {
        case WfGcPolicyOneofCase.SecondsAfterWfTermination:
          SecondsAfterWfTermination = other.SecondsAfterWfTermination;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SecondsAfterWfTermination = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SecondsAfterWfTermination = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines an index to make a JSON_OBJ or JSON_ARR variable searchable over a specific
  /// JSON Path.
  /// </summary>
  public sealed partial class JsonIndex : pb::IMessage<JsonIndex>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JsonIndex> _parser = new pb::MessageParser<JsonIndex>(() => new JsonIndex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<JsonIndex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JsonIndex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JsonIndex(JsonIndex other) : this() {
      fieldPath_ = other.fieldPath_;
      fieldType_ = other.fieldType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public JsonIndex Clone() {
      return new JsonIndex(this);
    }

    /// <summary>Field number for the "field_path" field.</summary>
    public const int FieldPathFieldNumber = 1;
    private string fieldPath_ = "";
    /// <summary>
    /// Denotes the path in JSONPath format (according to the Java Jayway library) that
    /// has a field we should index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FieldPath {
      get { return fieldPath_; }
      set {
        fieldPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "field_type" field.</summary>
    public const int FieldTypeFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableType fieldType_ = global::LittleHorse.Common.Proto.VariableType.JsonObj;
    /// <summary>
    /// Is the type of the field we are indexing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableType FieldType {
      get { return fieldType_; }
      set {
        fieldType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as JsonIndex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(JsonIndex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldPath != other.FieldPath) return false;
      if (FieldType != other.FieldType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldPath.Length != 0) hash ^= FieldPath.GetHashCode();
      if (FieldType != global::LittleHorse.Common.Proto.VariableType.JsonObj) hash ^= FieldType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FieldPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldPath);
      }
      if (FieldType != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FieldType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FieldPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FieldPath);
      }
      if (FieldType != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FieldType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FieldPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldPath);
      }
      if (FieldType != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FieldType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(JsonIndex other) {
      if (other == null) {
        return;
      }
      if (other.FieldPath.Length != 0) {
        FieldPath = other.FieldPath;
      }
      if (other.FieldType != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        FieldType = other.FieldType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FieldPath = input.ReadString();
            break;
          }
          case 16: {
            FieldType = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FieldPath = input.ReadString();
            break;
          }
          case 16: {
            FieldType = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Denotes a variable declaration at the ThreadSpec level.
  /// </summary>
  public sealed partial class ThreadVarDef : pb::IMessage<ThreadVarDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreadVarDef> _parser = new pb::MessageParser<ThreadVarDef>(() => new ThreadVarDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThreadVarDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadVarDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadVarDef(ThreadVarDef other) : this() {
      varDef_ = other.varDef_ != null ? other.varDef_.Clone() : null;
      required_ = other.required_;
      searchable_ = other.searchable_;
      jsonIndexes_ = other.jsonIndexes_.Clone();
      accessLevel_ = other.accessLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadVarDef Clone() {
      return new ThreadVarDef(this);
    }

    /// <summary>Field number for the "var_def" field.</summary>
    public const int VarDefFieldNumber = 1;
    private global::LittleHorse.Common.Proto.VariableDef varDef_;
    /// <summary>
    /// Is the actual VariableDefinition containing name and type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableDef VarDef {
      get { return varDef_; }
      set {
        varDef_ = value;
      }
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 2;
    private bool required_;
    /// <summary>
    /// Whether the variable is required as input to the threadRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Required {
      get { return required_; }
      set {
        required_ = value;
      }
    }

    /// <summary>Field number for the "searchable" field.</summary>
    public const int SearchableFieldNumber = 3;
    private bool searchable_;
    /// <summary>
    /// Whether this variable has an index configured.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Searchable {
      get { return searchable_; }
      set {
        searchable_ = value;
      }
    }

    /// <summary>Field number for the "json_indexes" field.</summary>
    public const int JsonIndexesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.JsonIndex> _repeated_jsonIndexes_codec
        = pb::FieldCodec.ForMessage(34, global::LittleHorse.Common.Proto.JsonIndex.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.JsonIndex> jsonIndexes_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.JsonIndex>();
    /// <summary>
    /// Valid for JSON_OBJ and JSON_ARR variables only. List of JSON fields
    /// to index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.JsonIndex> JsonIndexes {
      get { return jsonIndexes_; }
    }

    /// <summary>Field number for the "access_level" field.</summary>
    public const int AccessLevelFieldNumber = 5;
    private global::LittleHorse.Common.Proto.WfRunVariableAccessLevel accessLevel_ = global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar;
    /// <summary>
    /// The Access Level of this variable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunVariableAccessLevel AccessLevel {
      get { return accessLevel_; }
      set {
        accessLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThreadVarDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThreadVarDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(VarDef, other.VarDef)) return false;
      if (Required != other.Required) return false;
      if (Searchable != other.Searchable) return false;
      if(!jsonIndexes_.Equals(other.jsonIndexes_)) return false;
      if (AccessLevel != other.AccessLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (varDef_ != null) hash ^= VarDef.GetHashCode();
      if (Required != false) hash ^= Required.GetHashCode();
      if (Searchable != false) hash ^= Searchable.GetHashCode();
      hash ^= jsonIndexes_.GetHashCode();
      if (AccessLevel != global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar) hash ^= AccessLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (varDef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VarDef);
      }
      if (Required != false) {
        output.WriteRawTag(16);
        output.WriteBool(Required);
      }
      if (Searchable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Searchable);
      }
      jsonIndexes_.WriteTo(output, _repeated_jsonIndexes_codec);
      if (AccessLevel != global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AccessLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (varDef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(VarDef);
      }
      if (Required != false) {
        output.WriteRawTag(16);
        output.WriteBool(Required);
      }
      if (Searchable != false) {
        output.WriteRawTag(24);
        output.WriteBool(Searchable);
      }
      jsonIndexes_.WriteTo(ref output, _repeated_jsonIndexes_codec);
      if (AccessLevel != global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar) {
        output.WriteRawTag(40);
        output.WriteEnum((int) AccessLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (varDef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VarDef);
      }
      if (Required != false) {
        size += 1 + 1;
      }
      if (Searchable != false) {
        size += 1 + 1;
      }
      size += jsonIndexes_.CalculateSize(_repeated_jsonIndexes_codec);
      if (AccessLevel != global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AccessLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThreadVarDef other) {
      if (other == null) {
        return;
      }
      if (other.varDef_ != null) {
        if (varDef_ == null) {
          VarDef = new global::LittleHorse.Common.Proto.VariableDef();
        }
        VarDef.MergeFrom(other.VarDef);
      }
      if (other.Required != false) {
        Required = other.Required;
      }
      if (other.Searchable != false) {
        Searchable = other.Searchable;
      }
      jsonIndexes_.Add(other.jsonIndexes_);
      if (other.AccessLevel != global::LittleHorse.Common.Proto.WfRunVariableAccessLevel.PublicVar) {
        AccessLevel = other.AccessLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (varDef_ == null) {
              VarDef = new global::LittleHorse.Common.Proto.VariableDef();
            }
            input.ReadMessage(VarDef);
            break;
          }
          case 16: {
            Required = input.ReadBool();
            break;
          }
          case 24: {
            Searchable = input.ReadBool();
            break;
          }
          case 34: {
            jsonIndexes_.AddEntriesFrom(input, _repeated_jsonIndexes_codec);
            break;
          }
          case 40: {
            AccessLevel = (global::LittleHorse.Common.Proto.WfRunVariableAccessLevel) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (varDef_ == null) {
              VarDef = new global::LittleHorse.Common.Proto.VariableDef();
            }
            input.ReadMessage(VarDef);
            break;
          }
          case 16: {
            Required = input.ReadBool();
            break;
          }
          case 24: {
            Searchable = input.ReadBool();
            break;
          }
          case 34: {
            jsonIndexes_.AddEntriesFrom(ref input, _repeated_jsonIndexes_codec);
            break;
          }
          case 40: {
            AccessLevel = (global::LittleHorse.Common.Proto.WfRunVariableAccessLevel) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines a blueprint for a ThreadRun, which is a thread of execution inside a
  /// WfRun.
  /// </summary>
  public sealed partial class ThreadSpec : pb::IMessage<ThreadSpec>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreadSpec> _parser = new pb::MessageParser<ThreadSpec>(() => new ThreadSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThreadSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpec(ThreadSpec other) : this() {
      nodes_ = other.nodes_.Clone();
      variableDefs_ = other.variableDefs_.Clone();
      interruptDefs_ = other.interruptDefs_.Clone();
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpec Clone() {
      return new ThreadSpec(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.Node>.Codec _map_nodes_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.Node>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.Node.Parser), 10);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.Node> nodes_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.Node>();
    /// <summary>
    /// The Nodes inside this ThreadSpec. Maps from name to Node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.Node> Nodes {
      get { return nodes_; }
    }

    /// <summary>Field number for the "variable_defs" field.</summary>
    public const int VariableDefsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ThreadVarDef> _repeated_variableDefs_codec
        = pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ThreadVarDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef> variableDefs_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef>();
    /// <summary>
    /// Defines Variables that are local to ThreadRun's of this ThreadSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ThreadVarDef> VariableDefs {
      get { return variableDefs_; }
    }

    /// <summary>Field number for the "interrupt_defs" field.</summary>
    public const int InterruptDefsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.InterruptDef> _repeated_interruptDefs_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.InterruptDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.InterruptDef> interruptDefs_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.InterruptDef>();
    /// <summary>
    /// Defines all interrupts for this ThreadSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.InterruptDef> InterruptDefs {
      get { return interruptDefs_; }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 4;
    private global::LittleHorse.Common.Proto.ThreadRetentionPolicy retentionPolicy_;
    /// <summary>
    /// Optional retention policy to clean up ThreadRun's of this ThreadSpec after they
    /// have been completed. This is important for long-lived WfRun's that could have
    /// hundreds of ThreadRun's, because a ThreadRun has a record inside the WfRun itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ThreadRetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThreadSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThreadSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Nodes.Equals(other.Nodes)) return false;
      if(!variableDefs_.Equals(other.variableDefs_)) return false;
      if(!interruptDefs_.Equals(other.interruptDefs_)) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Nodes.GetHashCode();
      hash ^= variableDefs_.GetHashCode();
      hash ^= interruptDefs_.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      nodes_.WriteTo(output, _map_nodes_codec);
      variableDefs_.WriteTo(output, _repeated_variableDefs_codec);
      interruptDefs_.WriteTo(output, _repeated_interruptDefs_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      nodes_.WriteTo(ref output, _map_nodes_codec);
      variableDefs_.WriteTo(ref output, _repeated_variableDefs_codec);
      interruptDefs_.WriteTo(ref output, _repeated_interruptDefs_codec);
      if (retentionPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_map_nodes_codec);
      size += variableDefs_.CalculateSize(_repeated_variableDefs_codec);
      size += interruptDefs_.CalculateSize(_repeated_interruptDefs_codec);
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThreadSpec other) {
      if (other == null) {
        return;
      }
      nodes_.MergeFrom(other.nodes_);
      variableDefs_.Add(other.variableDefs_);
      interruptDefs_.Add(other.interruptDefs_);
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          RetentionPolicy = new global::LittleHorse.Common.Proto.ThreadRetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _map_nodes_codec);
            break;
          }
          case 18: {
            variableDefs_.AddEntriesFrom(input, _repeated_variableDefs_codec);
            break;
          }
          case 26: {
            interruptDefs_.AddEntriesFrom(input, _repeated_interruptDefs_codec);
            break;
          }
          case 34: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.ThreadRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(ref input, _map_nodes_codec);
            break;
          }
          case 18: {
            variableDefs_.AddEntriesFrom(ref input, _repeated_variableDefs_codec);
            break;
          }
          case 26: {
            interruptDefs_.AddEntriesFrom(ref input, _repeated_interruptDefs_codec);
            break;
          }
          case 34: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.ThreadRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ThreadRetentionPolicy specifies how long to keep record of a ThreadRun and its associated
  /// NodeRun's and TaskRun's and Variables after the ThreadRun has been completed.
  /// </summary>
  public sealed partial class ThreadRetentionPolicy : pb::IMessage<ThreadRetentionPolicy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreadRetentionPolicy> _parser = new pb::MessageParser<ThreadRetentionPolicy>(() => new ThreadRetentionPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThreadRetentionPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadRetentionPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadRetentionPolicy(ThreadRetentionPolicy other) : this() {
      switch (other.ThreadGcPolicyCase) {
        case ThreadGcPolicyOneofCase.SecondsAfterThreadTermination:
          SecondsAfterThreadTermination = other.SecondsAfterThreadTermination;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadRetentionPolicy Clone() {
      return new ThreadRetentionPolicy(this);
    }

    /// <summary>Field number for the "seconds_after_thread_termination" field.</summary>
    public const int SecondsAfterThreadTerminationFieldNumber = 1;
    /// <summary>
    /// Delete associated ThreadRun's X seconds after they terminate, regardless
    /// of status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SecondsAfterThreadTermination {
      get { return HasSecondsAfterThreadTermination ? (long) threadGcPolicy_ : 0L; }
      set {
        threadGcPolicy_ = value;
        threadGcPolicyCase_ = ThreadGcPolicyOneofCase.SecondsAfterThreadTermination;
      }
    }
    /// <summary>Gets whether the "seconds_after_thread_termination" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSecondsAfterThreadTermination {
      get { return threadGcPolicyCase_ == ThreadGcPolicyOneofCase.SecondsAfterThreadTermination; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "seconds_after_thread_termination" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSecondsAfterThreadTermination() {
      if (HasSecondsAfterThreadTermination) {
        ClearThreadGcPolicy();
      }
    }

    private object threadGcPolicy_;
    /// <summary>Enum of possible cases for the "thread_gc_policy" oneof.</summary>
    public enum ThreadGcPolicyOneofCase {
      None = 0,
      SecondsAfterThreadTermination = 1,
    }
    private ThreadGcPolicyOneofCase threadGcPolicyCase_ = ThreadGcPolicyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadGcPolicyOneofCase ThreadGcPolicyCase {
      get { return threadGcPolicyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreadGcPolicy() {
      threadGcPolicyCase_ = ThreadGcPolicyOneofCase.None;
      threadGcPolicy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThreadRetentionPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThreadRetentionPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SecondsAfterThreadTermination != other.SecondsAfterThreadTermination) return false;
      if (ThreadGcPolicyCase != other.ThreadGcPolicyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSecondsAfterThreadTermination) hash ^= SecondsAfterThreadTermination.GetHashCode();
      hash ^= (int) threadGcPolicyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSecondsAfterThreadTermination) {
        output.WriteRawTag(8);
        output.WriteInt64(SecondsAfterThreadTermination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSecondsAfterThreadTermination) {
        output.WriteRawTag(8);
        output.WriteInt64(SecondsAfterThreadTermination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSecondsAfterThreadTermination) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SecondsAfterThreadTermination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThreadRetentionPolicy other) {
      if (other == null) {
        return;
      }
      switch (other.ThreadGcPolicyCase) {
        case ThreadGcPolicyOneofCase.SecondsAfterThreadTermination:
          SecondsAfterThreadTermination = other.SecondsAfterThreadTermination;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SecondsAfterThreadTermination = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SecondsAfterThreadTermination = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines an Interrupt for a ThreadSpec. An Interrupt means that when an ExternalEvent
  /// of a certain type is registered to the WfRun, then the affected ThreadRun is HALTED
  /// and a handler ThreadRun is run as an interrupt handler. The interrupted ThreadRun
  /// is resumed once the interrupt handler completes.
  /// </summary>
  public sealed partial class InterruptDef : pb::IMessage<InterruptDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InterruptDef> _parser = new pb::MessageParser<InterruptDef>(() => new InterruptDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InterruptDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InterruptDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InterruptDef(InterruptDef other) : this() {
      externalEventDefId_ = other.externalEventDefId_ != null ? other.externalEventDefId_.Clone() : null;
      handlerSpecName_ = other.handlerSpecName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InterruptDef Clone() {
      return new InterruptDef(this);
    }

    /// <summary>Field number for the "external_event_def_id" field.</summary>
    public const int ExternalEventDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ExternalEventDefId externalEventDefId_;
    /// <summary>
    /// The ID of the ExternalEventDef which triggers an Interrupt for this ThreadSpec.
    /// Note that as of 0.9.0, you cannot use an ExternalEventDefId for both an InterruptDef
    /// and an ExternalEventNode in the same WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventDefId ExternalEventDefId {
      get { return externalEventDefId_; }
      set {
        externalEventDefId_ = value;
      }
    }

    /// <summary>Field number for the "handler_spec_name" field.</summary>
    public const int HandlerSpecNameFieldNumber = 2;
    private string handlerSpecName_ = "";
    /// <summary>
    /// The name of the ThreadSpec that we run as the interrupt handler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandlerSpecName {
      get { return handlerSpecName_; }
      set {
        handlerSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InterruptDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InterruptDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExternalEventDefId, other.ExternalEventDefId)) return false;
      if (HandlerSpecName != other.HandlerSpecName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (externalEventDefId_ != null) hash ^= ExternalEventDefId.GetHashCode();
      if (HandlerSpecName.Length != 0) hash ^= HandlerSpecName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (externalEventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HandlerSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HandlerSpecName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (externalEventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HandlerSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HandlerSpecName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (externalEventDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalEventDefId);
      }
      if (HandlerSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerSpecName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InterruptDef other) {
      if (other == null) {
        return;
      }
      if (other.externalEventDefId_ != null) {
        if (externalEventDefId_ == null) {
          ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
        }
        ExternalEventDefId.MergeFrom(other.ExternalEventDefId);
      }
      if (other.HandlerSpecName.Length != 0) {
        HandlerSpecName = other.HandlerSpecName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 18: {
            HandlerSpecName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 18: {
            HandlerSpecName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Starts a Child ThreadRun with a specific ThreadSpec.
  /// </summary>
  public sealed partial class StartThreadNode : pb::IMessage<StartThreadNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartThreadNode> _parser = new pb::MessageParser<StartThreadNode>(() => new StartThreadNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartThreadNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartThreadNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartThreadNode(StartThreadNode other) : this() {
      threadSpecName_ = other.threadSpecName_;
      variables_ = other.variables_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartThreadNode Clone() {
      return new StartThreadNode(this);
    }

    /// <summary>Field number for the "thread_spec_name" field.</summary>
    public const int ThreadSpecNameFieldNumber = 1;
    private string threadSpecName_ = "";
    /// <summary>
    /// The name of the ThreadSpec to spawn.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThreadSpecName {
      get { return threadSpecName_; }
      set {
        threadSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>.Codec _map_variables_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableAssignment.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment> variables_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>();
    /// <summary>
    /// The input variables to pass into the Child ThreadRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment> Variables {
      get { return variables_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartThreadNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartThreadNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreadSpecName != other.ThreadSpecName) return false;
      if (!Variables.Equals(other.Variables)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreadSpecName.Length != 0) hash ^= ThreadSpecName.GetHashCode();
      hash ^= Variables.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThreadSpecName);
      }
      variables_.WriteTo(output, _map_variables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThreadSpecName);
      }
      variables_.WriteTo(ref output, _map_variables_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ThreadSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThreadSpecName);
      }
      size += variables_.CalculateSize(_map_variables_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartThreadNode other) {
      if (other == null) {
        return;
      }
      if (other.ThreadSpecName.Length != 0) {
        ThreadSpecName = other.ThreadSpecName;
      }
      variables_.MergeFrom(other.variables_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(input, _map_variables_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(ref input, _map_variables_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Iterates over a JSON_ARR and starts a Child ThreadRun for each element in the
  /// list.
  ///
  /// Returns a JSON_ARR containing the thread_run_number of each spawned child.
  /// </summary>
  public sealed partial class StartMultipleThreadsNode : pb::IMessage<StartMultipleThreadsNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StartMultipleThreadsNode> _parser = new pb::MessageParser<StartMultipleThreadsNode>(() => new StartMultipleThreadsNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StartMultipleThreadsNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartMultipleThreadsNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartMultipleThreadsNode(StartMultipleThreadsNode other) : this() {
      threadSpecName_ = other.threadSpecName_;
      variables_ = other.variables_.Clone();
      iterable_ = other.iterable_ != null ? other.iterable_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StartMultipleThreadsNode Clone() {
      return new StartMultipleThreadsNode(this);
    }

    /// <summary>Field number for the "thread_spec_name" field.</summary>
    public const int ThreadSpecNameFieldNumber = 1;
    private string threadSpecName_ = "";
    /// <summary>
    /// The name of the ThreadSpec to spawn.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ThreadSpecName {
      get { return threadSpecName_; }
      set {
        threadSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>.Codec _map_variables_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableAssignment.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment> variables_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment>();
    /// <summary>
    /// Variables which are passed into the child ThreadRuns. These assignments are
    /// the same for all spawned threads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableAssignment> Variables {
      get { return variables_; }
    }

    /// <summary>Field number for the "iterable" field.</summary>
    public const int IterableFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableAssignment iterable_;
    /// <summary>
    /// Assignment that resolves to a JSON_ARR. For each element in the list, a child
    /// ThreadRun is started. The reserved `INPUT` variable for each Child is set to the
    /// corresponding item in the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Iterable {
      get { return iterable_; }
      set {
        iterable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StartMultipleThreadsNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StartMultipleThreadsNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThreadSpecName != other.ThreadSpecName) return false;
      if (!Variables.Equals(other.Variables)) return false;
      if (!object.Equals(Iterable, other.Iterable)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ThreadSpecName.Length != 0) hash ^= ThreadSpecName.GetHashCode();
      hash ^= Variables.GetHashCode();
      if (iterable_ != null) hash ^= Iterable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThreadSpecName);
      }
      variables_.WriteTo(output, _map_variables_codec);
      if (iterable_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Iterable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThreadSpecName);
      }
      variables_.WriteTo(ref output, _map_variables_codec);
      if (iterable_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Iterable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ThreadSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThreadSpecName);
      }
      size += variables_.CalculateSize(_map_variables_codec);
      if (iterable_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Iterable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StartMultipleThreadsNode other) {
      if (other == null) {
        return;
      }
      if (other.ThreadSpecName.Length != 0) {
        ThreadSpecName = other.ThreadSpecName;
      }
      variables_.MergeFrom(other.variables_);
      if (other.iterable_ != null) {
        if (iterable_ == null) {
          Iterable = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Iterable.MergeFrom(other.Iterable);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(input, _map_variables_codec);
            break;
          }
          case 26: {
            if (iterable_ == null) {
              Iterable = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Iterable);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(ref input, _map_variables_codec);
            break;
          }
          case 26: {
            if (iterable_ == null) {
              Iterable = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Iterable);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specifies a Failure Handler which can run in case of a certain Failure to allow
  /// the ThreadRun to run compensatory logic and gracefully continue rather than
  /// failing immediately.
  /// </summary>
  public sealed partial class FailureHandlerDef : pb::IMessage<FailureHandlerDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FailureHandlerDef> _parser = new pb::MessageParser<FailureHandlerDef>(() => new FailureHandlerDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FailureHandlerDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureHandlerDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureHandlerDef(FailureHandlerDef other) : this() {
      handlerSpecName_ = other.handlerSpecName_;
      switch (other.FailureToCatchCase) {
        case FailureToCatchOneofCase.SpecificFailure:
          SpecificFailure = other.SpecificFailure;
          break;
        case FailureToCatchOneofCase.AnyFailureOfType:
          AnyFailureOfType = other.AnyFailureOfType;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureHandlerDef Clone() {
      return new FailureHandlerDef(this);
    }

    /// <summary>Field number for the "handler_spec_name" field.</summary>
    public const int HandlerSpecNameFieldNumber = 2;
    private string handlerSpecName_ = "";
    /// <summary>
    /// The name of the ThreadSpec to run as a
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string HandlerSpecName {
      get { return handlerSpecName_; }
      set {
        handlerSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "specific_failure" field.</summary>
    public const int SpecificFailureFieldNumber = 1;
    /// <summary>
    /// Specifies that this FailureHandlerDef will be triggered for a Failure with this
    /// exact name.
    ///
    /// If this and `specific_failure` are both unset, then any failure is caught.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SpecificFailure {
      get { return HasSpecificFailure ? (string) failureToCatch_ : ""; }
      set {
        failureToCatch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        failureToCatchCase_ = FailureToCatchOneofCase.SpecificFailure;
      }
    }
    /// <summary>Gets whether the "specific_failure" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSpecificFailure {
      get { return failureToCatchCase_ == FailureToCatchOneofCase.SpecificFailure; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "specific_failure" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSpecificFailure() {
      if (HasSpecificFailure) {
        ClearFailureToCatch();
      }
    }

    /// <summary>Field number for the "any_failure_of_type" field.</summary>
    public const int AnyFailureOfTypeFieldNumber = 3;
    /// <summary>
    /// Specifies that this FailureHandlerDef will be triggered for any failure matching
    /// this type (ERROR or EXCEPTION).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.FailureHandlerDef.Types.LHFailureType AnyFailureOfType {
      get { return HasAnyFailureOfType ? (global::LittleHorse.Common.Proto.FailureHandlerDef.Types.LHFailureType) failureToCatch_ : global::LittleHorse.Common.Proto.FailureHandlerDef.Types.LHFailureType.FailureTypeError; }
      set {
        failureToCatch_ = value;
        failureToCatchCase_ = FailureToCatchOneofCase.AnyFailureOfType;
      }
    }
    /// <summary>Gets whether the "any_failure_of_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAnyFailureOfType {
      get { return failureToCatchCase_ == FailureToCatchOneofCase.AnyFailureOfType; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "any_failure_of_type" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAnyFailureOfType() {
      if (HasAnyFailureOfType) {
        ClearFailureToCatch();
      }
    }

    private object failureToCatch_;
    /// <summary>Enum of possible cases for the "failure_to_catch" oneof.</summary>
    public enum FailureToCatchOneofCase {
      None = 0,
      SpecificFailure = 1,
      AnyFailureOfType = 3,
    }
    private FailureToCatchOneofCase failureToCatchCase_ = FailureToCatchOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureToCatchOneofCase FailureToCatchCase {
      get { return failureToCatchCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFailureToCatch() {
      failureToCatchCase_ = FailureToCatchOneofCase.None;
      failureToCatch_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FailureHandlerDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FailureHandlerDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HandlerSpecName != other.HandlerSpecName) return false;
      if (SpecificFailure != other.SpecificFailure) return false;
      if (AnyFailureOfType != other.AnyFailureOfType) return false;
      if (FailureToCatchCase != other.FailureToCatchCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HandlerSpecName.Length != 0) hash ^= HandlerSpecName.GetHashCode();
      if (HasSpecificFailure) hash ^= SpecificFailure.GetHashCode();
      if (HasAnyFailureOfType) hash ^= AnyFailureOfType.GetHashCode();
      hash ^= (int) failureToCatchCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSpecificFailure) {
        output.WriteRawTag(10);
        output.WriteString(SpecificFailure);
      }
      if (HandlerSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HandlerSpecName);
      }
      if (HasAnyFailureOfType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AnyFailureOfType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSpecificFailure) {
        output.WriteRawTag(10);
        output.WriteString(SpecificFailure);
      }
      if (HandlerSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HandlerSpecName);
      }
      if (HasAnyFailureOfType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AnyFailureOfType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HandlerSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HandlerSpecName);
      }
      if (HasSpecificFailure) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpecificFailure);
      }
      if (HasAnyFailureOfType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AnyFailureOfType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FailureHandlerDef other) {
      if (other == null) {
        return;
      }
      if (other.HandlerSpecName.Length != 0) {
        HandlerSpecName = other.HandlerSpecName;
      }
      switch (other.FailureToCatchCase) {
        case FailureToCatchOneofCase.SpecificFailure:
          SpecificFailure = other.SpecificFailure;
          break;
        case FailureToCatchOneofCase.AnyFailureOfType:
          AnyFailureOfType = other.AnyFailureOfType;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SpecificFailure = input.ReadString();
            break;
          }
          case 18: {
            HandlerSpecName = input.ReadString();
            break;
          }
          case 24: {
            failureToCatch_ = input.ReadEnum();
            failureToCatchCase_ = FailureToCatchOneofCase.AnyFailureOfType;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SpecificFailure = input.ReadString();
            break;
          }
          case 18: {
            HandlerSpecName = input.ReadString();
            break;
          }
          case 24: {
            failureToCatch_ = input.ReadEnum();
            failureToCatchCase_ = FailureToCatchOneofCase.AnyFailureOfType;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FailureHandlerDef message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Specifies a type of Failure
      /// </summary>
      public enum LHFailureType {
        /// <summary>
        /// FAILURE_TYPE_ERROR specifies any technical `ERROR`.
        /// </summary>
        [pbr::OriginalName("FAILURE_TYPE_ERROR")] FailureTypeError = 0,
        /// <summary>
        /// Specifies a user-defined, business-related `EXCEPTION`.
        /// </summary>
        [pbr::OriginalName("FAILURE_TYPE_EXCEPTION")] FailureTypeException = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Specifies that a ThreadRun will wait for certain specified Child ThreadRun's to
  /// complete or fail before the WfRun continues. If one of the Child ThreadRun's
  /// throws a Failure that is not caught by the `per_thread_failure_handlers`,
  /// then the Child ThreadRun's Failure is thrown by the WaitForThreadsRun.
  ///
  /// No output.
  /// </summary>
  public sealed partial class WaitForThreadsNode : pb::IMessage<WaitForThreadsNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WaitForThreadsNode> _parser = new pb::MessageParser<WaitForThreadsNode>(() => new WaitForThreadsNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WaitForThreadsNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForThreadsNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForThreadsNode(WaitForThreadsNode other) : this() {
      perThreadFailureHandlers_ = other.perThreadFailureHandlers_.Clone();
      switch (other.ThreadsToWaitForCase) {
        case ThreadsToWaitForOneofCase.Threads:
          Threads = other.Threads.Clone();
          break;
        case ThreadsToWaitForOneofCase.ThreadList:
          ThreadList = other.ThreadList.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WaitForThreadsNode Clone() {
      return new WaitForThreadsNode(this);
    }

    /// <summary>Field number for the "threads" field.</summary>
    public const int ThreadsFieldNumber = 1;
    /// <summary>
    /// Specifies that the WaitForThreadsRun will wait for the threads specified
    /// here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor Threads {
      get { return threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads ? (global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor) threadsToWaitFor_ : null; }
      set {
        threadsToWaitFor_ = value;
        threadsToWaitForCase_ = value == null ? ThreadsToWaitForOneofCase.None : ThreadsToWaitForOneofCase.Threads;
      }
    }

    /// <summary>Field number for the "thread_list" field.</summary>
    public const int ThreadListFieldNumber = 2;
    /// <summary>
    /// Specifies that the WaitForThreadsRun will wait for a list of ThreadRun's contained
    /// in the JSON_ARR value specified here. Each element in the list must be an INT
    /// representing the `number` of a ThreadRun that we're waiting for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment ThreadList {
      get { return threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList ? (global::LittleHorse.Common.Proto.VariableAssignment) threadsToWaitFor_ : null; }
      set {
        threadsToWaitFor_ = value;
        threadsToWaitForCase_ = value == null ? ThreadsToWaitForOneofCase.None : ThreadsToWaitForOneofCase.ThreadList;
      }
    }

    /// <summary>Field number for the "per_thread_failure_handlers" field.</summary>
    public const int PerThreadFailureHandlersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.FailureHandlerDef> _repeated_perThreadFailureHandlers_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.FailureHandlerDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef> perThreadFailureHandlers_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef>();
    /// <summary>
    /// If any of the child ThreadRun's that we are waiting for throw a Failure, we will
    /// evaluate it against these FailureHandlerDef's and run the first matching FailureHandler
    /// (if any). The FailureHandler will be a child of the child, which means that it has
    /// access to all of the variables in the scope of the failed Child ThreadRun.
    ///
    /// This is different from Node-level Failure Handlers, which would be _siblings_ of the
    /// ThreadRuns that we're waiting for, and would run only when the overall nodeRun has
    /// failed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef> PerThreadFailureHandlers {
      get { return perThreadFailureHandlers_; }
    }

    private object threadsToWaitFor_;
    /// <summary>Enum of possible cases for the "threads_to_wait_for" oneof.</summary>
    public enum ThreadsToWaitForOneofCase {
      None = 0,
      Threads = 1,
      ThreadList = 2,
    }
    private ThreadsToWaitForOneofCase threadsToWaitForCase_ = ThreadsToWaitForOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadsToWaitForOneofCase ThreadsToWaitForCase {
      get { return threadsToWaitForCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreadsToWaitFor() {
      threadsToWaitForCase_ = ThreadsToWaitForOneofCase.None;
      threadsToWaitFor_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WaitForThreadsNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WaitForThreadsNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Threads, other.Threads)) return false;
      if (!object.Equals(ThreadList, other.ThreadList)) return false;
      if(!perThreadFailureHandlers_.Equals(other.perThreadFailureHandlers_)) return false;
      if (ThreadsToWaitForCase != other.ThreadsToWaitForCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) hash ^= Threads.GetHashCode();
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) hash ^= ThreadList.GetHashCode();
      hash ^= perThreadFailureHandlers_.GetHashCode();
      hash ^= (int) threadsToWaitForCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) {
        output.WriteRawTag(10);
        output.WriteMessage(Threads);
      }
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) {
        output.WriteRawTag(18);
        output.WriteMessage(ThreadList);
      }
      perThreadFailureHandlers_.WriteTo(output, _repeated_perThreadFailureHandlers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) {
        output.WriteRawTag(10);
        output.WriteMessage(Threads);
      }
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) {
        output.WriteRawTag(18);
        output.WriteMessage(ThreadList);
      }
      perThreadFailureHandlers_.WriteTo(ref output, _repeated_perThreadFailureHandlers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Threads);
      }
      if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThreadList);
      }
      size += perThreadFailureHandlers_.CalculateSize(_repeated_perThreadFailureHandlers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WaitForThreadsNode other) {
      if (other == null) {
        return;
      }
      perThreadFailureHandlers_.Add(other.perThreadFailureHandlers_);
      switch (other.ThreadsToWaitForCase) {
        case ThreadsToWaitForOneofCase.Threads:
          if (Threads == null) {
            Threads = new global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor();
          }
          Threads.MergeFrom(other.Threads);
          break;
        case ThreadsToWaitForOneofCase.ThreadList:
          if (ThreadList == null) {
            ThreadList = new global::LittleHorse.Common.Proto.VariableAssignment();
          }
          ThreadList.MergeFrom(other.ThreadList);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor subBuilder = new global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor();
            if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) {
              subBuilder.MergeFrom(Threads);
            }
            input.ReadMessage(subBuilder);
            Threads = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) {
              subBuilder.MergeFrom(ThreadList);
            }
            input.ReadMessage(subBuilder);
            ThreadList = subBuilder;
            break;
          }
          case 26: {
            perThreadFailureHandlers_.AddEntriesFrom(input, _repeated_perThreadFailureHandlers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor subBuilder = new global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadsToWaitFor();
            if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.Threads) {
              subBuilder.MergeFrom(Threads);
            }
            input.ReadMessage(subBuilder);
            Threads = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (threadsToWaitForCase_ == ThreadsToWaitForOneofCase.ThreadList) {
              subBuilder.MergeFrom(ThreadList);
            }
            input.ReadMessage(subBuilder);
            ThreadList = subBuilder;
            break;
          }
          case 26: {
            perThreadFailureHandlers_.AddEntriesFrom(ref input, _repeated_perThreadFailureHandlers_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the WaitForThreadsNode message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ThreadToWaitFor : pb::IMessage<ThreadToWaitFor>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ThreadToWaitFor> _parser = new pb::MessageParser<ThreadToWaitFor>(() => new ThreadToWaitFor());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ThreadToWaitFor> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.WaitForThreadsNode.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadToWaitFor() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadToWaitFor(ThreadToWaitFor other) : this() {
          threadRunNumber_ = other.threadRunNumber_ != null ? other.threadRunNumber_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadToWaitFor Clone() {
          return new ThreadToWaitFor(this);
        }

        /// <summary>Field number for the "thread_run_number" field.</summary>
        public const int ThreadRunNumberFieldNumber = 1;
        private global::LittleHorse.Common.Proto.VariableAssignment threadRunNumber_;
        /// <summary>
        /// Causes the WaitForThreadsNodeRun to wait for the ThreadRun whose number
        /// matches the value specified here. Must resolve to an INT.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::LittleHorse.Common.Proto.VariableAssignment ThreadRunNumber {
          get { return threadRunNumber_; }
          set {
            threadRunNumber_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ThreadToWaitFor);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ThreadToWaitFor other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ThreadRunNumber, other.ThreadRunNumber)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (threadRunNumber_ != null) hash ^= ThreadRunNumber.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (threadRunNumber_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ThreadRunNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (threadRunNumber_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ThreadRunNumber);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (threadRunNumber_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ThreadRunNumber);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ThreadToWaitFor other) {
          if (other == null) {
            return;
          }
          if (other.threadRunNumber_ != null) {
            if (threadRunNumber_ == null) {
              ThreadRunNumber = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            ThreadRunNumber.MergeFrom(other.ThreadRunNumber);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (threadRunNumber_ == null) {
                  ThreadRunNumber = new global::LittleHorse.Common.Proto.VariableAssignment();
                }
                input.ReadMessage(ThreadRunNumber);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (threadRunNumber_ == null) {
                  ThreadRunNumber = new global::LittleHorse.Common.Proto.VariableAssignment();
                }
                input.ReadMessage(ThreadRunNumber);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ThreadsToWaitFor : pb::IMessage<ThreadsToWaitFor>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ThreadsToWaitFor> _parser = new pb::MessageParser<ThreadsToWaitFor>(() => new ThreadsToWaitFor());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ThreadsToWaitFor> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.WaitForThreadsNode.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadsToWaitFor() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadsToWaitFor(ThreadsToWaitFor other) : this() {
          threads_ = other.threads_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ThreadsToWaitFor Clone() {
          return new ThreadsToWaitFor(this);
        }

        /// <summary>Field number for the "threads" field.</summary>
        public const int ThreadsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor> _repeated_threads_codec
            = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor.Parser);
        private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor> threads_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor>();
        /// <summary>
        /// Wait for one or more ThreadRun's
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::LittleHorse.Common.Proto.WaitForThreadsNode.Types.ThreadToWaitFor> Threads {
          get { return threads_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ThreadsToWaitFor);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ThreadsToWaitFor other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!threads_.Equals(other.threads_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= threads_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          threads_.WriteTo(output, _repeated_threads_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          threads_.WriteTo(ref output, _repeated_threads_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += threads_.CalculateSize(_repeated_threads_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ThreadsToWaitFor other) {
          if (other == null) {
            return;
          }
          threads_.Add(other.threads_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                threads_.AddEntriesFrom(input, _repeated_threads_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                threads_.AddEntriesFrom(ref input, _repeated_threads_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// An ExternalEventNode causes the WfRun to stop and wait for an ExternalEvent
  /// to arrive before continuing onwards.
  ///
  /// The output is just the content of the ExternalEvent.
  /// </summary>
  public sealed partial class ExternalEventNode : pb::IMessage<ExternalEventNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalEventNode> _parser = new pb::MessageParser<ExternalEventNode>(() => new ExternalEventNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalEventNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventNode(ExternalEventNode other) : this() {
      externalEventDefId_ = other.externalEventDefId_ != null ? other.externalEventDefId_.Clone() : null;
      timeoutSeconds_ = other.timeoutSeconds_ != null ? other.timeoutSeconds_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventNode Clone() {
      return new ExternalEventNode(this);
    }

    /// <summary>Field number for the "external_event_def_id" field.</summary>
    public const int ExternalEventDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ExternalEventDefId externalEventDefId_;
    /// <summary>
    /// The ID of the ExternalEventDef that we are waiting for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventDefId ExternalEventDefId {
      get { return externalEventDefId_; }
      set {
        externalEventDefId_ = value;
      }
    }

    /// <summary>Field number for the "timeout_seconds" field.</summary>
    public const int TimeoutSecondsFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableAssignment timeoutSeconds_;
    /// <summary>
    /// Determines the maximum amount of time that the NodeRun will wait for the
    /// ExternalEvent to arrive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment TimeoutSeconds {
      get { return timeoutSeconds_; }
      set {
        timeoutSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalEventNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalEventNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExternalEventDefId, other.ExternalEventDefId)) return false;
      if (!object.Equals(TimeoutSeconds, other.TimeoutSeconds)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (externalEventDefId_ != null) hash ^= ExternalEventDefId.GetHashCode();
      if (timeoutSeconds_ != null) hash ^= TimeoutSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (externalEventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExternalEventDefId);
      }
      if (timeoutSeconds_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (externalEventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExternalEventDefId);
      }
      if (timeoutSeconds_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (externalEventDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalEventDefId);
      }
      if (timeoutSeconds_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeoutSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalEventNode other) {
      if (other == null) {
        return;
      }
      if (other.externalEventDefId_ != null) {
        if (externalEventDefId_ == null) {
          ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
        }
        ExternalEventDefId.MergeFrom(other.ExternalEventDefId);
      }
      if (other.timeoutSeconds_ != null) {
        if (timeoutSeconds_ == null) {
          TimeoutSeconds = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        TimeoutSeconds.MergeFrom(other.TimeoutSeconds);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 18: {
            if (timeoutSeconds_ == null) {
              TimeoutSeconds = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(TimeoutSeconds);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 18: {
            if (timeoutSeconds_ == null) {
              TimeoutSeconds = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(TimeoutSeconds);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines the beginning of the ThreadRun execution.
  ///
  /// Output is NULL
  /// </summary>
  public sealed partial class EntrypointNode : pb::IMessage<EntrypointNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EntrypointNode> _parser = new pb::MessageParser<EntrypointNode>(() => new EntrypointNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EntrypointNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntrypointNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntrypointNode(EntrypointNode other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntrypointNode Clone() {
      return new EntrypointNode(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EntrypointNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EntrypointNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EntrypointNode other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines the end of the ThreadRun execution.
  /// </summary>
  public sealed partial class ExitNode : pb::IMessage<ExitNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExitNode> _parser = new pb::MessageParser<ExitNode>(() => new ExitNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExitNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExitNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExitNode(ExitNode other) : this() {
      failureDef_ = other.failureDef_ != null ? other.failureDef_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExitNode Clone() {
      return new ExitNode(this);
    }

    /// <summary>Field number for the "failure_def" field.</summary>
    public const int FailureDefFieldNumber = 1;
    private global::LittleHorse.Common.Proto.FailureDef failureDef_;
    /// <summary>
    /// If set, this ExitNode throws the specified Failure upon arrival. Note that Failures
    /// are propagated up to the parent ThreadRun (or cause the entire WfRun to fail if sent
    /// by the entrypoint ThreadRun).
    ///
    /// If this is not set, then a ThreadRun arriving at this Exit Node will be COMPLETED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.FailureDef FailureDef {
      get { return failureDef_; }
      set {
        failureDef_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExitNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExitNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FailureDef, other.FailureDef)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (failureDef_ != null) hash ^= FailureDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (failureDef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FailureDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (failureDef_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FailureDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (failureDef_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FailureDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExitNode other) {
      if (other == null) {
        return;
      }
      if (other.failureDef_ != null) {
        if (failureDef_ == null) {
          FailureDef = new global::LittleHorse.Common.Proto.FailureDef();
        }
        FailureDef.MergeFrom(other.FailureDef);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (failureDef_ == null) {
              FailureDef = new global::LittleHorse.Common.Proto.FailureDef();
            }
            input.ReadMessage(FailureDef);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (failureDef_ == null) {
              FailureDef = new global::LittleHorse.Common.Proto.FailureDef();
            }
            input.ReadMessage(FailureDef);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Defines a Failure that can be thrown.
  /// </summary>
  public sealed partial class FailureDef : pb::IMessage<FailureDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FailureDef> _parser = new pb::MessageParser<FailureDef>(() => new FailureDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FailureDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureDef(FailureDef other) : this() {
      failureName_ = other.failureName_;
      message_ = other.message_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FailureDef Clone() {
      return new FailureDef(this);
    }

    /// <summary>Field number for the "failure_name" field.</summary>
    public const int FailureNameFieldNumber = 1;
    private string failureName_ = "";
    /// <summary>
    /// The code for the failure. If in UPPER_CASE, it must be one of the LHErrorType
    /// enums, and represents an ERROR. If it is in kebab-case, then it is a user-defined
    /// EXCEPTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FailureName {
      get { return failureName_; }
      set {
        failureName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human-readable message denoting why the Failure occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableAssignment content_;
    /// <summary>
    /// If specified, the thrown Failure will have this content.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FailureDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FailureDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FailureName != other.FailureName) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Content, other.Content)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FailureName.Length != 0) hash ^= FailureName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FailureName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FailureName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FailureName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FailureName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (content_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FailureName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FailureName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FailureDef other) {
      if (other == null) {
        return;
      }
      if (other.FailureName.Length != 0) {
        FailureName = other.FailureName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Content.MergeFrom(other.Content);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FailureName = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FailureName = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Node is a step in a ThreadRun.
  /// </summary>
  public sealed partial class Node : pb::IMessage<Node>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Node(Node other) : this() {
      outgoingEdges_ = other.outgoingEdges_.Clone();
      failureHandlers_ = other.failureHandlers_.Clone();
      switch (other.NodeCase) {
        case NodeOneofCase.Entrypoint:
          Entrypoint = other.Entrypoint.Clone();
          break;
        case NodeOneofCase.Exit:
          Exit = other.Exit.Clone();
          break;
        case NodeOneofCase.Task:
          Task = other.Task.Clone();
          break;
        case NodeOneofCase.ExternalEvent:
          ExternalEvent = other.ExternalEvent.Clone();
          break;
        case NodeOneofCase.StartThread:
          StartThread = other.StartThread.Clone();
          break;
        case NodeOneofCase.WaitForThreads:
          WaitForThreads = other.WaitForThreads.Clone();
          break;
        case NodeOneofCase.Nop:
          Nop = other.Nop.Clone();
          break;
        case NodeOneofCase.Sleep:
          Sleep = other.Sleep.Clone();
          break;
        case NodeOneofCase.UserTask:
          UserTask = other.UserTask.Clone();
          break;
        case NodeOneofCase.StartMultipleThreads:
          StartMultipleThreads = other.StartMultipleThreads.Clone();
          break;
        case NodeOneofCase.ThrowEvent:
          ThrowEvent = other.ThrowEvent.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "outgoing_edges" field.</summary>
    public const int OutgoingEdgesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.Edge> _repeated_outgoingEdges_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.Edge.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.Edge> outgoingEdges_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.Edge>();
    /// <summary>
    /// Defines the flow of execution and determines where the ThreadRun goes next.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.Edge> OutgoingEdges {
      get { return outgoingEdges_; }
    }

    /// <summary>Field number for the "failure_handlers" field.</summary>
    public const int FailureHandlersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.FailureHandlerDef> _repeated_failureHandlers_codec
        = pb::FieldCodec.ForMessage(34, global::LittleHorse.Common.Proto.FailureHandlerDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef> failureHandlers_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef>();
    /// <summary>
    /// Specifies handlers for failures (EXCEPTION or ERROR or both) which might be thrown
    /// by the NodeRun. If a Failure is thrown by the Node execution, then the first
    /// matching Failure Handler (if present) is run. If there is a matching Failure Handler
    /// and it runs to completion, then the ThreadRun advances from the Node; else, it
    /// fails.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.FailureHandlerDef> FailureHandlers {
      get { return failureHandlers_; }
    }

    /// <summary>Field number for the "entrypoint" field.</summary>
    public const int EntrypointFieldNumber = 5;
    /// <summary>
    /// Creates an EntrypointRun. Every ThreadRun has one Entrypoint node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.EntrypointNode Entrypoint {
      get { return nodeCase_ == NodeOneofCase.Entrypoint ? (global::LittleHorse.Common.Proto.EntrypointNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Entrypoint;
      }
    }

    /// <summary>Field number for the "exit" field.</summary>
    public const int ExitFieldNumber = 6;
    /// <summary>
    /// Creates an `ExitRun``. Every ThreadSpec has at least one Exit Node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExitNode Exit {
      get { return nodeCase_ == NodeOneofCase.Exit ? (global::LittleHorse.Common.Proto.ExitNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Exit;
      }
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 7;
    /// <summary>
    /// Creates a TaskNodeRUn
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskNode Task {
      get { return nodeCase_ == NodeOneofCase.Task ? (global::LittleHorse.Common.Proto.TaskNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Task;
      }
    }

    /// <summary>Field number for the "external_event" field.</summary>
    public const int ExternalEventFieldNumber = 8;
    /// <summary>
    /// Creates an ExternalEventNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventNode ExternalEvent {
      get { return nodeCase_ == NodeOneofCase.ExternalEvent ? (global::LittleHorse.Common.Proto.ExternalEventNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.ExternalEvent;
      }
    }

    /// <summary>Field number for the "start_thread" field.</summary>
    public const int StartThreadFieldNumber = 9;
    /// <summary>
    /// Creates a StartThreadNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.StartThreadNode StartThread {
      get { return nodeCase_ == NodeOneofCase.StartThread ? (global::LittleHorse.Common.Proto.StartThreadNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.StartThread;
      }
    }

    /// <summary>Field number for the "wait_for_threads" field.</summary>
    public const int WaitForThreadsFieldNumber = 10;
    /// <summary>
    /// Creates a WaitForThreadsNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WaitForThreadsNode WaitForThreads {
      get { return nodeCase_ == NodeOneofCase.WaitForThreads ? (global::LittleHorse.Common.Proto.WaitForThreadsNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.WaitForThreads;
      }
    }

    /// <summary>Field number for the "nop" field.</summary>
    public const int NopFieldNumber = 11;
    /// <summary>
    /// Creates a NopNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.NopNode Nop {
      get { return nodeCase_ == NodeOneofCase.Nop ? (global::LittleHorse.Common.Proto.NopNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Nop;
      }
    }

    /// <summary>Field number for the "sleep" field.</summary>
    public const int SleepFieldNumber = 12;
    /// <summary>
    /// Creates a SleepNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.SleepNode Sleep {
      get { return nodeCase_ == NodeOneofCase.Sleep ? (global::LittleHorse.Common.Proto.SleepNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.Sleep;
      }
    }

    /// <summary>Field number for the "user_task" field.</summary>
    public const int UserTaskFieldNumber = 13;
    /// <summary>
    /// Creates a UserTaskNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskNode UserTask {
      get { return nodeCase_ == NodeOneofCase.UserTask ? (global::LittleHorse.Common.Proto.UserTaskNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.UserTask;
      }
    }

    /// <summary>Field number for the "start_multiple_threads" field.</summary>
    public const int StartMultipleThreadsFieldNumber = 15;
    /// <summary>
    /// Creates a StartMultipleThreadsNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.StartMultipleThreadsNode StartMultipleThreads {
      get { return nodeCase_ == NodeOneofCase.StartMultipleThreads ? (global::LittleHorse.Common.Proto.StartMultipleThreadsNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.StartMultipleThreads;
      }
    }

    /// <summary>Field number for the "throw_event" field.</summary>
    public const int ThrowEventFieldNumber = 16;
    /// <summary>
    /// Creates a ThrowEventNodeRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ThrowEventNode ThrowEvent {
      get { return nodeCase_ == NodeOneofCase.ThrowEvent ? (global::LittleHorse.Common.Proto.ThrowEventNode) node_ : null; }
      set {
        node_ = value;
        nodeCase_ = value == null ? NodeOneofCase.None : NodeOneofCase.ThrowEvent;
      }
    }

    private object node_;
    /// <summary>Enum of possible cases for the "node" oneof.</summary>
    public enum NodeOneofCase {
      None = 0,
      Entrypoint = 5,
      Exit = 6,
      Task = 7,
      ExternalEvent = 8,
      StartThread = 9,
      WaitForThreads = 10,
      Nop = 11,
      Sleep = 12,
      UserTask = 13,
      StartMultipleThreads = 15,
      ThrowEvent = 16,
    }
    private NodeOneofCase nodeCase_ = NodeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeOneofCase NodeCase {
      get { return nodeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNode() {
      nodeCase_ = NodeOneofCase.None;
      node_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outgoingEdges_.Equals(other.outgoingEdges_)) return false;
      if(!failureHandlers_.Equals(other.failureHandlers_)) return false;
      if (!object.Equals(Entrypoint, other.Entrypoint)) return false;
      if (!object.Equals(Exit, other.Exit)) return false;
      if (!object.Equals(Task, other.Task)) return false;
      if (!object.Equals(ExternalEvent, other.ExternalEvent)) return false;
      if (!object.Equals(StartThread, other.StartThread)) return false;
      if (!object.Equals(WaitForThreads, other.WaitForThreads)) return false;
      if (!object.Equals(Nop, other.Nop)) return false;
      if (!object.Equals(Sleep, other.Sleep)) return false;
      if (!object.Equals(UserTask, other.UserTask)) return false;
      if (!object.Equals(StartMultipleThreads, other.StartMultipleThreads)) return false;
      if (!object.Equals(ThrowEvent, other.ThrowEvent)) return false;
      if (NodeCase != other.NodeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outgoingEdges_.GetHashCode();
      hash ^= failureHandlers_.GetHashCode();
      if (nodeCase_ == NodeOneofCase.Entrypoint) hash ^= Entrypoint.GetHashCode();
      if (nodeCase_ == NodeOneofCase.Exit) hash ^= Exit.GetHashCode();
      if (nodeCase_ == NodeOneofCase.Task) hash ^= Task.GetHashCode();
      if (nodeCase_ == NodeOneofCase.ExternalEvent) hash ^= ExternalEvent.GetHashCode();
      if (nodeCase_ == NodeOneofCase.StartThread) hash ^= StartThread.GetHashCode();
      if (nodeCase_ == NodeOneofCase.WaitForThreads) hash ^= WaitForThreads.GetHashCode();
      if (nodeCase_ == NodeOneofCase.Nop) hash ^= Nop.GetHashCode();
      if (nodeCase_ == NodeOneofCase.Sleep) hash ^= Sleep.GetHashCode();
      if (nodeCase_ == NodeOneofCase.UserTask) hash ^= UserTask.GetHashCode();
      if (nodeCase_ == NodeOneofCase.StartMultipleThreads) hash ^= StartMultipleThreads.GetHashCode();
      if (nodeCase_ == NodeOneofCase.ThrowEvent) hash ^= ThrowEvent.GetHashCode();
      hash ^= (int) nodeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      outgoingEdges_.WriteTo(output, _repeated_outgoingEdges_codec);
      failureHandlers_.WriteTo(output, _repeated_failureHandlers_codec);
      if (nodeCase_ == NodeOneofCase.Entrypoint) {
        output.WriteRawTag(42);
        output.WriteMessage(Entrypoint);
      }
      if (nodeCase_ == NodeOneofCase.Exit) {
        output.WriteRawTag(50);
        output.WriteMessage(Exit);
      }
      if (nodeCase_ == NodeOneofCase.Task) {
        output.WriteRawTag(58);
        output.WriteMessage(Task);
      }
      if (nodeCase_ == NodeOneofCase.ExternalEvent) {
        output.WriteRawTag(66);
        output.WriteMessage(ExternalEvent);
      }
      if (nodeCase_ == NodeOneofCase.StartThread) {
        output.WriteRawTag(74);
        output.WriteMessage(StartThread);
      }
      if (nodeCase_ == NodeOneofCase.WaitForThreads) {
        output.WriteRawTag(82);
        output.WriteMessage(WaitForThreads);
      }
      if (nodeCase_ == NodeOneofCase.Nop) {
        output.WriteRawTag(90);
        output.WriteMessage(Nop);
      }
      if (nodeCase_ == NodeOneofCase.Sleep) {
        output.WriteRawTag(98);
        output.WriteMessage(Sleep);
      }
      if (nodeCase_ == NodeOneofCase.UserTask) {
        output.WriteRawTag(106);
        output.WriteMessage(UserTask);
      }
      if (nodeCase_ == NodeOneofCase.StartMultipleThreads) {
        output.WriteRawTag(122);
        output.WriteMessage(StartMultipleThreads);
      }
      if (nodeCase_ == NodeOneofCase.ThrowEvent) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ThrowEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      outgoingEdges_.WriteTo(ref output, _repeated_outgoingEdges_codec);
      failureHandlers_.WriteTo(ref output, _repeated_failureHandlers_codec);
      if (nodeCase_ == NodeOneofCase.Entrypoint) {
        output.WriteRawTag(42);
        output.WriteMessage(Entrypoint);
      }
      if (nodeCase_ == NodeOneofCase.Exit) {
        output.WriteRawTag(50);
        output.WriteMessage(Exit);
      }
      if (nodeCase_ == NodeOneofCase.Task) {
        output.WriteRawTag(58);
        output.WriteMessage(Task);
      }
      if (nodeCase_ == NodeOneofCase.ExternalEvent) {
        output.WriteRawTag(66);
        output.WriteMessage(ExternalEvent);
      }
      if (nodeCase_ == NodeOneofCase.StartThread) {
        output.WriteRawTag(74);
        output.WriteMessage(StartThread);
      }
      if (nodeCase_ == NodeOneofCase.WaitForThreads) {
        output.WriteRawTag(82);
        output.WriteMessage(WaitForThreads);
      }
      if (nodeCase_ == NodeOneofCase.Nop) {
        output.WriteRawTag(90);
        output.WriteMessage(Nop);
      }
      if (nodeCase_ == NodeOneofCase.Sleep) {
        output.WriteRawTag(98);
        output.WriteMessage(Sleep);
      }
      if (nodeCase_ == NodeOneofCase.UserTask) {
        output.WriteRawTag(106);
        output.WriteMessage(UserTask);
      }
      if (nodeCase_ == NodeOneofCase.StartMultipleThreads) {
        output.WriteRawTag(122);
        output.WriteMessage(StartMultipleThreads);
      }
      if (nodeCase_ == NodeOneofCase.ThrowEvent) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ThrowEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += outgoingEdges_.CalculateSize(_repeated_outgoingEdges_codec);
      size += failureHandlers_.CalculateSize(_repeated_failureHandlers_codec);
      if (nodeCase_ == NodeOneofCase.Entrypoint) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Entrypoint);
      }
      if (nodeCase_ == NodeOneofCase.Exit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exit);
      }
      if (nodeCase_ == NodeOneofCase.Task) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (nodeCase_ == NodeOneofCase.ExternalEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalEvent);
      }
      if (nodeCase_ == NodeOneofCase.StartThread) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartThread);
      }
      if (nodeCase_ == NodeOneofCase.WaitForThreads) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WaitForThreads);
      }
      if (nodeCase_ == NodeOneofCase.Nop) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nop);
      }
      if (nodeCase_ == NodeOneofCase.Sleep) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sleep);
      }
      if (nodeCase_ == NodeOneofCase.UserTask) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTask);
      }
      if (nodeCase_ == NodeOneofCase.StartMultipleThreads) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartMultipleThreads);
      }
      if (nodeCase_ == NodeOneofCase.ThrowEvent) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ThrowEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      outgoingEdges_.Add(other.outgoingEdges_);
      failureHandlers_.Add(other.failureHandlers_);
      switch (other.NodeCase) {
        case NodeOneofCase.Entrypoint:
          if (Entrypoint == null) {
            Entrypoint = new global::LittleHorse.Common.Proto.EntrypointNode();
          }
          Entrypoint.MergeFrom(other.Entrypoint);
          break;
        case NodeOneofCase.Exit:
          if (Exit == null) {
            Exit = new global::LittleHorse.Common.Proto.ExitNode();
          }
          Exit.MergeFrom(other.Exit);
          break;
        case NodeOneofCase.Task:
          if (Task == null) {
            Task = new global::LittleHorse.Common.Proto.TaskNode();
          }
          Task.MergeFrom(other.Task);
          break;
        case NodeOneofCase.ExternalEvent:
          if (ExternalEvent == null) {
            ExternalEvent = new global::LittleHorse.Common.Proto.ExternalEventNode();
          }
          ExternalEvent.MergeFrom(other.ExternalEvent);
          break;
        case NodeOneofCase.StartThread:
          if (StartThread == null) {
            StartThread = new global::LittleHorse.Common.Proto.StartThreadNode();
          }
          StartThread.MergeFrom(other.StartThread);
          break;
        case NodeOneofCase.WaitForThreads:
          if (WaitForThreads == null) {
            WaitForThreads = new global::LittleHorse.Common.Proto.WaitForThreadsNode();
          }
          WaitForThreads.MergeFrom(other.WaitForThreads);
          break;
        case NodeOneofCase.Nop:
          if (Nop == null) {
            Nop = new global::LittleHorse.Common.Proto.NopNode();
          }
          Nop.MergeFrom(other.Nop);
          break;
        case NodeOneofCase.Sleep:
          if (Sleep == null) {
            Sleep = new global::LittleHorse.Common.Proto.SleepNode();
          }
          Sleep.MergeFrom(other.Sleep);
          break;
        case NodeOneofCase.UserTask:
          if (UserTask == null) {
            UserTask = new global::LittleHorse.Common.Proto.UserTaskNode();
          }
          UserTask.MergeFrom(other.UserTask);
          break;
        case NodeOneofCase.StartMultipleThreads:
          if (StartMultipleThreads == null) {
            StartMultipleThreads = new global::LittleHorse.Common.Proto.StartMultipleThreadsNode();
          }
          StartMultipleThreads.MergeFrom(other.StartMultipleThreads);
          break;
        case NodeOneofCase.ThrowEvent:
          if (ThrowEvent == null) {
            ThrowEvent = new global::LittleHorse.Common.Proto.ThrowEventNode();
          }
          ThrowEvent.MergeFrom(other.ThrowEvent);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outgoingEdges_.AddEntriesFrom(input, _repeated_outgoingEdges_codec);
            break;
          }
          case 34: {
            failureHandlers_.AddEntriesFrom(input, _repeated_failureHandlers_codec);
            break;
          }
          case 42: {
            global::LittleHorse.Common.Proto.EntrypointNode subBuilder = new global::LittleHorse.Common.Proto.EntrypointNode();
            if (nodeCase_ == NodeOneofCase.Entrypoint) {
              subBuilder.MergeFrom(Entrypoint);
            }
            input.ReadMessage(subBuilder);
            Entrypoint = subBuilder;
            break;
          }
          case 50: {
            global::LittleHorse.Common.Proto.ExitNode subBuilder = new global::LittleHorse.Common.Proto.ExitNode();
            if (nodeCase_ == NodeOneofCase.Exit) {
              subBuilder.MergeFrom(Exit);
            }
            input.ReadMessage(subBuilder);
            Exit = subBuilder;
            break;
          }
          case 58: {
            global::LittleHorse.Common.Proto.TaskNode subBuilder = new global::LittleHorse.Common.Proto.TaskNode();
            if (nodeCase_ == NodeOneofCase.Task) {
              subBuilder.MergeFrom(Task);
            }
            input.ReadMessage(subBuilder);
            Task = subBuilder;
            break;
          }
          case 66: {
            global::LittleHorse.Common.Proto.ExternalEventNode subBuilder = new global::LittleHorse.Common.Proto.ExternalEventNode();
            if (nodeCase_ == NodeOneofCase.ExternalEvent) {
              subBuilder.MergeFrom(ExternalEvent);
            }
            input.ReadMessage(subBuilder);
            ExternalEvent = subBuilder;
            break;
          }
          case 74: {
            global::LittleHorse.Common.Proto.StartThreadNode subBuilder = new global::LittleHorse.Common.Proto.StartThreadNode();
            if (nodeCase_ == NodeOneofCase.StartThread) {
              subBuilder.MergeFrom(StartThread);
            }
            input.ReadMessage(subBuilder);
            StartThread = subBuilder;
            break;
          }
          case 82: {
            global::LittleHorse.Common.Proto.WaitForThreadsNode subBuilder = new global::LittleHorse.Common.Proto.WaitForThreadsNode();
            if (nodeCase_ == NodeOneofCase.WaitForThreads) {
              subBuilder.MergeFrom(WaitForThreads);
            }
            input.ReadMessage(subBuilder);
            WaitForThreads = subBuilder;
            break;
          }
          case 90: {
            global::LittleHorse.Common.Proto.NopNode subBuilder = new global::LittleHorse.Common.Proto.NopNode();
            if (nodeCase_ == NodeOneofCase.Nop) {
              subBuilder.MergeFrom(Nop);
            }
            input.ReadMessage(subBuilder);
            Nop = subBuilder;
            break;
          }
          case 98: {
            global::LittleHorse.Common.Proto.SleepNode subBuilder = new global::LittleHorse.Common.Proto.SleepNode();
            if (nodeCase_ == NodeOneofCase.Sleep) {
              subBuilder.MergeFrom(Sleep);
            }
            input.ReadMessage(subBuilder);
            Sleep = subBuilder;
            break;
          }
          case 106: {
            global::LittleHorse.Common.Proto.UserTaskNode subBuilder = new global::LittleHorse.Common.Proto.UserTaskNode();
            if (nodeCase_ == NodeOneofCase.UserTask) {
              subBuilder.MergeFrom(UserTask);
            }
            input.ReadMessage(subBuilder);
            UserTask = subBuilder;
            break;
          }
          case 122: {
            global::LittleHorse.Common.Proto.StartMultipleThreadsNode subBuilder = new global::LittleHorse.Common.Proto.StartMultipleThreadsNode();
            if (nodeCase_ == NodeOneofCase.StartMultipleThreads) {
              subBuilder.MergeFrom(StartMultipleThreads);
            }
            input.ReadMessage(subBuilder);
            StartMultipleThreads = subBuilder;
            break;
          }
          case 130: {
            global::LittleHorse.Common.Proto.ThrowEventNode subBuilder = new global::LittleHorse.Common.Proto.ThrowEventNode();
            if (nodeCase_ == NodeOneofCase.ThrowEvent) {
              subBuilder.MergeFrom(ThrowEvent);
            }
            input.ReadMessage(subBuilder);
            ThrowEvent = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            outgoingEdges_.AddEntriesFrom(ref input, _repeated_outgoingEdges_codec);
            break;
          }
          case 34: {
            failureHandlers_.AddEntriesFrom(ref input, _repeated_failureHandlers_codec);
            break;
          }
          case 42: {
            global::LittleHorse.Common.Proto.EntrypointNode subBuilder = new global::LittleHorse.Common.Proto.EntrypointNode();
            if (nodeCase_ == NodeOneofCase.Entrypoint) {
              subBuilder.MergeFrom(Entrypoint);
            }
            input.ReadMessage(subBuilder);
            Entrypoint = subBuilder;
            break;
          }
          case 50: {
            global::LittleHorse.Common.Proto.ExitNode subBuilder = new global::LittleHorse.Common.Proto.ExitNode();
            if (nodeCase_ == NodeOneofCase.Exit) {
              subBuilder.MergeFrom(Exit);
            }
            input.ReadMessage(subBuilder);
            Exit = subBuilder;
            break;
          }
          case 58: {
            global::LittleHorse.Common.Proto.TaskNode subBuilder = new global::LittleHorse.Common.Proto.TaskNode();
            if (nodeCase_ == NodeOneofCase.Task) {
              subBuilder.MergeFrom(Task);
            }
            input.ReadMessage(subBuilder);
            Task = subBuilder;
            break;
          }
          case 66: {
            global::LittleHorse.Common.Proto.ExternalEventNode subBuilder = new global::LittleHorse.Common.Proto.ExternalEventNode();
            if (nodeCase_ == NodeOneofCase.ExternalEvent) {
              subBuilder.MergeFrom(ExternalEvent);
            }
            input.ReadMessage(subBuilder);
            ExternalEvent = subBuilder;
            break;
          }
          case 74: {
            global::LittleHorse.Common.Proto.StartThreadNode subBuilder = new global::LittleHorse.Common.Proto.StartThreadNode();
            if (nodeCase_ == NodeOneofCase.StartThread) {
              subBuilder.MergeFrom(StartThread);
            }
            input.ReadMessage(subBuilder);
            StartThread = subBuilder;
            break;
          }
          case 82: {
            global::LittleHorse.Common.Proto.WaitForThreadsNode subBuilder = new global::LittleHorse.Common.Proto.WaitForThreadsNode();
            if (nodeCase_ == NodeOneofCase.WaitForThreads) {
              subBuilder.MergeFrom(WaitForThreads);
            }
            input.ReadMessage(subBuilder);
            WaitForThreads = subBuilder;
            break;
          }
          case 90: {
            global::LittleHorse.Common.Proto.NopNode subBuilder = new global::LittleHorse.Common.Proto.NopNode();
            if (nodeCase_ == NodeOneofCase.Nop) {
              subBuilder.MergeFrom(Nop);
            }
            input.ReadMessage(subBuilder);
            Nop = subBuilder;
            break;
          }
          case 98: {
            global::LittleHorse.Common.Proto.SleepNode subBuilder = new global::LittleHorse.Common.Proto.SleepNode();
            if (nodeCase_ == NodeOneofCase.Sleep) {
              subBuilder.MergeFrom(Sleep);
            }
            input.ReadMessage(subBuilder);
            Sleep = subBuilder;
            break;
          }
          case 106: {
            global::LittleHorse.Common.Proto.UserTaskNode subBuilder = new global::LittleHorse.Common.Proto.UserTaskNode();
            if (nodeCase_ == NodeOneofCase.UserTask) {
              subBuilder.MergeFrom(UserTask);
            }
            input.ReadMessage(subBuilder);
            UserTask = subBuilder;
            break;
          }
          case 122: {
            global::LittleHorse.Common.Proto.StartMultipleThreadsNode subBuilder = new global::LittleHorse.Common.Proto.StartMultipleThreadsNode();
            if (nodeCase_ == NodeOneofCase.StartMultipleThreads) {
              subBuilder.MergeFrom(StartMultipleThreads);
            }
            input.ReadMessage(subBuilder);
            StartMultipleThreads = subBuilder;
            break;
          }
          case 130: {
            global::LittleHorse.Common.Proto.ThrowEventNode subBuilder = new global::LittleHorse.Common.Proto.ThrowEventNode();
            if (nodeCase_ == NodeOneofCase.ThrowEvent) {
              subBuilder.MergeFrom(ThrowEvent);
            }
            input.ReadMessage(subBuilder);
            ThrowEvent = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A SubNode that throws a WorkflowEvent of a specific type. There is no output.
  /// </summary>
  public sealed partial class ThrowEventNode : pb::IMessage<ThrowEventNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThrowEventNode> _parser = new pb::MessageParser<ThrowEventNode>(() => new ThrowEventNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThrowEventNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThrowEventNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThrowEventNode(ThrowEventNode other) : this() {
      eventDefId_ = other.eventDefId_ != null ? other.eventDefId_.Clone() : null;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThrowEventNode Clone() {
      return new ThrowEventNode(this);
    }

    /// <summary>Field number for the "event_def_id" field.</summary>
    public const int EventDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WorkflowEventDefId eventDefId_;
    /// <summary>
    /// The WorkflowEventDefId of the WorkflowEvent that is thrown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WorkflowEventDefId EventDefId {
      get { return eventDefId_; }
      set {
        eventDefId_ = value;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableAssignment content_;
    /// <summary>
    /// A VariableAssignment defining the content of the WorkflowEvent that is thrown
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThrowEventNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThrowEventNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventDefId, other.EventDefId)) return false;
      if (!object.Equals(Content, other.Content)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventDefId_ != null) hash ^= EventDefId.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventDefId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventDefId);
      }
      if (content_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventDefId);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThrowEventNode other) {
      if (other == null) {
        return;
      }
      if (other.eventDefId_ != null) {
        if (eventDefId_ == null) {
          EventDefId = new global::LittleHorse.Common.Proto.WorkflowEventDefId();
        }
        EventDefId.MergeFrom(other.EventDefId);
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Content.MergeFrom(other.Content);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventDefId_ == null) {
              EventDefId = new global::LittleHorse.Common.Proto.WorkflowEventDefId();
            }
            input.ReadMessage(EventDefId);
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventDefId_ == null) {
              EventDefId = new global::LittleHorse.Common.Proto.WorkflowEventDefId();
            }
            input.ReadMessage(EventDefId);
            break;
          }
          case 18: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Content);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The UserTaskNode creates a UserTaskRun, which is used to get input from a human
  /// user into the workflow.
  ///
  /// The output is a JSON_OBJ variable with one key/value pair for each UserTaskField.
  /// </summary>
  public sealed partial class UserTaskNode : pb::IMessage<UserTaskNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskNode> _parser = new pb::MessageParser<UserTaskNode>(() => new UserTaskNode());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskNode(UserTaskNode other) : this() {
      _hasBits0 = other._hasBits0;
      userTaskDefName_ = other.userTaskDefName_;
      userGroup_ = other.userGroup_ != null ? other.userGroup_.Clone() : null;
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      actions_ = other.actions_.Clone();
      userTaskDefVersion_ = other.userTaskDefVersion_;
      notes_ = other.notes_ != null ? other.notes_.Clone() : null;
      onCancellationExceptionName_ = other.onCancellationExceptionName_ != null ? other.onCancellationExceptionName_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskNode Clone() {
      return new UserTaskNode(this);
    }

    /// <summary>Field number for the "user_task_def_name" field.</summary>
    public const int UserTaskDefNameFieldNumber = 1;
    private string userTaskDefName_ = "";
    /// <summary>
    /// Denotes the name of the `UserTaskDef` that should create the `UserTaskRun`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserTaskDefName {
      get { return userTaskDefName_; }
      set {
        userTaskDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_group" field.</summary>
    public const int UserGroupFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableAssignment userGroup_;
    /// <summary>
    /// Denotes the user_group to which the UserTaskRun is assigned upon creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment UserGroup {
      get { return userGroup_; }
      set {
        userGroup_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableAssignment userId_;
    /// <summary>
    /// Denotes the user_id to which the UserTaskRun is assigned upon creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UTActionTrigger> _repeated_actions_codec
        = pb::FieldCodec.ForMessage(34, global::LittleHorse.Common.Proto.UTActionTrigger.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UTActionTrigger> actions_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UTActionTrigger>();
    /// <summary>
    /// Specifies a list of actions that happen on various time-based triggers. Actions
    /// include reassigning the UserTaskRun, cancelling the UserTaskRun, or executing
    /// a "reminder" TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UTActionTrigger> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "user_task_def_version" field.</summary>
    public const int UserTaskDefVersionFieldNumber = 5;
    private readonly static int UserTaskDefVersionDefaultValue = 0;

    private int userTaskDefVersion_;
    /// <summary>
    /// If set, then the UserTaskRun will always have this specific version of the
    /// UserTaskDef. Otherwise, the UserTaskRun will have the latest version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserTaskDefVersion {
      get { if ((_hasBits0 & 1) != 0) { return userTaskDefVersion_; } else { return UserTaskDefVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        userTaskDefVersion_ = value;
      }
    }
    /// <summary>Gets whether the "user_task_def_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserTaskDefVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "user_task_def_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserTaskDefVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 6;
    private global::LittleHorse.Common.Proto.VariableAssignment notes_;
    /// <summary>
    /// Specifies the value to be displayed on the `notes` field of the UserTaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Notes {
      get { return notes_; }
      set {
        notes_ = value;
      }
    }

    /// <summary>Field number for the "on_cancellation_exception_name" field.</summary>
    public const int OnCancellationExceptionNameFieldNumber = 7;
    private global::LittleHorse.Common.Proto.VariableAssignment onCancellationExceptionName_;
    /// <summary>
    /// Specifies the name of the exception thrown when the User Task is canceled. If
    /// not set, then the cancellation or timeout of a User Task Run throws an ERROR
    /// rather than an EXCEPTION.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment OnCancellationExceptionName {
      get { return onCancellationExceptionName_; }
      set {
        onCancellationExceptionName_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserTaskDefName != other.UserTaskDefName) return false;
      if (!object.Equals(UserGroup, other.UserGroup)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      if(!actions_.Equals(other.actions_)) return false;
      if (UserTaskDefVersion != other.UserTaskDefVersion) return false;
      if (!object.Equals(Notes, other.Notes)) return false;
      if (!object.Equals(OnCancellationExceptionName, other.OnCancellationExceptionName)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserTaskDefName.Length != 0) hash ^= UserTaskDefName.GetHashCode();
      if (userGroup_ != null) hash ^= UserGroup.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      hash ^= actions_.GetHashCode();
      if (HasUserTaskDefVersion) hash ^= UserTaskDefVersion.GetHashCode();
      if (notes_ != null) hash ^= Notes.GetHashCode();
      if (onCancellationExceptionName_ != null) hash ^= OnCancellationExceptionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserTaskDefName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserTaskDefName);
      }
      if (userGroup_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserGroup);
      }
      if (userId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserId);
      }
      actions_.WriteTo(output, _repeated_actions_codec);
      if (HasUserTaskDefVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(UserTaskDefVersion);
      }
      if (notes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Notes);
      }
      if (onCancellationExceptionName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OnCancellationExceptionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserTaskDefName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserTaskDefName);
      }
      if (userGroup_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserGroup);
      }
      if (userId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UserId);
      }
      actions_.WriteTo(ref output, _repeated_actions_codec);
      if (HasUserTaskDefVersion) {
        output.WriteRawTag(40);
        output.WriteInt32(UserTaskDefVersion);
      }
      if (notes_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Notes);
      }
      if (onCancellationExceptionName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OnCancellationExceptionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserTaskDefName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTaskDefName);
      }
      if (userGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserGroup);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      size += actions_.CalculateSize(_repeated_actions_codec);
      if (HasUserTaskDefVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserTaskDefVersion);
      }
      if (notes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notes);
      }
      if (onCancellationExceptionName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OnCancellationExceptionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskNode other) {
      if (other == null) {
        return;
      }
      if (other.UserTaskDefName.Length != 0) {
        UserTaskDefName = other.UserTaskDefName;
      }
      if (other.userGroup_ != null) {
        if (userGroup_ == null) {
          UserGroup = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        UserGroup.MergeFrom(other.UserGroup);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          UserId = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        UserId.MergeFrom(other.UserId);
      }
      actions_.Add(other.actions_);
      if (other.HasUserTaskDefVersion) {
        UserTaskDefVersion = other.UserTaskDefVersion;
      }
      if (other.notes_ != null) {
        if (notes_ == null) {
          Notes = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Notes.MergeFrom(other.Notes);
      }
      if (other.onCancellationExceptionName_ != null) {
        if (onCancellationExceptionName_ == null) {
          OnCancellationExceptionName = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        OnCancellationExceptionName.MergeFrom(other.OnCancellationExceptionName);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserTaskDefName = input.ReadString();
            break;
          }
          case 18: {
            if (userGroup_ == null) {
              UserGroup = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(UserGroup);
            break;
          }
          case 26: {
            if (userId_ == null) {
              UserId = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(UserId);
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 40: {
            UserTaskDefVersion = input.ReadInt32();
            break;
          }
          case 50: {
            if (notes_ == null) {
              Notes = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Notes);
            break;
          }
          case 58: {
            if (onCancellationExceptionName_ == null) {
              OnCancellationExceptionName = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(OnCancellationExceptionName);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            UserTaskDefName = input.ReadString();
            break;
          }
          case 18: {
            if (userGroup_ == null) {
              UserGroup = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(UserGroup);
            break;
          }
          case 26: {
            if (userId_ == null) {
              UserId = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(UserId);
            break;
          }
          case 34: {
            actions_.AddEntriesFrom(ref input, _repeated_actions_codec);
            break;
          }
          case 40: {
            UserTaskDefVersion = input.ReadInt32();
            break;
          }
          case 50: {
            if (notes_ == null) {
              Notes = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Notes);
            break;
          }
          case 58: {
            if (onCancellationExceptionName_ == null) {
              OnCancellationExceptionName = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(OnCancellationExceptionName);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is a boolean expression used to evaluate whether an Edge is valid.
  /// </summary>
  public sealed partial class EdgeCondition : pb::IMessage<EdgeCondition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EdgeCondition> _parser = new pb::MessageParser<EdgeCondition>(() => new EdgeCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EdgeCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EdgeCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EdgeCondition(EdgeCondition other) : this() {
      comparator_ = other.comparator_;
      left_ = other.left_ != null ? other.left_.Clone() : null;
      right_ = other.right_ != null ? other.right_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EdgeCondition Clone() {
      return new EdgeCondition(this);
    }

    /// <summary>Field number for the "comparator" field.</summary>
    public const int ComparatorFieldNumber = 1;
    private global::LittleHorse.Common.Proto.Comparator comparator_ = global::LittleHorse.Common.Proto.Comparator.LessThan;
    /// <summary>
    /// The Operator used to evaluate the left versus the right.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.Comparator Comparator {
      get { return comparator_; }
      set {
        comparator_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableAssignment left_;
    /// <summary>
    /// The left side of the boolean expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableAssignment right_;
    /// <summary>
    /// The right side of the Boolean Expression.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EdgeCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EdgeCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Comparator != other.Comparator) return false;
      if (!object.Equals(Left, other.Left)) return false;
      if (!object.Equals(Right, other.Right)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Comparator != global::LittleHorse.Common.Proto.Comparator.LessThan) hash ^= Comparator.GetHashCode();
      if (left_ != null) hash ^= Left.GetHashCode();
      if (right_ != null) hash ^= Right.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Comparator != global::LittleHorse.Common.Proto.Comparator.LessThan) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Comparator);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Comparator != global::LittleHorse.Common.Proto.Comparator.LessThan) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Comparator);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Comparator != global::LittleHorse.Common.Proto.Comparator.LessThan) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Comparator);
      }
      if (left_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
      }
      if (right_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EdgeCondition other) {
      if (other == null) {
        return;
      }
      if (other.Comparator != global::LittleHorse.Common.Proto.Comparator.LessThan) {
        Comparator = other.Comparator;
      }
      if (other.left_ != null) {
        if (left_ == null) {
          Left = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Left.MergeFrom(other.Left);
      }
      if (other.right_ != null) {
        if (right_ == null) {
          Right = new global::LittleHorse.Common.Proto.VariableAssignment();
        }
        Right.MergeFrom(other.Right);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Comparator = (global::LittleHorse.Common.Proto.Comparator) input.ReadEnum();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Comparator = (global::LittleHorse.Common.Proto.Comparator) input.ReadEnum();
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::LittleHorse.Common.Proto.VariableAssignment();
            }
            input.ReadMessage(Right);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The Edge is the line in the workflow that connects one Node to another.
  /// </summary>
  public sealed partial class Edge : pb::IMessage<Edge>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Edge> _parser = new pb::MessageParser<Edge>(() => new Edge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Edge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Edge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Edge(Edge other) : this() {
      sinkNodeName_ = other.sinkNodeName_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      variableMutations_ = other.variableMutations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Edge Clone() {
      return new Edge(this);
    }

    /// <summary>Field number for the "sink_node_name" field.</summary>
    public const int SinkNodeNameFieldNumber = 1;
    private string sinkNodeName_ = "";
    /// <summary>
    /// The name of the Node that the Edge points to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SinkNodeName {
      get { return sinkNodeName_; }
      set {
        sinkNodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 2;
    private global::LittleHorse.Common.Proto.EdgeCondition condition_;
    /// <summary>
    /// The Condition on which this Edge will be traversed. When choosing an Edge
    /// to travel after the completion of a NodeRun, the Edges are evaluated in
    /// order. The first one to either have no condition or have a condition which
    /// evaluates to `true` is taken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.EdgeCondition Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    /// <summary>Field number for the "variable_mutations" field.</summary>
    public const int VariableMutationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VariableMutation> _repeated_variableMutations_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.VariableMutation.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMutation> variableMutations_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMutation>();
    /// <summary>
    /// Ordered list of Variable Mutations to execute when traversing this Edge.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMutation> VariableMutations {
      get { return variableMutations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Edge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Edge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SinkNodeName != other.SinkNodeName) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      if(!variableMutations_.Equals(other.variableMutations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SinkNodeName.Length != 0) hash ^= SinkNodeName.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      hash ^= variableMutations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SinkNodeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SinkNodeName);
      }
      if (condition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      variableMutations_.WriteTo(output, _repeated_variableMutations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SinkNodeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SinkNodeName);
      }
      if (condition_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Condition);
      }
      variableMutations_.WriteTo(ref output, _repeated_variableMutations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SinkNodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SinkNodeName);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      size += variableMutations_.CalculateSize(_repeated_variableMutations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Edge other) {
      if (other == null) {
        return;
      }
      if (other.SinkNodeName.Length != 0) {
        SinkNodeName = other.SinkNodeName;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::LittleHorse.Common.Proto.EdgeCondition();
        }
        Condition.MergeFrom(other.Condition);
      }
      variableMutations_.Add(other.variableMutations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SinkNodeName = input.ReadString();
            break;
          }
          case 18: {
            if (condition_ == null) {
              Condition = new global::LittleHorse.Common.Proto.EdgeCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 26: {
            variableMutations_.AddEntriesFrom(input, _repeated_variableMutations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SinkNodeName = input.ReadString();
            break;
          }
          case 18: {
            if (condition_ == null) {
              Condition = new global::LittleHorse.Common.Proto.EdgeCondition();
            }
            input.ReadMessage(Condition);
            break;
          }
          case 26: {
            variableMutations_.AddEntriesFrom(ref input, _repeated_variableMutations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// NOP node has no operations and is used for conditional branching.
  /// </summary>
  public sealed partial class NopNode : pb::IMessage<NopNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NopNode> _parser = new pb::MessageParser<NopNode>(() => new NopNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NopNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NopNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NopNode(NopNode other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NopNode Clone() {
      return new NopNode(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NopNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NopNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NopNode other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sleep Node causes the WfRun to wait a specified time and then resume.
  ///
  /// There is no output.
  /// </summary>
  public sealed partial class SleepNode : pb::IMessage<SleepNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SleepNode> _parser = new pb::MessageParser<SleepNode>(() => new SleepNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SleepNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SleepNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SleepNode(SleepNode other) : this() {
      switch (other.SleepLengthCase) {
        case SleepLengthOneofCase.RawSeconds:
          RawSeconds = other.RawSeconds.Clone();
          break;
        case SleepLengthOneofCase.Timestamp:
          Timestamp = other.Timestamp.Clone();
          break;
        case SleepLengthOneofCase.IsoDate:
          IsoDate = other.IsoDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SleepNode Clone() {
      return new SleepNode(this);
    }

    /// <summary>Field number for the "raw_seconds" field.</summary>
    public const int RawSecondsFieldNumber = 1;
    /// <summary>
    /// Sleeps the specified number of seconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment RawSeconds {
      get { return sleepLengthCase_ == SleepLengthOneofCase.RawSeconds ? (global::LittleHorse.Common.Proto.VariableAssignment) sleepLength_ : null; }
      set {
        sleepLength_ = value;
        sleepLengthCase_ = value == null ? SleepLengthOneofCase.None : SleepLengthOneofCase.RawSeconds;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    /// <summary>
    /// Sleeps until the `long` timestamp (epoch millis) specified here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment Timestamp {
      get { return sleepLengthCase_ == SleepLengthOneofCase.Timestamp ? (global::LittleHorse.Common.Proto.VariableAssignment) sleepLength_ : null; }
      set {
        sleepLength_ = value;
        sleepLengthCase_ = value == null ? SleepLengthOneofCase.None : SleepLengthOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "iso_date" field.</summary>
    public const int IsoDateFieldNumber = 3;
    /// <summary>
    /// Sleeps until the ISO-formatted date specified here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableAssignment IsoDate {
      get { return sleepLengthCase_ == SleepLengthOneofCase.IsoDate ? (global::LittleHorse.Common.Proto.VariableAssignment) sleepLength_ : null; }
      set {
        sleepLength_ = value;
        sleepLengthCase_ = value == null ? SleepLengthOneofCase.None : SleepLengthOneofCase.IsoDate;
      }
    }

    private object sleepLength_;
    /// <summary>Enum of possible cases for the "sleep_length" oneof.</summary>
    public enum SleepLengthOneofCase {
      None = 0,
      RawSeconds = 1,
      Timestamp = 2,
      IsoDate = 3,
    }
    private SleepLengthOneofCase sleepLengthCase_ = SleepLengthOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SleepLengthOneofCase SleepLengthCase {
      get { return sleepLengthCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSleepLength() {
      sleepLengthCase_ = SleepLengthOneofCase.None;
      sleepLength_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SleepNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SleepNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawSeconds, other.RawSeconds)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(IsoDate, other.IsoDate)) return false;
      if (SleepLengthCase != other.SleepLengthCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) hash ^= RawSeconds.GetHashCode();
      if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) hash ^= IsoDate.GetHashCode();
      hash ^= (int) sleepLengthCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) {
        output.WriteRawTag(10);
        output.WriteMessage(RawSeconds);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) {
        output.WriteRawTag(26);
        output.WriteMessage(IsoDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) {
        output.WriteRawTag(10);
        output.WriteMessage(RawSeconds);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) {
        output.WriteRawTag(18);
        output.WriteMessage(Timestamp);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) {
        output.WriteRawTag(26);
        output.WriteMessage(IsoDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawSeconds);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsoDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SleepNode other) {
      if (other == null) {
        return;
      }
      switch (other.SleepLengthCase) {
        case SleepLengthOneofCase.RawSeconds:
          if (RawSeconds == null) {
            RawSeconds = new global::LittleHorse.Common.Proto.VariableAssignment();
          }
          RawSeconds.MergeFrom(other.RawSeconds);
          break;
        case SleepLengthOneofCase.Timestamp:
          if (Timestamp == null) {
            Timestamp = new global::LittleHorse.Common.Proto.VariableAssignment();
          }
          Timestamp.MergeFrom(other.Timestamp);
          break;
        case SleepLengthOneofCase.IsoDate:
          if (IsoDate == null) {
            IsoDate = new global::LittleHorse.Common.Proto.VariableAssignment();
          }
          IsoDate.MergeFrom(other.IsoDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) {
              subBuilder.MergeFrom(RawSeconds);
            }
            input.ReadMessage(subBuilder);
            RawSeconds = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 26: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) {
              subBuilder.MergeFrom(IsoDate);
            }
            input.ReadMessage(subBuilder);
            IsoDate = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.RawSeconds) {
              subBuilder.MergeFrom(RawSeconds);
            }
            input.ReadMessage(subBuilder);
            RawSeconds = subBuilder;
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 26: {
            global::LittleHorse.Common.Proto.VariableAssignment subBuilder = new global::LittleHorse.Common.Proto.VariableAssignment();
            if (sleepLengthCase_ == SleepLengthOneofCase.IsoDate) {
              subBuilder.MergeFrom(IsoDate);
            }
            input.ReadMessage(subBuilder);
            IsoDate = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EXPERIMENTAL: Specification for how to migrate an in-flight WfRun from one WfSpec
  /// to another WfSpec version.
  /// </summary>
  public sealed partial class WfSpecVersionMigration : pb::IMessage<WfSpecVersionMigration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfSpecVersionMigration> _parser = new pb::MessageParser<WfSpecVersionMigration>(() => new WfSpecVersionMigration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfSpecVersionMigration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecVersionMigration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecVersionMigration(WfSpecVersionMigration other) : this() {
      newMajorVersion_ = other.newMajorVersion_;
      newRevision_ = other.newRevision_;
      threadSpecMigrations_ = other.threadSpecMigrations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecVersionMigration Clone() {
      return new WfSpecVersionMigration(this);
    }

    /// <summary>Field number for the "new_major_version" field.</summary>
    public const int NewMajorVersionFieldNumber = 1;
    private int newMajorVersion_;
    /// <summary>
    /// The major version of the WfSpec that we are migrating to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewMajorVersion {
      get { return newMajorVersion_; }
      set {
        newMajorVersion_ = value;
      }
    }

    /// <summary>Field number for the "new_revision" field.</summary>
    public const int NewRevisionFieldNumber = 2;
    private int newRevision_;
    /// <summary>
    /// The revision of the WfSpec that we are migrating to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NewRevision {
      get { return newRevision_; }
      set {
        newRevision_ = value;
      }
    }

    /// <summary>Field number for the "thread_spec_migrations" field.</summary>
    public const int ThreadSpecMigrationsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpecMigration>.Codec _map_threadSpecMigrations_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpecMigration>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ThreadSpecMigration.Parser), 26);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpecMigration> threadSpecMigrations_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpecMigration>();
    /// <summary>
    /// Map from ThreadSpec name to a specifier determining how to migrate ThreadRun's
    /// to the new version of the WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpecMigration> ThreadSpecMigrations {
      get { return threadSpecMigrations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfSpecVersionMigration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfSpecVersionMigration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewMajorVersion != other.NewMajorVersion) return false;
      if (NewRevision != other.NewRevision) return false;
      if (!ThreadSpecMigrations.Equals(other.ThreadSpecMigrations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NewMajorVersion != 0) hash ^= NewMajorVersion.GetHashCode();
      if (NewRevision != 0) hash ^= NewRevision.GetHashCode();
      hash ^= ThreadSpecMigrations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewMajorVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewMajorVersion);
      }
      if (NewRevision != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewRevision);
      }
      threadSpecMigrations_.WriteTo(output, _map_threadSpecMigrations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewMajorVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NewMajorVersion);
      }
      if (NewRevision != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NewRevision);
      }
      threadSpecMigrations_.WriteTo(ref output, _map_threadSpecMigrations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NewMajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewMajorVersion);
      }
      if (NewRevision != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NewRevision);
      }
      size += threadSpecMigrations_.CalculateSize(_map_threadSpecMigrations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfSpecVersionMigration other) {
      if (other == null) {
        return;
      }
      if (other.NewMajorVersion != 0) {
        NewMajorVersion = other.NewMajorVersion;
      }
      if (other.NewRevision != 0) {
        NewRevision = other.NewRevision;
      }
      threadSpecMigrations_.MergeFrom(other.threadSpecMigrations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NewMajorVersion = input.ReadInt32();
            break;
          }
          case 16: {
            NewRevision = input.ReadInt32();
            break;
          }
          case 26: {
            threadSpecMigrations_.AddEntriesFrom(input, _map_threadSpecMigrations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NewMajorVersion = input.ReadInt32();
            break;
          }
          case 16: {
            NewRevision = input.ReadInt32();
            break;
          }
          case 26: {
            threadSpecMigrations_.AddEntriesFrom(ref input, _map_threadSpecMigrations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EXPERIMENTAL: Specification for how to migrate a ThreadRun of a specific ThreadSpec
  /// from one WfSpec to another WfSpec version.
  /// </summary>
  public sealed partial class ThreadSpecMigration : pb::IMessage<ThreadSpecMigration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreadSpecMigration> _parser = new pb::MessageParser<ThreadSpecMigration>(() => new ThreadSpecMigration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ThreadSpecMigration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpecMigration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpecMigration(ThreadSpecMigration other) : this() {
      newThreadSpecName_ = other.newThreadSpecName_;
      nodeMigrations_ = other.nodeMigrations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ThreadSpecMigration Clone() {
      return new ThreadSpecMigration(this);
    }

    /// <summary>Field number for the "new_thread_spec_name" field.</summary>
    public const int NewThreadSpecNameFieldNumber = 1;
    private string newThreadSpecName_ = "";
    /// <summary>
    /// The name of the ThreadSpec in the new WfSpec that this ThreadSpec should
    /// migrate to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewThreadSpecName {
      get { return newThreadSpecName_; }
      set {
        newThreadSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_migrations" field.</summary>
    public const int NodeMigrationsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.NodeMigration>.Codec _map_nodeMigrations_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.NodeMigration>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.NodeMigration.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.NodeMigration> nodeMigrations_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.NodeMigration>();
    /// <summary>
    /// Map from name of the nodes on the current ThreadSpec to the migration
    /// to perform on it to move it to a new WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.NodeMigration> NodeMigrations {
      get { return nodeMigrations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ThreadSpecMigration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ThreadSpecMigration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewThreadSpecName != other.NewThreadSpecName) return false;
      if (!NodeMigrations.Equals(other.NodeMigrations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NewThreadSpecName.Length != 0) hash ^= NewThreadSpecName.GetHashCode();
      hash ^= NodeMigrations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewThreadSpecName);
      }
      nodeMigrations_.WriteTo(output, _map_nodeMigrations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewThreadSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewThreadSpecName);
      }
      nodeMigrations_.WriteTo(ref output, _map_nodeMigrations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NewThreadSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewThreadSpecName);
      }
      size += nodeMigrations_.CalculateSize(_map_nodeMigrations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ThreadSpecMigration other) {
      if (other == null) {
        return;
      }
      if (other.NewThreadSpecName.Length != 0) {
        NewThreadSpecName = other.NewThreadSpecName;
      }
      nodeMigrations_.MergeFrom(other.nodeMigrations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            nodeMigrations_.AddEntriesFrom(input, _map_nodeMigrations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NewThreadSpecName = input.ReadString();
            break;
          }
          case 18: {
            nodeMigrations_.AddEntriesFrom(ref input, _map_nodeMigrations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EXPERIMENTAL: Specification for migrating a WfRun from a Node in one WfSpec
  /// to a Node in another WfSpec version.
  /// </summary>
  public sealed partial class NodeMigration : pb::IMessage<NodeMigration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeMigration> _parser = new pb::MessageParser<NodeMigration>(() => new NodeMigration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeMigration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMigration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMigration(NodeMigration other) : this() {
      newNodeName_ = other.newNodeName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeMigration Clone() {
      return new NodeMigration(this);
    }

    /// <summary>Field number for the "new_node_name" field.</summary>
    public const int NewNodeNameFieldNumber = 1;
    private string newNodeName_ = "";
    /// <summary>
    /// The name of the Node on the new WfSpec to move to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string NewNodeName {
      get { return newNodeName_; }
      set {
        newNodeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeMigration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeMigration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NewNodeName != other.NewNodeName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NewNodeName.Length != 0) hash ^= NewNodeName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NewNodeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewNodeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NewNodeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NewNodeName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NewNodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NewNodeName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeMigration other) {
      if (other == null) {
        return;
      }
      if (other.NewNodeName.Length != 0) {
        NewNodeName = other.NewNodeName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NewNodeName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NewNodeName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
