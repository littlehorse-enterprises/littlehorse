// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: user_tasks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LittleHorse.Common.Proto {

  /// <summary>Holder for reflection information generated from user_tasks.proto</summary>
  public static partial class UserTasksReflection {

    #region Descriptor
    /// <summary>File descriptor for user_tasks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserTasksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChB1c2VyX3Rhc2tzLnByb3RvEgtsaXR0bGVob3JzZRofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxoSY29tbW9uX2VudW1zLnByb3RvGg9vYmpl",
            "Y3RfaWQucHJvdG8aDnZhcmlhYmxlLnByb3RvIrIBCgtVc2VyVGFza0RlZhIM",
            "CgRuYW1lGAEgASgJEg8KB3ZlcnNpb24YAiABKAUSGAoLZGVzY3JpcHRpb24Y",
            "AyABKAlIAIgBARIqCgZmaWVsZHMYBCADKAsyGi5saXR0bGVob3JzZS5Vc2Vy",
            "VGFza0ZpZWxkEi4KCmNyZWF0ZWRfYXQYBSABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wQg4KDF9kZXNjcmlwdGlvbiKYAQoNVXNlclRhc2tGaWVs",
            "ZBIMCgRuYW1lGAEgASgJEicKBHR5cGUYAiABKA4yGS5saXR0bGVob3JzZS5W",
            "YXJpYWJsZVR5cGUSGAoLZGVzY3JpcHRpb24YAyABKAlIAIgBARIUCgxkaXNw",
            "bGF5X25hbWUYBCABKAkSEAoIcmVxdWlyZWQYBSABKAhCDgoMX2Rlc2NyaXB0",
            "aW9uIqMECgtVc2VyVGFza1J1bhImCgJpZBgBIAEoCzIaLmxpdHRsZWhvcnNl",
            "LlVzZXJUYXNrUnVuSWQSNAoQdXNlcl90YXNrX2RlZl9pZBgCIAEoCzIaLmxp",
            "dHRsZWhvcnNlLlVzZXJUYXNrRGVmSWQSFwoKdXNlcl9ncm91cBgDIAEoCUgA",
            "iAEBEhQKB3VzZXJfaWQYBCABKAlIAYgBARI2CgdyZXN1bHRzGAYgAygLMiUu",
            "bGl0dGxlaG9yc2UuVXNlclRhc2tSdW4uUmVzdWx0c0VudHJ5Ei4KBnN0YXR1",
            "cxgHIAEoDjIeLmxpdHRsZWhvcnNlLlVzZXJUYXNrUnVuU3RhdHVzEioKBmV2",
            "ZW50cxgIIAMoCzIaLmxpdHRsZWhvcnNlLlVzZXJUYXNrRXZlbnQSEgoFbm90",
            "ZXMYCSABKAlIAogBARIyCg5zY2hlZHVsZWRfdGltZRgKIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoLbm9kZV9ydW5faWQYCyABKAsyFi5s",
            "aXR0bGVob3JzZS5Ob2RlUnVuSWQSDQoFZXBvY2gYDCABKAUaSgoMUmVzdWx0",
            "c0VudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEoCzIaLmxpdHRsZWhv",
            "cnNlLlZhcmlhYmxlVmFsdWU6AjgBQg0KC191c2VyX2dyb3VwQgoKCF91c2Vy",
            "X2lkQggKBl9ub3RlcyKyAQoYQXNzaWduVXNlclRhc2tSdW5SZXF1ZXN0EjQK",
            "EHVzZXJfdGFza19ydW5faWQYASABKAsyGi5saXR0bGVob3JzZS5Vc2VyVGFz",
            "a1J1bklkEhYKDm92ZXJyaWRlX2NsYWltGAIgASgIEhcKCnVzZXJfZ3JvdXAY",
            "AyABKAlIAIgBARIUCgd1c2VyX2lkGAQgASgJSAGIAQFCDQoLX3VzZXJfZ3Jv",
            "dXBCCgoIX3VzZXJfaWQi9gEKGkNvbXBsZXRlVXNlclRhc2tSdW5SZXF1ZXN0",
            "EjQKEHVzZXJfdGFza19ydW5faWQYASABKAsyGi5saXR0bGVob3JzZS5Vc2Vy",
            "VGFza1J1bklkEkUKB3Jlc3VsdHMYAiADKAsyNC5saXR0bGVob3JzZS5Db21w",
            "bGV0ZVVzZXJUYXNrUnVuUmVxdWVzdC5SZXN1bHRzRW50cnkSDwoHdXNlcl9p",
            "ZBgDIAEoCRpKCgxSZXN1bHRzRW50cnkSCwoDa2V5GAEgASgJEikKBXZhbHVl",
            "GAIgASgLMhoubGl0dGxlaG9yc2UuVmFyaWFibGVWYWx1ZToCOAEirgMKHlNh",
            "dmVVc2VyVGFza1J1blByb2dyZXNzUmVxdWVzdBI0ChB1c2VyX3Rhc2tfcnVu",
            "X2lkGAEgASgLMhoubGl0dGxlaG9yc2UuVXNlclRhc2tSdW5JZBJJCgdyZXN1",
            "bHRzGAIgAygLMjgubGl0dGxlaG9yc2UuU2F2ZVVzZXJUYXNrUnVuUHJvZ3Jl",
            "c3NSZXF1ZXN0LlJlc3VsdHNFbnRyeRIPCgd1c2VyX2lkGAMgASgJElsKBnBv",
            "bGljeRgEIAEoDjJLLmxpdHRsZWhvcnNlLlNhdmVVc2VyVGFza1J1blByb2dy",
            "ZXNzUmVxdWVzdC5TYXZlVXNlclRhc2tSdW5Bc3NpZ25tZW50UG9saWN5GkoK",
            "DFJlc3VsdHNFbnRyeRILCgNrZXkYASABKAkSKQoFdmFsdWUYAiABKAsyGi5s",
            "aXR0bGVob3JzZS5WYXJpYWJsZVZhbHVlOgI4ASJRCh9TYXZlVXNlclRhc2tS",
            "dW5Bc3NpZ25tZW50UG9saWN5EhwKGEZBSUxfSUZfQ0xBSU1FRF9CWV9PVEhF",
            "UhAAEhAKDElHTk9SRV9DTEFJTRABIlAKGENhbmNlbFVzZXJUYXNrUnVuUmVx",
            "dWVzdBI0ChB1c2VyX3Rhc2tfcnVuX2lkGAEgASgLMhoubGl0dGxlaG9yc2Uu",
            "VXNlclRhc2tSdW5JZCKxAQoYVXNlclRhc2tUcmlnZ2VyUmVmZXJlbmNlEisK",
            "C25vZGVfcnVuX2lkGAEgASgLMhYubGl0dGxlaG9yc2UuTm9kZVJ1bklkEh4K",
            "FnVzZXJfdGFza19ldmVudF9udW1iZXIYAiABKAUSFAoHdXNlcl9pZBgDIAEo",
            "CUgAiAEBEhcKCnVzZXJfZ3JvdXAYBCABKAlIAYgBAUIKCghfdXNlcl9pZEIN",
            "CgtfdXNlcl9ncm91cCKGBgoNVXNlclRhc2tFdmVudBIoCgR0aW1lGAEgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJDCg10YXNrX2V4ZWN1dGVk",
            "GAIgASgLMioubGl0dGxlaG9yc2UuVXNlclRhc2tFdmVudC5VVEVUYXNrRXhl",
            "Y3V0ZWRIABI6Cghhc3NpZ25lZBgDIAEoCzImLmxpdHRsZWhvcnNlLlVzZXJU",
            "YXNrRXZlbnQuVVRFQXNzaWduZWRIABI8CgljYW5jZWxsZWQYBCABKAsyJy5s",
            "aXR0bGVob3JzZS5Vc2VyVGFza0V2ZW50LlVURUNhbmNlbGxlZEgAEjQKBXNh",
            "dmVkGAUgASgLMiMubGl0dGxlaG9yc2UuVXNlclRhc2tFdmVudC5VVEVTYXZl",
            "ZEgAGh8KDFVURUNhbmNlbGxlZBIPCgdtZXNzYWdlGAEgASgJGjsKD1VURVRh",
            "c2tFeGVjdXRlZBIoCgh0YXNrX3J1bhgBIAEoCzIWLmxpdHRsZWhvcnNlLlRh",
            "c2tSdW5JZBqqAQoIVVRFU2F2ZWQSDwoHdXNlcl9pZBgBIAEoCRJBCgdyZXN1",
            "bHRzGAIgAygLMjAubGl0dGxlaG9yc2UuVXNlclRhc2tFdmVudC5VVEVTYXZl",
            "ZC5SZXN1bHRzRW50cnkaSgoMUmVzdWx0c0VudHJ5EgsKA2tleRgBIAEoCRIp",
            "CgV2YWx1ZRgCIAEoCzIaLmxpdHRsZWhvcnNlLlZhcmlhYmxlVmFsdWU6AjgB",
            "GsEBCgtVVEVBc3NpZ25lZBIYCgtvbGRfdXNlcl9pZBgBIAEoCUgAiAEBEhsK",
            "Dm9sZF91c2VyX2dyb3VwGAIgASgJSAGIAQESGAoLbmV3X3VzZXJfaWQYAyAB",
            "KAlIAogBARIbCg5uZXdfdXNlcl9ncm91cBgEIAEoCUgDiAEBQg4KDF9vbGRf",
            "dXNlcl9pZEIRCg9fb2xkX3VzZXJfZ3JvdXBCDgoMX25ld191c2VyX2lkQhEK",
            "D19uZXdfdXNlcl9ncm91cEIHCgVldmVudCpKChFVc2VyVGFza1J1blN0YXR1",
            "cxIOCgpVTkFTU0lHTkVEEAASDAoIQVNTSUdORUQQARIICgRET05FEAMSDQoJ",
            "Q0FOQ0VMTEVEEARCSQofaW8ubGl0dGxlaG9yc2Uuc2RrLmNvbW1vbi5wcm90",
            "b1ABWgkuO2xocHJvdG+qAhhMaXR0bGVIb3JzZS5Db21tb24uUHJvdG9iBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::LittleHorse.Common.Proto.CommonEnumsReflection.Descriptor, global::LittleHorse.Common.Proto.ObjectIdReflection.Descriptor, global::LittleHorse.Common.Proto.VariableReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LittleHorse.Common.Proto.UserTaskRunStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskDef), global::LittleHorse.Common.Proto.UserTaskDef.Parser, new[]{ "Name", "Version", "Description", "Fields", "CreatedAt" }, new[]{ "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskField), global::LittleHorse.Common.Proto.UserTaskField.Parser, new[]{ "Name", "Type", "Description", "DisplayName", "Required" }, new[]{ "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskRun), global::LittleHorse.Common.Proto.UserTaskRun.Parser, new[]{ "Id", "UserTaskDefId", "UserGroup", "UserId", "Results", "Status", "Events", "Notes", "ScheduledTime", "NodeRunId", "Epoch" }, new[]{ "UserGroup", "UserId", "Notes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.AssignUserTaskRunRequest), global::LittleHorse.Common.Proto.AssignUserTaskRunRequest.Parser, new[]{ "UserTaskRunId", "OverrideClaim", "UserGroup", "UserId" }, new[]{ "UserGroup", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.CompleteUserTaskRunRequest), global::LittleHorse.Common.Proto.CompleteUserTaskRunRequest.Parser, new[]{ "UserTaskRunId", "Results", "UserId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest), global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Parser, new[]{ "UserTaskRunId", "Results", "UserId", "Policy" }, null, new[]{ typeof(global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.CancelUserTaskRunRequest), global::LittleHorse.Common.Proto.CancelUserTaskRunRequest.Parser, new[]{ "UserTaskRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskTriggerReference), global::LittleHorse.Common.Proto.UserTaskTriggerReference.Parser, new[]{ "NodeRunId", "UserTaskEventNumber", "UserId", "UserGroup" }, new[]{ "UserId", "UserGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskEvent), global::LittleHorse.Common.Proto.UserTaskEvent.Parser, new[]{ "Time", "TaskExecuted", "Assigned", "Cancelled", "Saved" }, new[]{ "Event" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled), global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted), global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted.Parser, new[]{ "TaskRun" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved), global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved.Parser, new[]{ "UserId", "Results" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned), global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned.Parser, new[]{ "OldUserId", "OldUserGroup", "NewUserId", "NewUserGroup" }, new[]{ "OldUserId", "OldUserGroup", "NewUserId", "NewUserGroup" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The status that a UserTaskRun can be in.
  /// </summary>
  public enum UserTaskRunStatus {
    /// <summary>
    /// Not assigned to a specific user yet.
    /// </summary>
    [pbr::OriginalName("UNASSIGNED")] Unassigned = 0,
    /// <summary>
    /// Assigned to a specific user, but not completed or cancelled yet.
    /// </summary>
    [pbr::OriginalName("ASSIGNED")] Assigned = 1,
    /// <summary>
    /// Done.
    /// </summary>
    [pbr::OriginalName("DONE")] Done = 3,
    /// <summary>
    /// Cancelled.
    /// </summary>
    [pbr::OriginalName("CANCELLED")] Cancelled = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// UserTaskDef is the metadata blueprint for UserTaskRuns.
  /// </summary>
  public sealed partial class UserTaskDef : pb::IMessage<UserTaskDef>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskDef> _parser = new pb::MessageParser<UserTaskDef>(() => new UserTaskDef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskDef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDef(UserTaskDef other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      description_ = other.description_;
      fields_ = other.fields_.Clone();
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDef Clone() {
      return new UserTaskDef(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the `UserTaskDef`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    /// <summary>
    /// The version of the `UserTaskDef`. Only simple versioning is supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Metadata field that does not impact WfRun execution. Useful for providing
    /// context on the UserTaskRun, for example when displaying it on a general-purpose
    /// task manager application.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(34, global::LittleHorse.Common.Proto.UserTaskField.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField> fields_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField>();
    /// <summary>
    /// These are the fields comprise the User Task. A User Task Manager application, or
    /// any application used to complete a UserTaskRun, should inspect these fields and
    /// display form entries for each one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// The time the UserTaskRun was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskDef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskDef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      if (Description != other.Description) return false;
      if(!fields_.Equals(other.fields_)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (createdAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (createdAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskDef other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      fields_.Add(other.fields_);
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 42: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
          case 42: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A UserTaskField is a specific field of data to be entered into a UserTaskRun.
  /// </summary>
  public sealed partial class UserTaskField : pb::IMessage<UserTaskField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskField> _parser = new pb::MessageParser<UserTaskField>(() => new UserTaskField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskField(UserTaskField other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      description_ = other.description_;
      displayName_ = other.displayName_;
      required_ = other.required_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskField Clone() {
      return new UserTaskField(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the field. When a UserTaskRun is completed, the NodeOutput is a
    /// single-level JSON_OBJ. Each key is the name of the field. Must be unique.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableType type_ = global::LittleHorse.Common.Proto.VariableType.JsonObj;
    /// <summary>
    /// The type of the output. Must be a primitive type (STR, BOOL, INT, DOUBLE).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Optional description which can be displayed by the User Task UI application.
    /// Does not affect WfRun execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    /// <summary>
    /// The name to be displayed by the User Task UI application. Does not affect
    /// WfRun execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 5;
    private bool required_;
    /// <summary>
    /// Whether this field is required for UserTaskRun completion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Required {
      get { return required_; }
      set {
        required_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Description != other.Description) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Required != other.Required) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) hash ^= Type.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Required != false) hash ^= Required.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Required != false) {
        output.WriteRawTag(40);
        output.WriteBool(Required);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Required != false) {
        output.WriteRawTag(40);
        output.WriteBool(Required);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Required != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskField other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        Type = other.Type;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Required != false) {
        Required = other.Required;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 40: {
            Required = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 40: {
            Required = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A UserTaskRun is a running instance of a UserTaskDef. It is created when a
  /// ThreadRun arrives at a Node of type `USER_TASK`.
  /// </summary>
  public sealed partial class UserTaskRun : pb::IMessage<UserTaskRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskRun> _parser = new pb::MessageParser<UserTaskRun>(() => new UserTaskRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRun(UserTaskRun other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      userTaskDefId_ = other.userTaskDefId_ != null ? other.userTaskDefId_.Clone() : null;
      userGroup_ = other.userGroup_;
      userId_ = other.userId_;
      results_ = other.results_.Clone();
      status_ = other.status_;
      events_ = other.events_.Clone();
      notes_ = other.notes_;
      scheduledTime_ = other.scheduledTime_ != null ? other.scheduledTime_.Clone() : null;
      nodeRunId_ = other.nodeRunId_ != null ? other.nodeRunId_.Clone() : null;
      epoch_ = other.epoch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRun Clone() {
      return new UserTaskRun(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskRunId id_;
    /// <summary>
    /// The ID of the UserTaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "user_task_def_id" field.</summary>
    public const int UserTaskDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.UserTaskDefId userTaskDefId_;
    /// <summary>
    /// The ID of the UserTaskDef that this UserTaskRun comes from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskDefId UserTaskDefId {
      get { return userTaskDefId_; }
      set {
        userTaskDefId_ = value;
      }
    }

    /// <summary>Field number for the "user_group" field.</summary>
    public const int UserGroupFieldNumber = 3;
    private readonly static string UserGroupDefaultValue = "";

    private string userGroup_;
    /// <summary>
    /// Denotes the UserTaskRun as belonging to a specific User Group.
    ///
    /// The `user_group` does not refer to a group that is stored in LittleHorse; rather, it
    /// is the responsibility of the application to keep track of user/group identity and ensure
    /// that the user_group does indeed exist.
    ///
    /// Either `user_id` or `user_group` or both are set at any time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserGroup {
      get { return userGroup_ ?? UserGroupDefaultValue; }
      set {
        userGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserGroup {
      get { return userGroup_ != null; }
    }
    /// <summary>Clears the value of the "user_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserGroup() {
      userGroup_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    /// <summary>
    /// Denotes the UserTaskRun as assigned to a specific User ID. If this is set, then
    /// the UserTaskRun is either in the ASSIGNED, DONE, or CANCELLED status.
    ///
    /// The `user_id` does not refer to a User that is stored in LittleHorse; rather, it
    /// is the responsibility of the application to keep track of user identity and ensure
    /// that the user_id does indeed exist.
    ///
    /// Either `user_id` or `user_group` or both are set at any time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 6;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_results_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 50);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> results_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
    /// <summary>
    /// The results of the UserTaskRun. Empty if the UserTaskRun has not yet been completed.
    /// Each key in this map is the `name` of a corresponding `UserTaskField` on the
    /// UserTaskDef.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::LittleHorse.Common.Proto.UserTaskRunStatus status_ = global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned;
    /// <summary>
    /// Status of the UserTaskRun. Can be UNASSIGNED, ASSIGNED, DONE, or CANCELLED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(66, global::LittleHorse.Common.Proto.UserTaskEvent.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskEvent> events_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskEvent>();
    /// <summary>
    /// A list of events that have happened. Used for auditing information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "notes" field.</summary>
    public const int NotesFieldNumber = 9;
    private readonly static string NotesDefaultValue = "";

    private string notes_;
    /// <summary>
    /// Notes about this UserTaskRun that are **specific to the WfRun**. These notes
    /// are set by the WfSpec based on variables inside the specific `WfRun` and are
    /// intended to be displayed on the User Task Manager application. They do not
    /// affect WfRun execution.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Notes {
      get { return notes_ ?? NotesDefaultValue; }
      set {
        notes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "notes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNotes {
      get { return notes_ != null; }
    }
    /// <summary>Clears the value of the "notes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNotes() {
      notes_ = null;
    }

    /// <summary>Field number for the "scheduled_time" field.</summary>
    public const int ScheduledTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp scheduledTime_;
    /// <summary>
    /// The time that the UserTaskRun was created/scheduled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ScheduledTime {
      get { return scheduledTime_; }
      set {
        scheduledTime_ = value;
      }
    }

    /// <summary>Field number for the "node_run_id" field.</summary>
    public const int NodeRunIdFieldNumber = 11;
    private global::LittleHorse.Common.Proto.NodeRunId nodeRunId_;
    /// <summary>
    /// The NodeRun with which the UserTaskRun is associated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.NodeRunId NodeRunId {
      get { return nodeRunId_; }
      set {
        nodeRunId_ = value;
      }
    }

    /// <summary>Field number for the "epoch" field.</summary>
    public const int EpochFieldNumber = 12;
    private int epoch_;
    /// <summary>
    /// Current observed epoch of the UserTaskRun, related to the number of times it has been
    /// updated or re-assigned. Used internally to implement automated reassignment and reminder
    /// tasks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Epoch {
      get { return epoch_; }
      set {
        epoch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(UserTaskDefId, other.UserTaskDefId)) return false;
      if (UserGroup != other.UserGroup) return false;
      if (UserId != other.UserId) return false;
      if (!Results.Equals(other.Results)) return false;
      if (Status != other.Status) return false;
      if(!events_.Equals(other.events_)) return false;
      if (Notes != other.Notes) return false;
      if (!object.Equals(ScheduledTime, other.ScheduledTime)) return false;
      if (!object.Equals(NodeRunId, other.NodeRunId)) return false;
      if (Epoch != other.Epoch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (userTaskDefId_ != null) hash ^= UserTaskDefId.GetHashCode();
      if (HasUserGroup) hash ^= UserGroup.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      hash ^= Results.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned) hash ^= Status.GetHashCode();
      hash ^= events_.GetHashCode();
      if (HasNotes) hash ^= Notes.GetHashCode();
      if (scheduledTime_ != null) hash ^= ScheduledTime.GetHashCode();
      if (nodeRunId_ != null) hash ^= NodeRunId.GetHashCode();
      if (Epoch != 0) hash ^= Epoch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (userTaskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserTaskDefId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(26);
        output.WriteString(UserGroup);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      results_.WriteTo(output, _map_results_codec);
      if (Status != global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (HasNotes) {
        output.WriteRawTag(74);
        output.WriteString(Notes);
      }
      if (scheduledTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ScheduledTime);
      }
      if (nodeRunId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(NodeRunId);
      }
      if (Epoch != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (userTaskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserTaskDefId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(26);
        output.WriteString(UserGroup);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      results_.WriteTo(ref output, _map_results_codec);
      if (Status != global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Status);
      }
      events_.WriteTo(ref output, _repeated_events_codec);
      if (HasNotes) {
        output.WriteRawTag(74);
        output.WriteString(Notes);
      }
      if (scheduledTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ScheduledTime);
      }
      if (nodeRunId_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(NodeRunId);
      }
      if (Epoch != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Epoch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (userTaskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskDefId);
      }
      if (HasUserGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserGroup);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (Status != global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (HasNotes) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Notes);
      }
      if (scheduledTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduledTime);
      }
      if (nodeRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeRunId);
      }
      if (Epoch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Epoch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskRun other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.UserTaskRunId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.userTaskDefId_ != null) {
        if (userTaskDefId_ == null) {
          UserTaskDefId = new global::LittleHorse.Common.Proto.UserTaskDefId();
        }
        UserTaskDefId.MergeFrom(other.UserTaskDefId);
      }
      if (other.HasUserGroup) {
        UserGroup = other.UserGroup;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      results_.MergeFrom(other.results_);
      if (other.Status != global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned) {
        Status = other.Status;
      }
      events_.Add(other.events_);
      if (other.HasNotes) {
        Notes = other.Notes;
      }
      if (other.scheduledTime_ != null) {
        if (scheduledTime_ == null) {
          ScheduledTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ScheduledTime.MergeFrom(other.ScheduledTime);
      }
      if (other.nodeRunId_ != null) {
        if (nodeRunId_ == null) {
          NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
        }
        NodeRunId.MergeFrom(other.NodeRunId);
      }
      if (other.Epoch != 0) {
        Epoch = other.Epoch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (userTaskDefId_ == null) {
              UserTaskDefId = new global::LittleHorse.Common.Proto.UserTaskDefId();
            }
            input.ReadMessage(UserTaskDefId);
            break;
          }
          case 26: {
            UserGroup = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 56: {
            Status = (global::LittleHorse.Common.Proto.UserTaskRunStatus) input.ReadEnum();
            break;
          }
          case 66: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 74: {
            Notes = input.ReadString();
            break;
          }
          case 82: {
            if (scheduledTime_ == null) {
              ScheduledTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledTime);
            break;
          }
          case 90: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
          case 96: {
            Epoch = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (userTaskDefId_ == null) {
              UserTaskDefId = new global::LittleHorse.Common.Proto.UserTaskDefId();
            }
            input.ReadMessage(UserTaskDefId);
            break;
          }
          case 26: {
            UserGroup = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            results_.AddEntriesFrom(ref input, _map_results_codec);
            break;
          }
          case 56: {
            Status = (global::LittleHorse.Common.Proto.UserTaskRunStatus) input.ReadEnum();
            break;
          }
          case 66: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 74: {
            Notes = input.ReadString();
            break;
          }
          case 82: {
            if (scheduledTime_ == null) {
              ScheduledTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ScheduledTime);
            break;
          }
          case 90: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
          case 96: {
            Epoch = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Re-Assigns a UserTaskRun to a specific userId or userGroup.
  /// </summary>
  public sealed partial class AssignUserTaskRunRequest : pb::IMessage<AssignUserTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AssignUserTaskRunRequest> _parser = new pb::MessageParser<AssignUserTaskRunRequest>(() => new AssignUserTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AssignUserTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssignUserTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssignUserTaskRunRequest(AssignUserTaskRunRequest other) : this() {
      userTaskRunId_ = other.userTaskRunId_ != null ? other.userTaskRunId_.Clone() : null;
      overrideClaim_ = other.overrideClaim_;
      userGroup_ = other.userGroup_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AssignUserTaskRunRequest Clone() {
      return new AssignUserTaskRunRequest(this);
    }

    /// <summary>Field number for the "user_task_run_id" field.</summary>
    public const int UserTaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskRunId userTaskRunId_;
    /// <summary>
    /// The UserTaskRun to assign to a new user_id or user_group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunId UserTaskRunId {
      get { return userTaskRunId_; }
      set {
        userTaskRunId_ = value;
      }
    }

    /// <summary>Field number for the "override_claim" field.</summary>
    public const int OverrideClaimFieldNumber = 2;
    private bool overrideClaim_;
    /// <summary>
    /// If override_claim is set to false and the UserTaskRun is already assigned to
    /// a user_id, then the request throws a FAILED_PRECONDITION error. If set to
    /// true, then the old claim is overriden and the UserTaskRun is assigned to
    /// the new user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OverrideClaim {
      get { return overrideClaim_; }
      set {
        overrideClaim_ = value;
      }
    }

    /// <summary>Field number for the "user_group" field.</summary>
    public const int UserGroupFieldNumber = 3;
    private readonly static string UserGroupDefaultValue = "";

    private string userGroup_;
    /// <summary>
    /// The new user_group to which the UserTaskRun is assigned. If not set, then
    /// the user_group of the UserTaskRun is actively unset by this request. At least
    /// one of the user_group and user_id must be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserGroup {
      get { return userGroup_ ?? UserGroupDefaultValue; }
      set {
        userGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserGroup {
      get { return userGroup_ != null; }
    }
    /// <summary>Clears the value of the "user_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserGroup() {
      userGroup_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    /// <summary>
    /// The new user_id to which the UserTaskRun is assigned. If not set, then
    /// the user_id of the UserTaskRun is actively unset by this request. At least
    /// one of the user_group and user_id must be set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AssignUserTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AssignUserTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserTaskRunId, other.UserTaskRunId)) return false;
      if (OverrideClaim != other.OverrideClaim) return false;
      if (UserGroup != other.UserGroup) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (userTaskRunId_ != null) hash ^= UserTaskRunId.GetHashCode();
      if (OverrideClaim != false) hash ^= OverrideClaim.GetHashCode();
      if (HasUserGroup) hash ^= UserGroup.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      if (OverrideClaim != false) {
        output.WriteRawTag(16);
        output.WriteBool(OverrideClaim);
      }
      if (HasUserGroup) {
        output.WriteRawTag(26);
        output.WriteString(UserGroup);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      if (OverrideClaim != false) {
        output.WriteRawTag(16);
        output.WriteBool(OverrideClaim);
      }
      if (HasUserGroup) {
        output.WriteRawTag(26);
        output.WriteString(UserGroup);
      }
      if (HasUserId) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (userTaskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskRunId);
      }
      if (OverrideClaim != false) {
        size += 1 + 1;
      }
      if (HasUserGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserGroup);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AssignUserTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.userTaskRunId_ != null) {
        if (userTaskRunId_ == null) {
          UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
        }
        UserTaskRunId.MergeFrom(other.UserTaskRunId);
      }
      if (other.OverrideClaim != false) {
        OverrideClaim = other.OverrideClaim;
      }
      if (other.HasUserGroup) {
        UserGroup = other.UserGroup;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 16: {
            OverrideClaim = input.ReadBool();
            break;
          }
          case 26: {
            UserGroup = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 16: {
            OverrideClaim = input.ReadBool();
            break;
          }
          case 26: {
            UserGroup = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Completes a UserTaskRun with provided values.
  /// </summary>
  public sealed partial class CompleteUserTaskRunRequest : pb::IMessage<CompleteUserTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompleteUserTaskRunRequest> _parser = new pb::MessageParser<CompleteUserTaskRunRequest>(() => new CompleteUserTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompleteUserTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteUserTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteUserTaskRunRequest(CompleteUserTaskRunRequest other) : this() {
      userTaskRunId_ = other.userTaskRunId_ != null ? other.userTaskRunId_.Clone() : null;
      results_ = other.results_.Clone();
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompleteUserTaskRunRequest Clone() {
      return new CompleteUserTaskRunRequest(this);
    }

    /// <summary>Field number for the "user_task_run_id" field.</summary>
    public const int UserTaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskRunId userTaskRunId_;
    /// <summary>
    /// The id of UserTaskRun to complete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunId UserTaskRunId {
      get { return userTaskRunId_; }
      set {
        userTaskRunId_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_results_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> results_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
    /// <summary>
    /// A map from UserTaskField.name to a VariableValue containing the results of the
    /// user filling out the form.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    /// The ID of the user who executed the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompleteUserTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompleteUserTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserTaskRunId, other.UserTaskRunId)) return false;
      if (!Results.Equals(other.Results)) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (userTaskRunId_ != null) hash ^= UserTaskRunId.GetHashCode();
      hash ^= Results.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      results_.WriteTo(output, _map_results_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      results_.WriteTo(ref output, _map_results_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (userTaskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskRunId);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompleteUserTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.userTaskRunId_ != null) {
        if (userTaskRunId_ == null) {
          UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
        }
        UserTaskRunId.MergeFrom(other.UserTaskRunId);
      }
      results_.MergeFrom(other.results_);
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _map_results_codec);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Saves the results of a UserTaskRun and logs who saved the content.&lt;br/>
  ///
  /// &lt;li> Throws FAILED_PRECONDITION if the UserTaskRun is in the `DONE` or `CANCELLED` state.&lt;/li>
  /// &lt;li> If `policy` is set to `FAIL_IF_CLAIMED_BY_OTHER`, returns `FAILED_PRECONDITION` if the
  /// `user_id` field of the `UserTaskRun` does not match the `user_id` of the request.&lt;/li>
  /// </summary>
  public sealed partial class SaveUserTaskRunProgressRequest : pb::IMessage<SaveUserTaskRunProgressRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SaveUserTaskRunProgressRequest> _parser = new pb::MessageParser<SaveUserTaskRunProgressRequest>(() => new SaveUserTaskRunProgressRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SaveUserTaskRunProgressRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SaveUserTaskRunProgressRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SaveUserTaskRunProgressRequest(SaveUserTaskRunProgressRequest other) : this() {
      userTaskRunId_ = other.userTaskRunId_ != null ? other.userTaskRunId_.Clone() : null;
      results_ = other.results_.Clone();
      userId_ = other.userId_;
      policy_ = other.policy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SaveUserTaskRunProgressRequest Clone() {
      return new SaveUserTaskRunProgressRequest(this);
    }

    /// <summary>Field number for the "user_task_run_id" field.</summary>
    public const int UserTaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskRunId userTaskRunId_;
    /// <summary>
    /// The id of UserTaskRun to save.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunId UserTaskRunId {
      get { return userTaskRunId_; }
      set {
        userTaskRunId_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_results_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> results_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
    /// <summary>
    /// A map from UserTaskField.name to a VariableValue containing the results of the
    /// user filling out the form.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    /// The ID of the user who saved the task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "policy" field.</summary>
    public const int PolicyFieldNumber = 4;
    private global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy policy_ = global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther;
    /// <summary>
    /// Configures how to handle `UserTaskRun` ownership when saving it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy Policy {
      get { return policy_; }
      set {
        policy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SaveUserTaskRunProgressRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SaveUserTaskRunProgressRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserTaskRunId, other.UserTaskRunId)) return false;
      if (!Results.Equals(other.Results)) return false;
      if (UserId != other.UserId) return false;
      if (Policy != other.Policy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (userTaskRunId_ != null) hash ^= UserTaskRunId.GetHashCode();
      hash ^= Results.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Policy != global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther) hash ^= Policy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      results_.WriteTo(output, _map_results_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Policy != global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Policy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      results_.WriteTo(ref output, _map_results_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Policy != global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Policy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (userTaskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskRunId);
      }
      size += results_.CalculateSize(_map_results_codec);
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Policy != global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Policy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SaveUserTaskRunProgressRequest other) {
      if (other == null) {
        return;
      }
      if (other.userTaskRunId_ != null) {
        if (userTaskRunId_ == null) {
          UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
        }
        UserTaskRunId.MergeFrom(other.UserTaskRunId);
      }
      results_.MergeFrom(other.results_);
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Policy != global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy.FailIfClaimedByOther) {
        Policy = other.Policy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _map_results_codec);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            Policy = (global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _map_results_codec);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            Policy = (global::LittleHorse.Common.Proto.SaveUserTaskRunProgressRequest.Types.SaveUserTaskRunAssignmentPolicy) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SaveUserTaskRunProgressRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Configures how to handle `UserTaskRun` ownership when saving it.
      /// </summary>
      public enum SaveUserTaskRunAssignmentPolicy {
        /// <summary>
        /// If the UserTaskRun is already assigned to a user_id, then the request throws a
        /// FAILED_PRECONDITION error.
        /// </summary>
        [pbr::OriginalName("FAIL_IF_CLAIMED_BY_OTHER")] FailIfClaimedByOther = 0,
        /// <summary>
        /// If the UserTaskRun is already assigned to a user_id, then the request will
        /// leave the `UserTaskRun` assigned to the current user but still update the
        /// `results` and log in the `events` who updated the results.
        /// </summary>
        [pbr::OriginalName("IGNORE_CLAIM")] IgnoreClaim = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Cancels a UserTaskRun.
  /// </summary>
  public sealed partial class CancelUserTaskRunRequest : pb::IMessage<CancelUserTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CancelUserTaskRunRequest> _parser = new pb::MessageParser<CancelUserTaskRunRequest>(() => new CancelUserTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CancelUserTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUserTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUserTaskRunRequest(CancelUserTaskRunRequest other) : this() {
      userTaskRunId_ = other.userTaskRunId_ != null ? other.userTaskRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CancelUserTaskRunRequest Clone() {
      return new CancelUserTaskRunRequest(this);
    }

    /// <summary>Field number for the "user_task_run_id" field.</summary>
    public const int UserTaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskRunId userTaskRunId_;
    /// <summary>
    /// The id of the UserTaskRun to cancel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunId UserTaskRunId {
      get { return userTaskRunId_; }
      set {
        userTaskRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CancelUserTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CancelUserTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserTaskRunId, other.UserTaskRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (userTaskRunId_ != null) hash ^= UserTaskRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userTaskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserTaskRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (userTaskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserTaskRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CancelUserTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.userTaskRunId_ != null) {
        if (userTaskRunId_ == null) {
          UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
        }
        UserTaskRunId.MergeFrom(other.UserTaskRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (userTaskRunId_ == null) {
              UserTaskRunId = new global::LittleHorse.Common.Proto.UserTaskRunId();
            }
            input.ReadMessage(UserTaskRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// All TaskRun's have a "trigger reference" which refers to the WfRun Element that
  /// caused the TaskRun to be scheduled. For example, a TaskRun on a regular TASK_NODE
  /// has a TaskNodeReference.
  ///
  /// The UserTaskTriggerReference serves as the "Trigger Reference" for a TaskRun that
  /// was scheduled by a lifecycle hook on a UserTaskRun (eg. a reminder task).
  ///
  /// The UserTaskTriggerReference is most useful in the WorkerContext of the Task Worker
  /// SDK, which allows the Task Method to determine where the TaskRun comes from.
  /// </summary>
  public sealed partial class UserTaskTriggerReference : pb::IMessage<UserTaskTriggerReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskTriggerReference> _parser = new pb::MessageParser<UserTaskTriggerReference>(() => new UserTaskTriggerReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskTriggerReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskTriggerReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskTriggerReference(UserTaskTriggerReference other) : this() {
      nodeRunId_ = other.nodeRunId_ != null ? other.nodeRunId_.Clone() : null;
      userTaskEventNumber_ = other.userTaskEventNumber_;
      userId_ = other.userId_;
      userGroup_ = other.userGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskTriggerReference Clone() {
      return new UserTaskTriggerReference(this);
    }

    /// <summary>Field number for the "node_run_id" field.</summary>
    public const int NodeRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.NodeRunId nodeRunId_;
    /// <summary>
    /// Is the NodeRun that the UserTaskRun belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.NodeRunId NodeRunId {
      get { return nodeRunId_; }
      set {
        nodeRunId_ = value;
      }
    }

    /// <summary>Field number for the "user_task_event_number" field.</summary>
    public const int UserTaskEventNumberFieldNumber = 2;
    private int userTaskEventNumber_;
    /// <summary>
    /// Is the index in the `events` field of the UserTaskRun that the TaskRun corresponds
    /// to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int UserTaskEventNumber {
      get { return userTaskEventNumber_; }
      set {
        userTaskEventNumber_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    /// <summary>
    /// Is the user_id that the UserTaskRun is assigned to. Unset if UserTaskRun is not
    /// asigned to a specific user_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    /// <summary>Field number for the "user_group" field.</summary>
    public const int UserGroupFieldNumber = 4;
    private readonly static string UserGroupDefaultValue = "";

    private string userGroup_;
    /// <summary>
    /// Is the user_id that the UserTaskRun is assigned to. Unset if UserTaskRun is not
    /// asigned to a specific user_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserGroup {
      get { return userGroup_ ?? UserGroupDefaultValue; }
      set {
        userGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserGroup {
      get { return userGroup_ != null; }
    }
    /// <summary>Clears the value of the "user_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserGroup() {
      userGroup_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskTriggerReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskTriggerReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NodeRunId, other.NodeRunId)) return false;
      if (UserTaskEventNumber != other.UserTaskEventNumber) return false;
      if (UserId != other.UserId) return false;
      if (UserGroup != other.UserGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nodeRunId_ != null) hash ^= NodeRunId.GetHashCode();
      if (UserTaskEventNumber != 0) hash ^= UserTaskEventNumber.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasUserGroup) hash ^= UserGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nodeRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeRunId);
      }
      if (UserTaskEventNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserTaskEventNumber);
      }
      if (HasUserId) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(34);
        output.WriteString(UserGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nodeRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NodeRunId);
      }
      if (UserTaskEventNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserTaskEventNumber);
      }
      if (HasUserId) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(34);
        output.WriteString(UserGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nodeRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeRunId);
      }
      if (UserTaskEventNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserTaskEventNumber);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (HasUserGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskTriggerReference other) {
      if (other == null) {
        return;
      }
      if (other.nodeRunId_ != null) {
        if (nodeRunId_ == null) {
          NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
        }
        NodeRunId.MergeFrom(other.NodeRunId);
      }
      if (other.UserTaskEventNumber != 0) {
        UserTaskEventNumber = other.UserTaskEventNumber;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasUserGroup) {
        UserGroup = other.UserGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
          case 16: {
            UserTaskEventNumber = input.ReadInt32();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            UserGroup = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nodeRunId_ == null) {
              NodeRunId = new global::LittleHorse.Common.Proto.NodeRunId();
            }
            input.ReadMessage(NodeRunId);
            break;
          }
          case 16: {
            UserTaskEventNumber = input.ReadInt32();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            UserGroup = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is an event stored in the audit log of a `UserTaskRun` purely for observability
  /// purposes.
  /// </summary>
  public sealed partial class UserTaskEvent : pb::IMessage<UserTaskEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskEvent> _parser = new pb::MessageParser<UserTaskEvent>(() => new UserTaskEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskEvent(UserTaskEvent other) : this() {
      time_ = other.time_ != null ? other.time_.Clone() : null;
      switch (other.EventCase) {
        case EventOneofCase.TaskExecuted:
          TaskExecuted = other.TaskExecuted.Clone();
          break;
        case EventOneofCase.Assigned:
          Assigned = other.Assigned.Clone();
          break;
        case EventOneofCase.Cancelled:
          Cancelled = other.Cancelled.Clone();
          break;
        case EventOneofCase.Saved:
          Saved = other.Saved.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskEvent Clone() {
      return new UserTaskEvent(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    /// the time the event occurred.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "task_executed" field.</summary>
    public const int TaskExecutedFieldNumber = 2;
    /// <summary>
    /// Denotes that a TaskRun was scheduled via a trigger.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted TaskExecuted {
      get { return eventCase_ == EventOneofCase.TaskExecuted ? (global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.TaskExecuted;
      }
    }

    /// <summary>Field number for the "assigned" field.</summary>
    public const int AssignedFieldNumber = 3;
    /// <summary>
    /// Denotes that the UserTaskRun was assigned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned Assigned {
      get { return eventCase_ == EventOneofCase.Assigned ? (global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Assigned;
      }
    }

    /// <summary>Field number for the "cancelled" field.</summary>
    public const int CancelledFieldNumber = 4;
    /// <summary>
    /// Denotes that the UserTaskRun was cancelled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled Cancelled {
      get { return eventCase_ == EventOneofCase.Cancelled ? (global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Cancelled;
      }
    }

    /// <summary>Field number for the "saved" field.</summary>
    public const int SavedFieldNumber = 5;
    /// <summary>
    /// Denotes that the `UserTaskRun` was saved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved Saved {
      get { return eventCase_ == EventOneofCase.Saved ? (global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.Saved;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      TaskExecuted = 2,
      Assigned = 3,
      Cancelled = 4,
      Saved = 5,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(TaskExecuted, other.TaskExecuted)) return false;
      if (!object.Equals(Assigned, other.Assigned)) return false;
      if (!object.Equals(Cancelled, other.Cancelled)) return false;
      if (!object.Equals(Saved, other.Saved)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (time_ != null) hash ^= Time.GetHashCode();
      if (eventCase_ == EventOneofCase.TaskExecuted) hash ^= TaskExecuted.GetHashCode();
      if (eventCase_ == EventOneofCase.Assigned) hash ^= Assigned.GetHashCode();
      if (eventCase_ == EventOneofCase.Cancelled) hash ^= Cancelled.GetHashCode();
      if (eventCase_ == EventOneofCase.Saved) hash ^= Saved.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (time_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (eventCase_ == EventOneofCase.TaskExecuted) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskExecuted);
      }
      if (eventCase_ == EventOneofCase.Assigned) {
        output.WriteRawTag(26);
        output.WriteMessage(Assigned);
      }
      if (eventCase_ == EventOneofCase.Cancelled) {
        output.WriteRawTag(34);
        output.WriteMessage(Cancelled);
      }
      if (eventCase_ == EventOneofCase.Saved) {
        output.WriteRawTag(42);
        output.WriteMessage(Saved);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (time_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Time);
      }
      if (eventCase_ == EventOneofCase.TaskExecuted) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskExecuted);
      }
      if (eventCase_ == EventOneofCase.Assigned) {
        output.WriteRawTag(26);
        output.WriteMessage(Assigned);
      }
      if (eventCase_ == EventOneofCase.Cancelled) {
        output.WriteRawTag(34);
        output.WriteMessage(Cancelled);
      }
      if (eventCase_ == EventOneofCase.Saved) {
        output.WriteRawTag(42);
        output.WriteMessage(Saved);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (eventCase_ == EventOneofCase.TaskExecuted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskExecuted);
      }
      if (eventCase_ == EventOneofCase.Assigned) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Assigned);
      }
      if (eventCase_ == EventOneofCase.Cancelled) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cancelled);
      }
      if (eventCase_ == EventOneofCase.Saved) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Saved);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskEvent other) {
      if (other == null) {
        return;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      switch (other.EventCase) {
        case EventOneofCase.TaskExecuted:
          if (TaskExecuted == null) {
            TaskExecuted = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted();
          }
          TaskExecuted.MergeFrom(other.TaskExecuted);
          break;
        case EventOneofCase.Assigned:
          if (Assigned == null) {
            Assigned = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned();
          }
          Assigned.MergeFrom(other.Assigned);
          break;
        case EventOneofCase.Cancelled:
          if (Cancelled == null) {
            Cancelled = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled();
          }
          Cancelled.MergeFrom(other.Cancelled);
          break;
        case EventOneofCase.Saved:
          if (Saved == null) {
            Saved = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved();
          }
          Saved.MergeFrom(other.Saved);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted();
            if (eventCase_ == EventOneofCase.TaskExecuted) {
              subBuilder.MergeFrom(TaskExecuted);
            }
            input.ReadMessage(subBuilder);
            TaskExecuted = subBuilder;
            break;
          }
          case 26: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned();
            if (eventCase_ == EventOneofCase.Assigned) {
              subBuilder.MergeFrom(Assigned);
            }
            input.ReadMessage(subBuilder);
            Assigned = subBuilder;
            break;
          }
          case 34: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled();
            if (eventCase_ == EventOneofCase.Cancelled) {
              subBuilder.MergeFrom(Cancelled);
            }
            input.ReadMessage(subBuilder);
            Cancelled = subBuilder;
            break;
          }
          case 42: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved();
            if (eventCase_ == EventOneofCase.Saved) {
              subBuilder.MergeFrom(Saved);
            }
            input.ReadMessage(subBuilder);
            Saved = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 18: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTETaskExecuted();
            if (eventCase_ == EventOneofCase.TaskExecuted) {
              subBuilder.MergeFrom(TaskExecuted);
            }
            input.ReadMessage(subBuilder);
            TaskExecuted = subBuilder;
            break;
          }
          case 26: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTEAssigned();
            if (eventCase_ == EventOneofCase.Assigned) {
              subBuilder.MergeFrom(Assigned);
            }
            input.ReadMessage(subBuilder);
            Assigned = subBuilder;
            break;
          }
          case 34: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTECancelled();
            if (eventCase_ == EventOneofCase.Cancelled) {
              subBuilder.MergeFrom(Cancelled);
            }
            input.ReadMessage(subBuilder);
            Cancelled = subBuilder;
            break;
          }
          case 42: {
            global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved subBuilder = new global::LittleHorse.Common.Proto.UserTaskEvent.Types.UTESaved();
            if (eventCase_ == EventOneofCase.Saved) {
              subBuilder.MergeFrom(Saved);
            }
            input.ReadMessage(subBuilder);
            Saved = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserTaskEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Empty message used to denote that the `UserTaskRun` was cancelled.
      /// </summary>
      public sealed partial class UTECancelled : pb::IMessage<UTECancelled>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UTECancelled> _parser = new pb::MessageParser<UTECancelled>(() => new UTECancelled());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UTECancelled> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.UserTaskEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTECancelled() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTECancelled(UTECancelled other) : this() {
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTECancelled Clone() {
          return new UTECancelled(this);
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 1;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UTECancelled);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UTECancelled other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Message.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UTECancelled other) {
          if (other == null) {
            return;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message to denote that a `TaskRun` was scheduled by a trigger for this UserTaskRun.
      /// </summary>
      public sealed partial class UTETaskExecuted : pb::IMessage<UTETaskExecuted>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UTETaskExecuted> _parser = new pb::MessageParser<UTETaskExecuted>(() => new UTETaskExecuted());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UTETaskExecuted> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.UserTaskEvent.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTETaskExecuted() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTETaskExecuted(UTETaskExecuted other) : this() {
          taskRun_ = other.taskRun_ != null ? other.taskRun_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTETaskExecuted Clone() {
          return new UTETaskExecuted(this);
        }

        /// <summary>Field number for the "task_run" field.</summary>
        public const int TaskRunFieldNumber = 1;
        private global::LittleHorse.Common.Proto.TaskRunId taskRun_;
        /// <summary>
        /// The `TaskRunId` of the scheduled `TaskRun`
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::LittleHorse.Common.Proto.TaskRunId TaskRun {
          get { return taskRun_; }
          set {
            taskRun_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UTETaskExecuted);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UTETaskExecuted other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(TaskRun, other.TaskRun)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (taskRun_ != null) hash ^= TaskRun.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (taskRun_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TaskRun);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (taskRun_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(TaskRun);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (taskRun_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskRun);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UTETaskExecuted other) {
          if (other == null) {
            return;
          }
          if (other.taskRun_ != null) {
            if (taskRun_ == null) {
              TaskRun = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            TaskRun.MergeFrom(other.TaskRun);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (taskRun_ == null) {
                  TaskRun = new global::LittleHorse.Common.Proto.TaskRunId();
                }
                input.ReadMessage(TaskRun);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (taskRun_ == null) {
                  TaskRun = new global::LittleHorse.Common.Proto.TaskRunId();
                }
                input.ReadMessage(TaskRun);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message to denote that the `UserTaskRun` was saved.
      /// </summary>
      public sealed partial class UTESaved : pb::IMessage<UTESaved>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UTESaved> _parser = new pb::MessageParser<UTESaved>(() => new UTESaved());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UTESaved> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.UserTaskEvent.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTESaved() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTESaved(UTESaved other) : this() {
          userId_ = other.userId_;
          results_ = other.results_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTESaved Clone() {
          return new UTESaved(this);
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 1;
        private string userId_ = "";
        /// <summary>
        /// The user_id of the user who saved the UserTaskRun.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string UserId {
          get { return userId_; }
          set {
            userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "results" field.</summary>
        public const int ResultsFieldNumber = 2;
        private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_results_codec
            = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 18);
        private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> results_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
        /// <summary>
        /// The results that were saved.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Results {
          get { return results_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UTESaved);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UTESaved other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (!Results.Equals(other.Results)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (UserId.Length != 0) hash ^= UserId.GetHashCode();
          hash ^= Results.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          results_.WriteTo(output, _map_results_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (UserId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(UserId);
          }
          results_.WriteTo(ref output, _map_results_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (UserId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
          }
          size += results_.CalculateSize(_map_results_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UTESaved other) {
          if (other == null) {
            return;
          }
          if (other.UserId.Length != 0) {
            UserId = other.UserId;
          }
          results_.MergeFrom(other.results_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 18: {
                results_.AddEntriesFrom(input, _map_results_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                UserId = input.ReadString();
                break;
              }
              case 18: {
                results_.AddEntriesFrom(ref input, _map_results_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Message denoting that the UserTaskRun was assigned.
      /// </summary>
      public sealed partial class UTEAssigned : pb::IMessage<UTEAssigned>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UTEAssigned> _parser = new pb::MessageParser<UTEAssigned>(() => new UTEAssigned());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UTEAssigned> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::LittleHorse.Common.Proto.UserTaskEvent.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTEAssigned() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTEAssigned(UTEAssigned other) : this() {
          oldUserId_ = other.oldUserId_;
          oldUserGroup_ = other.oldUserGroup_;
          newUserId_ = other.newUserId_;
          newUserGroup_ = other.newUserGroup_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UTEAssigned Clone() {
          return new UTEAssigned(this);
        }

        /// <summary>Field number for the "old_user_id" field.</summary>
        public const int OldUserIdFieldNumber = 1;
        private readonly static string OldUserIdDefaultValue = "";

        private string oldUserId_;
        /// <summary>
        /// The user_id before the ownership change, if set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OldUserId {
          get { return oldUserId_ ?? OldUserIdDefaultValue; }
          set {
            oldUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "old_user_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOldUserId {
          get { return oldUserId_ != null; }
        }
        /// <summary>Clears the value of the "old_user_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOldUserId() {
          oldUserId_ = null;
        }

        /// <summary>Field number for the "old_user_group" field.</summary>
        public const int OldUserGroupFieldNumber = 2;
        private readonly static string OldUserGroupDefaultValue = "";

        private string oldUserGroup_;
        /// <summary>
        /// The user_group before the ownership change, if set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string OldUserGroup {
          get { return oldUserGroup_ ?? OldUserGroupDefaultValue; }
          set {
            oldUserGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "old_user_group" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasOldUserGroup {
          get { return oldUserGroup_ != null; }
        }
        /// <summary>Clears the value of the "old_user_group" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearOldUserGroup() {
          oldUserGroup_ = null;
        }

        /// <summary>Field number for the "new_user_id" field.</summary>
        public const int NewUserIdFieldNumber = 3;
        private readonly static string NewUserIdDefaultValue = "";

        private string newUserId_;
        /// <summary>
        /// The user_id after the ownership change, if set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NewUserId {
          get { return newUserId_ ?? NewUserIdDefaultValue; }
          set {
            newUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "new_user_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNewUserId {
          get { return newUserId_ != null; }
        }
        /// <summary>Clears the value of the "new_user_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNewUserId() {
          newUserId_ = null;
        }

        /// <summary>Field number for the "new_user_group" field.</summary>
        public const int NewUserGroupFieldNumber = 4;
        private readonly static string NewUserGroupDefaultValue = "";

        private string newUserGroup_;
        /// <summary>
        /// The user_group after the ownership change, if set.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string NewUserGroup {
          get { return newUserGroup_ ?? NewUserGroupDefaultValue; }
          set {
            newUserGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "new_user_group" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasNewUserGroup {
          get { return newUserGroup_ != null; }
        }
        /// <summary>Clears the value of the "new_user_group" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearNewUserGroup() {
          newUserGroup_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UTEAssigned);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UTEAssigned other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OldUserId != other.OldUserId) return false;
          if (OldUserGroup != other.OldUserGroup) return false;
          if (NewUserId != other.NewUserId) return false;
          if (NewUserGroup != other.NewUserGroup) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasOldUserId) hash ^= OldUserId.GetHashCode();
          if (HasOldUserGroup) hash ^= OldUserGroup.GetHashCode();
          if (HasNewUserId) hash ^= NewUserId.GetHashCode();
          if (HasNewUserGroup) hash ^= NewUserGroup.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasOldUserId) {
            output.WriteRawTag(10);
            output.WriteString(OldUserId);
          }
          if (HasOldUserGroup) {
            output.WriteRawTag(18);
            output.WriteString(OldUserGroup);
          }
          if (HasNewUserId) {
            output.WriteRawTag(26);
            output.WriteString(NewUserId);
          }
          if (HasNewUserGroup) {
            output.WriteRawTag(34);
            output.WriteString(NewUserGroup);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasOldUserId) {
            output.WriteRawTag(10);
            output.WriteString(OldUserId);
          }
          if (HasOldUserGroup) {
            output.WriteRawTag(18);
            output.WriteString(OldUserGroup);
          }
          if (HasNewUserId) {
            output.WriteRawTag(26);
            output.WriteString(NewUserId);
          }
          if (HasNewUserGroup) {
            output.WriteRawTag(34);
            output.WriteString(NewUserGroup);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasOldUserId) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OldUserId);
          }
          if (HasOldUserGroup) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(OldUserGroup);
          }
          if (HasNewUserId) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NewUserId);
          }
          if (HasNewUserGroup) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(NewUserGroup);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UTEAssigned other) {
          if (other == null) {
            return;
          }
          if (other.HasOldUserId) {
            OldUserId = other.OldUserId;
          }
          if (other.HasOldUserGroup) {
            OldUserGroup = other.OldUserGroup;
          }
          if (other.HasNewUserId) {
            NewUserId = other.NewUserId;
          }
          if (other.HasNewUserGroup) {
            NewUserGroup = other.NewUserGroup;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                OldUserId = input.ReadString();
                break;
              }
              case 18: {
                OldUserGroup = input.ReadString();
                break;
              }
              case 26: {
                NewUserId = input.ReadString();
                break;
              }
              case 34: {
                NewUserGroup = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                OldUserId = input.ReadString();
                break;
              }
              case 18: {
                OldUserGroup = input.ReadString();
                break;
              }
              case 26: {
                NewUserId = input.ReadString();
                break;
              }
              case 34: {
                NewUserGroup = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
