// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: acls.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LittleHorse.Common.Proto {

  /// <summary>Holder for reflection information generated from acls.proto</summary>
  public static partial class AclsReflection {

    #region Descriptor
    /// <summary>File descriptor for acls.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AclsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgphY2xzLnByb3RvEgtsaXR0bGVob3JzZRofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90bxoPb2JqZWN0X2lkLnByb3RvIqICCglQcmluY2lwYWwS",
            "JAoCaWQYASABKAsyGC5saXR0bGVob3JzZS5QcmluY2lwYWxJZBIuCgpjcmVh",
            "dGVkX2F0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJCCg9w",
            "ZXJfdGVuYW50X2FjbHMYAyADKAsyKS5saXR0bGVob3JzZS5QcmluY2lwYWwu",
            "UGVyVGVuYW50QWNsc0VudHJ5EiwKC2dsb2JhbF9hY2xzGAQgASgLMhcubGl0",
            "dGxlaG9yc2UuU2VydmVyQUNMcxpNChJQZXJUZW5hbnRBY2xzRW50cnkSCwoD",
            "a2V5GAEgASgJEiYKBXZhbHVlGAIgASgLMhcubGl0dGxlaG9yc2UuU2VydmVy",
            "QUNMczoCOAEiWwoGVGVuYW50EiEKAmlkGAEgASgLMhUubGl0dGxlaG9yc2Uu",
            "VGVuYW50SWQSLgoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAiMgoKU2VydmVyQUNMcxIkCgRhY2xzGAEgAygLMhYubGl0",
            "dGxlaG9yc2UuU2VydmVyQUNMIp4BCglTZXJ2ZXJBQ0wSKwoJcmVzb3VyY2Vz",
            "GAEgAygOMhgubGl0dGxlaG9yc2UuQUNMUmVzb3VyY2USLwoPYWxsb3dlZF9h",
            "Y3Rpb25zGAIgAygOMhYubGl0dGxlaG9yc2UuQUNMQWN0aW9uEg4KBG5hbWUY",
            "AyABKAlIABIQCgZwcmVmaXgYBCABKAlIAEIRCg9yZXNvdXJjZV9maWx0ZXIi",
            "/wEKE1B1dFByaW5jaXBhbFJlcXVlc3QSCgoCaWQYASABKAkSTAoPcGVyX3Rl",
            "bmFudF9hY2xzGAIgAygLMjMubGl0dGxlaG9yc2UuUHV0UHJpbmNpcGFsUmVx",
            "dWVzdC5QZXJUZW5hbnRBY2xzRW50cnkSLAoLZ2xvYmFsX2FjbHMYAyABKAsy",
            "Fy5saXR0bGVob3JzZS5TZXJ2ZXJBQ0xzEhEKCW92ZXJ3cml0ZRgFIAEoCBpN",
            "ChJQZXJUZW5hbnRBY2xzRW50cnkSCwoDa2V5GAEgASgJEiYKBXZhbHVlGAIg",
            "ASgLMhcubGl0dGxlaG9yc2UuU2VydmVyQUNMczoCOAEiPgoWRGVsZXRlUHJp",
            "bmNpcGFsUmVxdWVzdBIkCgJpZBgBIAEoCzIYLmxpdHRsZWhvcnNlLlByaW5j",
            "aXBhbElkIh4KEFB1dFRlbmFudFJlcXVlc3QSCgoCaWQYASABKAkqrQEKC0FD",
            "TFJlc291cmNlEhAKDEFDTF9XT1JLRkxPVxAAEgwKCEFDTF9UQVNLEAESFgoS",
            "QUNMX0VYVEVSTkFMX0VWRU5UEAISEQoNQUNMX1VTRVJfVEFTSxADEhEKDUFD",
            "TF9QUklOQ0lQQUwQBBIOCgpBQ0xfVEVOQU5UEAUSFQoRQUNMX0FMTF9SRVNP",
            "VVJDRVMQBhIZChVBQ0xfVEFTS19XT1JLRVJfR1JPVVAQBypDCglBQ0xBY3Rp",
            "b24SCAoEUkVBRBAAEgcKA1JVThABEhIKDldSSVRFX01FVEFEQVRBEAISDwoL",
            "QUxMX0FDVElPTlMQA0JJCh9pby5saXR0bGVob3JzZS5zZGsuY29tbW9uLnBy",
            "b3RvUAFaCS47bGhwcm90b6oCGExpdHRsZUhvcnNlLkNvbW1vbi5Qcm90b2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::LittleHorse.Common.Proto.ObjectIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LittleHorse.Common.Proto.ACLResource), typeof(global::LittleHorse.Common.Proto.ACLAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.Principal), global::LittleHorse.Common.Proto.Principal.Parser, new[]{ "Id", "CreatedAt", "PerTenantAcls", "GlobalAcls" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.Tenant), global::LittleHorse.Common.Proto.Tenant.Parser, new[]{ "Id", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ServerACLs), global::LittleHorse.Common.Proto.ServerACLs.Parser, new[]{ "Acls" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ServerACL), global::LittleHorse.Common.Proto.ServerACL.Parser, new[]{ "Resources", "AllowedActions", "Name", "Prefix" }, new[]{ "ResourceFilter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutPrincipalRequest), global::LittleHorse.Common.Proto.PutPrincipalRequest.Parser, new[]{ "Id", "PerTenantAcls", "GlobalAcls", "Overwrite" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeletePrincipalRequest), global::LittleHorse.Common.Proto.DeletePrincipalRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutTenantRequest), global::LittleHorse.Common.Proto.PutTenantRequest.Parser, new[]{ "Id" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Defines a resource type for ACL's.
  /// </summary>
  public enum ACLResource {
    /// <summary>
    /// Refers to `WfSpec` and `WfRun`
    /// </summary>
    [pbr::OriginalName("ACL_WORKFLOW")] AclWorkflow = 0,
    /// <summary>
    /// Refers to `TaskDef` and `TaskRun`
    /// </summary>
    [pbr::OriginalName("ACL_TASK")] AclTask = 1,
    /// <summary>
    /// Refers to `ExternalEventDef` and `ExternalEvent`
    /// </summary>
    [pbr::OriginalName("ACL_EXTERNAL_EVENT")] AclExternalEvent = 2,
    /// <summary>
    /// Refers to `UserTaskDef` and `UserTaskRun`
    /// </summary>
    [pbr::OriginalName("ACL_USER_TASK")] AclUserTask = 3,
    /// <summary>
    /// Refers to the `Principal` resource. Currently, the `ACL_PRINCIPAL` permission is only
    /// valid in the `global_acls` field of the `Principal`. A `Principal` who only has access
    /// to a specific Tenant cannot create othe Principals because a Principal is scoped
    /// to the Cluster, and not to a Tenant.
    /// </summary>
    [pbr::OriginalName("ACL_PRINCIPAL")] AclPrincipal = 4,
    /// <summary>
    /// Refers to the `Tenant` resource. The `ACL_TENANT` permission is only valid in the
    /// `global_acls` field of the `Principal`. This is because the `Tenant` resource is
    /// cluste-rscoped.
    /// </summary>
    [pbr::OriginalName("ACL_TENANT")] AclTenant = 5,
    /// <summary>
    /// Refers to all resources. In the `global_acls` field, this includes `Principal` and `Tenant`
    /// resources. In the `per_tenant_acls` field, this does not include `Principal` and `Tenant` since
    /// those are cluster-scoped resources.
    /// </summary>
    [pbr::OriginalName("ACL_ALL_RESOURCES")] AclAllResources = 6,
    /// <summary>
    /// Refers to the `TaskWorkerGroup` associated with a TaskDef
    /// </summary>
    [pbr::OriginalName("ACL_TASK_WORKER_GROUP")] AclTaskWorkerGroup = 7,
  }

  /// <summary>
  /// Describes an Action that can be taken over a specific set of resources.
  /// </summary>
  public enum ACLAction {
    /// <summary>
    /// Allows all RPC's that start with `Get`, `List`, and `Search` in relation to the
    /// metadata (eg. `TaskDef` for `ACL_TASK`) or run data (eg. `TaskRun` for `ACL_TASK`)
    /// </summary>
    [pbr::OriginalName("READ")] Read = 0,
    /// <summary>
    /// Allows RPC's that are needed for mutating the _runs_ of the resource. For
    /// example, `RUN` over `ACL_TASK` allows the `ReportTask` and `PollTask` RPC's,
    /// and `RUN` over `ACL_WORKFLOW` allows the `RunWf`, `DeleteWfRun`, `StopWfRun`,
    /// and `ResumeWfRun` RPC's.
    /// </summary>
    [pbr::OriginalName("RUN")] Run = 1,
    /// <summary>
    /// Allows mutating metadata. For example, `WRITE_METADATA` over `ACL_WORKFLOW` allows
    /// mutating `WfSpec`s, and `WRITE_METADATA` over `ACL_TASK` allows mutating `TaskDef`s.
    /// </summary>
    [pbr::OriginalName("WRITE_METADATA")] WriteMetadata = 2,
    /// <summary>
    /// Allows all actions related to a resource.
    /// </summary>
    [pbr::OriginalName("ALL_ACTIONS")] AllActions = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A Principal represents the identity of a client of LittleHorse, whether human or
  /// machine. The ACL's on the Principal control what actions the client is allowed
  /// to take.
  ///
  /// A Principal is not scoped to a Tenant; rather, a Principal is scoped to the Cluster
  /// and may have access to one or more Tenants.
  /// </summary>
  public sealed partial class Principal : pb::IMessage<Principal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Principal> _parser = new pb::MessageParser<Principal>(() => new Principal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Principal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Principal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Principal(Principal other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      perTenantAcls_ = other.perTenantAcls_.Clone();
      globalAcls_ = other.globalAcls_ != null ? other.globalAcls_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Principal Clone() {
      return new Principal(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.PrincipalId id_;
    /// <summary>
    /// The ID of the Principal. In OAuth for human users, this is the user_id. In
    /// OAuth for machine clients, this is the Client ID.
    ///
    /// mTLS for Principal identification is not yet implemented.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.PrincipalId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// The time at which the Principal was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "per_tenant_acls" field.</summary>
    public const int PerTenantAclsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>.Codec _map_perTenantAcls_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ServerACLs.Parser), 26);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs> perTenantAcls_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>();
    /// <summary>
    /// Maps a Tenant ID to a list of ACL's that the Principal has permission to
    /// execute *within that Tenant*.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs> PerTenantAcls {
      get { return perTenantAcls_; }
    }

    /// <summary>Field number for the "global_acls" field.</summary>
    public const int GlobalAclsFieldNumber = 4;
    private global::LittleHorse.Common.Proto.ServerACLs globalAcls_;
    /// <summary>
    /// Sets permissions that this Principal has *for any Tenant* in the LH Cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ServerACLs GlobalAcls {
      get { return globalAcls_; }
      set {
        globalAcls_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Principal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Principal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!PerTenantAcls.Equals(other.PerTenantAcls)) return false;
      if (!object.Equals(GlobalAcls, other.GlobalAcls)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      hash ^= PerTenantAcls.GetHashCode();
      if (globalAcls_ != null) hash ^= GlobalAcls.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      perTenantAcls_.WriteTo(output, _map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GlobalAcls);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      perTenantAcls_.WriteTo(ref output, _map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GlobalAcls);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      size += perTenantAcls_.CalculateSize(_map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalAcls);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Principal other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.PrincipalId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      perTenantAcls_.MergeFrom(other.perTenantAcls_);
      if (other.globalAcls_ != null) {
        if (globalAcls_ == null) {
          GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
        }
        GlobalAcls.MergeFrom(other.GlobalAcls);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.PrincipalId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            perTenantAcls_.AddEntriesFrom(input, _map_perTenantAcls_codec);
            break;
          }
          case 34: {
            if (globalAcls_ == null) {
              GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
            }
            input.ReadMessage(GlobalAcls);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.PrincipalId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            perTenantAcls_.AddEntriesFrom(ref input, _map_perTenantAcls_codec);
            break;
          }
          case 34: {
            if (globalAcls_ == null) {
              GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
            }
            input.ReadMessage(GlobalAcls);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Tenant is a logically isolated environment within LittleHorse. All workflows and
  /// associated data (WfSpec, WfRun, TaskDef, TaskRun, NodeRun, etc) are scoped to within
  /// a Tenant.
  ///
  /// Future versions will include quotas on a per-Tenant basis.
  /// </summary>
  public sealed partial class Tenant : pb::IMessage<Tenant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tenant> _parser = new pb::MessageParser<Tenant>(() => new Tenant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Tenant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tenant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tenant(Tenant other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Tenant Clone() {
      return new Tenant(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TenantId id_;
    /// <summary>
    /// The ID of the Tenant.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TenantId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// The time at which the Tenant was created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Tenant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Tenant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Tenant other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.TenantId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TenantId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TenantId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of ACL's for LittleHorse
  /// </summary>
  public sealed partial class ServerACLs : pb::IMessage<ServerACLs>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerACLs> _parser = new pb::MessageParser<ServerACLs>(() => new ServerACLs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerACLs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACLs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACLs(ServerACLs other) : this() {
      acls_ = other.acls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACLs Clone() {
      return new ServerACLs(this);
    }

    /// <summary>Field number for the "acls" field.</summary>
    public const int AclsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ServerACL> _repeated_acls_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.ServerACL.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ServerACL> acls_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ServerACL>();
    /// <summary>
    /// The associated ACL's
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ServerACL> Acls {
      get { return acls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerACLs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerACLs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!acls_.Equals(other.acls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= acls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      acls_.WriteTo(output, _repeated_acls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      acls_.WriteTo(ref output, _repeated_acls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += acls_.CalculateSize(_repeated_acls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerACLs other) {
      if (other == null) {
        return;
      }
      acls_.Add(other.acls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            acls_.AddEntriesFrom(input, _repeated_acls_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            acls_.AddEntriesFrom(ref input, _repeated_acls_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a specific set of permissions over a specific set of objects
  /// in a Tenant. This is a *positive* permission.
  /// </summary>
  public sealed partial class ServerACL : pb::IMessage<ServerACL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerACL> _parser = new pb::MessageParser<ServerACL>(() => new ServerACL());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerACL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACL(ServerACL other) : this() {
      resources_ = other.resources_.Clone();
      allowedActions_ = other.allowedActions_.Clone();
      switch (other.ResourceFilterCase) {
        case ResourceFilterOneofCase.Name:
          Name = other.Name;
          break;
        case ResourceFilterOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerACL Clone() {
      return new ServerACL(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ACLResource> _repeated_resources_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::LittleHorse.Common.Proto.ACLResource) x);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLResource> resources_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLResource>();
    /// <summary>
    /// The resource types over which permission is granted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLResource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "allowed_actions" field.</summary>
    public const int AllowedActionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ACLAction> _repeated_allowedActions_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::LittleHorse.Common.Proto.ACLAction) x);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLAction> allowedActions_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLAction>();
    /// <summary>
    /// The actions that are permitted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ACLAction> AllowedActions {
      get { return allowedActions_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    /// <summary>
    /// If set, then only the resources with this exact name are allowed. For example,
    /// the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
    /// allows a Task Worker to only execute the `my-task` TaskDef.
    ///
    /// If `name` and `prefix` are unset, then the ACL applies to all resources of the
    /// specified types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return HasName ? (string) resourceFilter_ : ""; }
      set {
        resourceFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resourceFilterCase_ = ResourceFilterOneofCase.Name;
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return resourceFilterCase_ == ResourceFilterOneofCase.Name; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      if (HasName) {
        ClearResourceFilter();
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 4;
    /// <summary>
    /// If set, then only the resources whose names match this prefix are allowed.
    ///
    /// If `name` and `prefix` are unset, then the ACL applies to all resources of the
    /// specified types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return HasPrefix ? (string) resourceFilter_ : ""; }
      set {
        resourceFilter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        resourceFilterCase_ = ResourceFilterOneofCase.Prefix;
      }
    }
    /// <summary>Gets whether the "prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrefix {
      get { return resourceFilterCase_ == ResourceFilterOneofCase.Prefix; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "prefix" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrefix() {
      if (HasPrefix) {
        ClearResourceFilter();
      }
    }

    private object resourceFilter_;
    /// <summary>Enum of possible cases for the "resource_filter" oneof.</summary>
    public enum ResourceFilterOneofCase {
      None = 0,
      Name = 3,
      Prefix = 4,
    }
    private ResourceFilterOneofCase resourceFilterCase_ = ResourceFilterOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResourceFilterOneofCase ResourceFilterCase {
      get { return resourceFilterCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResourceFilter() {
      resourceFilterCase_ = ResourceFilterOneofCase.None;
      resourceFilter_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerACL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerACL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      if(!allowedActions_.Equals(other.allowedActions_)) return false;
      if (Name != other.Name) return false;
      if (Prefix != other.Prefix) return false;
      if (ResourceFilterCase != other.ResourceFilterCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      hash ^= allowedActions_.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasPrefix) hash ^= Prefix.GetHashCode();
      hash ^= (int) resourceFilterCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resources_.WriteTo(output, _repeated_resources_codec);
      allowedActions_.WriteTo(output, _repeated_allowedActions_codec);
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasPrefix) {
        output.WriteRawTag(34);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resources_.WriteTo(ref output, _repeated_resources_codec);
      allowedActions_.WriteTo(ref output, _repeated_allowedActions_codec);
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasPrefix) {
        output.WriteRawTag(34);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      size += allowedActions_.CalculateSize(_repeated_allowedActions_codec);
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerACL other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      allowedActions_.Add(other.allowedActions_);
      switch (other.ResourceFilterCase) {
        case ResourceFilterOneofCase.Name:
          Name = other.Name;
          break;
        case ResourceFilterOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 18:
          case 16: {
            allowedActions_.AddEntriesFrom(input, _repeated_allowedActions_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
          case 18:
          case 16: {
            allowedActions_.AddEntriesFrom(ref input, _repeated_allowedActions_codec);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Creates or updates a Principal. If this request would remove admin privileges from the
  /// last admin principal (i.e. `ALL_ACTIONS` over `ACL_ALL_RESOURCES` in the `global_acls`),
  /// then the RPC throws `FAILED_PRECONDITION`.
  /// </summary>
  public sealed partial class PutPrincipalRequest : pb::IMessage<PutPrincipalRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutPrincipalRequest> _parser = new pb::MessageParser<PutPrincipalRequest>(() => new PutPrincipalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutPrincipalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutPrincipalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutPrincipalRequest(PutPrincipalRequest other) : this() {
      id_ = other.id_;
      perTenantAcls_ = other.perTenantAcls_.Clone();
      globalAcls_ = other.globalAcls_ != null ? other.globalAcls_.Clone() : null;
      overwrite_ = other.overwrite_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutPrincipalRequest Clone() {
      return new PutPrincipalRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The ID of the Principal that we are creating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "per_tenant_acls" field.</summary>
    public const int PerTenantAclsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>.Codec _map_perTenantAcls_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ServerACLs.Parser), 18);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs> perTenantAcls_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs>();
    /// <summary>
    /// The per-tenant ACL's for the Principal
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.ServerACLs> PerTenantAcls {
      get { return perTenantAcls_; }
    }

    /// <summary>Field number for the "global_acls" field.</summary>
    public const int GlobalAclsFieldNumber = 3;
    private global::LittleHorse.Common.Proto.ServerACLs globalAcls_;
    /// <summary>
    /// The ACL's for the principal in all tenants
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ServerACLs GlobalAcls {
      get { return globalAcls_; }
      set {
        globalAcls_ = value;
      }
    }

    /// <summary>Field number for the "overwrite" field.</summary>
    public const int OverwriteFieldNumber = 5;
    private bool overwrite_;
    /// <summary>
    /// If this is set to false and a `Principal` with the same `id` already exists *and*
    /// has different ACL's configured, then the RPC throws `ALREADY_EXISTS`.
    ///
    /// If this is set to `true`, then the RPC will override hte
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Overwrite {
      get { return overwrite_; }
      set {
        overwrite_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutPrincipalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutPrincipalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!PerTenantAcls.Equals(other.PerTenantAcls)) return false;
      if (!object.Equals(GlobalAcls, other.GlobalAcls)) return false;
      if (Overwrite != other.Overwrite) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= PerTenantAcls.GetHashCode();
      if (globalAcls_ != null) hash ^= GlobalAcls.GetHashCode();
      if (Overwrite != false) hash ^= Overwrite.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      perTenantAcls_.WriteTo(output, _map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GlobalAcls);
      }
      if (Overwrite != false) {
        output.WriteRawTag(40);
        output.WriteBool(Overwrite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      perTenantAcls_.WriteTo(ref output, _map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GlobalAcls);
      }
      if (Overwrite != false) {
        output.WriteRawTag(40);
        output.WriteBool(Overwrite);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += perTenantAcls_.CalculateSize(_map_perTenantAcls_codec);
      if (globalAcls_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalAcls);
      }
      if (Overwrite != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutPrincipalRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      perTenantAcls_.MergeFrom(other.perTenantAcls_);
      if (other.globalAcls_ != null) {
        if (globalAcls_ == null) {
          GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
        }
        GlobalAcls.MergeFrom(other.GlobalAcls);
      }
      if (other.Overwrite != false) {
        Overwrite = other.Overwrite;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            perTenantAcls_.AddEntriesFrom(input, _map_perTenantAcls_codec);
            break;
          }
          case 26: {
            if (globalAcls_ == null) {
              GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
            }
            input.ReadMessage(GlobalAcls);
            break;
          }
          case 40: {
            Overwrite = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            perTenantAcls_.AddEntriesFrom(ref input, _map_perTenantAcls_codec);
            break;
          }
          case 26: {
            if (globalAcls_ == null) {
              GlobalAcls = new global::LittleHorse.Common.Proto.ServerACLs();
            }
            input.ReadMessage(GlobalAcls);
            break;
          }
          case 40: {
            Overwrite = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes a `Principal`. Fails with `FAILED_PRECONDITION` if the specified `Principal` is the last
  /// admin `Principal`.
  /// </summary>
  public sealed partial class DeletePrincipalRequest : pb::IMessage<DeletePrincipalRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeletePrincipalRequest> _parser = new pb::MessageParser<DeletePrincipalRequest>(() => new DeletePrincipalRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeletePrincipalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeletePrincipalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeletePrincipalRequest(DeletePrincipalRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeletePrincipalRequest Clone() {
      return new DeletePrincipalRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.PrincipalId id_;
    /// <summary>
    /// The ID of the `Principal` to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.PrincipalId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeletePrincipalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeletePrincipalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeletePrincipalRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.PrincipalId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.PrincipalId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.PrincipalId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PutTenantRequest : pb::IMessage<PutTenantRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutTenantRequest> _parser = new pb::MessageParser<PutTenantRequest>(() => new PutTenantRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutTenantRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.AclsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTenantRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTenantRequest(PutTenantRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTenantRequest Clone() {
      return new PutTenantRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutTenantRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutTenantRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutTenantRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
