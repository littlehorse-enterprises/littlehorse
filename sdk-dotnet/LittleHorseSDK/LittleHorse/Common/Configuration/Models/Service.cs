// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LittleHorse.Common.Proto {

  /// <summary>Holder for reflection information generated from service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXJ2aWNlLnByb3RvEgtsaXR0bGVob3JzZRofZ29vZ2xlL3Byb3RvYnVm",
            "L3RpbWVzdGFtcC5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "GhNjb21tb25fd2ZzcGVjLnByb3RvGhJjb21tb25fZW51bXMucHJvdG8aD29i",
            "amVjdF9pZC5wcm90bxoOdmFyaWFibGUucHJvdG8aFGV4dGVybmFsX2V2ZW50",
            "LnByb3RvGgx3Zl9ydW4ucHJvdG8aDm5vZGVfcnVuLnByb3RvGg50YXNrX3J1",
            "bi5wcm90bxoQdXNlcl90YXNrcy5wcm90bxoNd2Zfc3BlYy5wcm90bxoOdGFz",
            "a19kZWYucHJvdG8aCmFjbHMucHJvdG8aFHdvcmtmbG93X2V2ZW50LnByb3Rv",
            "GhZzY2hlZHVsZWRfd2ZfcnVuLnByb3RvIisKG0dldExhdGVzdFVzZXJUYXNr",
            "RGVmUmVxdWVzdBIMCgRuYW1lGAEgASgJItMDChBQdXRXZlNwZWNSZXF1ZXN0",
            "EgwKBG5hbWUYASABKAkSRAoMdGhyZWFkX3NwZWNzGAUgAygLMi4ubGl0dGxl",
            "aG9yc2UuUHV0V2ZTcGVjUmVxdWVzdC5UaHJlYWRTcGVjc0VudHJ5Eh4KFmVu",
            "dHJ5cG9pbnRfdGhyZWFkX25hbWUYBiABKAkSQwoQcmV0ZW50aW9uX3BvbGlj",
            "eRgIIAEoCzIkLmxpdHRsZWhvcnNlLldvcmtmbG93UmV0ZW50aW9uUG9saWN5",
            "SACIAQESRgoOcGFyZW50X3dmX3NwZWMYCSABKAsyKS5saXR0bGVob3JzZS5X",
            "ZlNwZWMuUGFyZW50V2ZTcGVjUmVmZXJlbmNlSAGIAQESNwoPYWxsb3dlZF91",
            "cGRhdGVzGAogASgOMh4ubGl0dGxlaG9yc2UuQWxsb3dlZFVwZGF0ZVR5cGUa",
            "SwoQVGhyZWFkU3BlY3NFbnRyeRILCgNrZXkYASABKAkSJgoFdmFsdWUYAiAB",
            "KAsyFy5saXR0bGVob3JzZS5UaHJlYWRTcGVjOgI4AUITChFfcmV0ZW50aW9u",
            "X3BvbGljeUIRCg9fcGFyZW50X3dmX3NwZWNKBAgCEANKBAgDEARKBAgEEAUi",
            "nwEKEVB1dFRhc2tEZWZSZXF1ZXN0EgwKBG5hbWUYASABKAkSLAoKaW5wdXRf",
            "dmFycxgCIAMoCzIYLmxpdHRsZWhvcnNlLlZhcmlhYmxlRGVmEjwKDW91dHB1",
            "dF9zY2hlbWEYAyABKAsyIC5saXR0bGVob3JzZS5UYXNrRGVmT3V0cHV0U2No",
            "ZW1hSACIAQFCEAoOX291dHB1dF9zY2hlbWEiUwoaUHV0V29ya2Zsb3dFdmVu",
            "dERlZlJlcXVlc3QSDAoEbmFtZRgBIAEoCRInCgR0eXBlGAIgASgOMhkubGl0",
            "dGxlaG9yc2UuVmFyaWFibGVUeXBlInsKFVB1dFVzZXJUYXNrRGVmUmVxdWVz",
            "dBIMCgRuYW1lGAEgASgJEioKBmZpZWxkcxgCIAMoCzIaLmxpdHRsZWhvcnNl",
            "LlVzZXJUYXNrRmllbGQSGAoLZGVzY3JpcHRpb24YAyABKAlIAIgBAUIOCgxf",
            "ZGVzY3JpcHRpb24ibwoaUHV0RXh0ZXJuYWxFdmVudERlZlJlcXVlc3QSDAoE",
            "bmFtZRgBIAEoCRJDChByZXRlbnRpb25fcG9saWN5GAIgASgLMikubGl0dGxl",
            "aG9yc2UuRXh0ZXJuYWxFdmVudFJldGVudGlvblBvbGljeSLDAgoXUHV0RXh0",
            "ZXJuYWxFdmVudFJlcXVlc3QSJwoJd2ZfcnVuX2lkGAEgASgLMhQubGl0dGxl",
            "aG9yc2UuV2ZSdW5JZBI+ChVleHRlcm5hbF9ldmVudF9kZWZfaWQYAiABKAsy",
            "Hy5saXR0bGVob3JzZS5FeHRlcm5hbEV2ZW50RGVmSWQSEQoEZ3VpZBgDIAEo",
            "CUgAiAEBEisKB2NvbnRlbnQYBSABKAsyGi5saXR0bGVob3JzZS5WYXJpYWJs",
            "ZVZhbHVlEh4KEXRocmVhZF9ydW5fbnVtYmVyGAYgASgFSAGIAQESHgoRbm9k",
            "ZV9ydW5fcG9zaXRpb24YByABKAVIAogBAUIHCgVfZ3VpZEIUChJfdGhyZWFk",
            "X3J1bl9udW1iZXJCFAoSX25vZGVfcnVuX3Bvc2l0aW9uSgQIBBAFSgQICBAJ",
            "IkYKGkRlbGV0ZUV4dGVybmFsRXZlbnRSZXF1ZXN0EigKAmlkGAEgASgLMhwu",
            "bGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVudElkIkgKG0RlbGV0ZVNjaGVkdWxl",
            "ZFdmUnVuUmVxdWVzdBIpCgJpZBgBIAEoCzIdLmxpdHRsZWhvcnNlLlNjaGVk",
            "dWxlZFdmUnVuSWQiNgoSRGVsZXRlV2ZSdW5SZXF1ZXN0EiAKAmlkGAEgASgL",
            "MhQubGl0dGxlaG9yc2UuV2ZSdW5JZCI6ChREZWxldGVUYXNrRGVmUmVxdWVz",
            "dBIiCgJpZBgBIAEoCzIWLmxpdHRsZWhvcnNlLlRhc2tEZWZJZCJCChhEZWxl",
            "dGVVc2VyVGFza0RlZlJlcXVlc3QSJgoCaWQYASABKAsyGi5saXR0bGVob3Jz",
            "ZS5Vc2VyVGFza0RlZklkIjgKE0RlbGV0ZVdmU3BlY1JlcXVlc3QSIQoCaWQY",
            "ASABKAsyFS5saXR0bGVob3JzZS5XZlNwZWNJZCJMCh1EZWxldGVFeHRlcm5h",
            "bEV2ZW50RGVmUmVxdWVzdBIrCgJpZBgBIAEoCzIfLmxpdHRsZWhvcnNlLkV4",
            "dGVybmFsRXZlbnREZWZJZCLjAgoMUnVuV2ZSZXF1ZXN0EhQKDHdmX3NwZWNf",
            "bmFtZRgBIAEoCRIaCg1tYWpvcl92ZXJzaW9uGAIgASgFSACIAQESFQoIcmV2",
            "aXNpb24YAyABKAVIAYgBARI7Cgl2YXJpYWJsZXMYBCADKAsyKC5saXR0bGVo",
            "b3JzZS5SdW5XZlJlcXVlc3QuVmFyaWFibGVzRW50cnkSDwoCaWQYBSABKAlI",
            "AogBARIzChBwYXJlbnRfd2ZfcnVuX2lkGAYgASgLMhQubGl0dGxlaG9yc2Uu",
            "V2ZSdW5JZEgDiAEBGkwKDlZhcmlhYmxlc0VudHJ5EgsKA2tleRgBIAEoCRIp",
            "CgV2YWx1ZRgCIAEoCzIaLmxpdHRsZWhvcnNlLlZhcmlhYmxlVmFsdWU6AjgB",
            "QhAKDl9tYWpvcl92ZXJzaW9uQgsKCV9yZXZpc2lvbkIFCgNfaWRCEwoRX3Bh",
            "cmVudF93Zl9ydW5faWQihgMKEVNjaGVkdWxlV2ZSZXF1ZXN0Eg8KAmlkGAEg",
            "ASgJSACIAQESFAoMd2Zfc3BlY19uYW1lGAIgASgJEhoKDW1ham9yX3ZlcnNp",
            "b24YAyABKAVIAYgBARIVCghyZXZpc2lvbhgEIAEoBUgCiAEBEkAKCXZhcmlh",
            "YmxlcxgFIAMoCzItLmxpdHRsZWhvcnNlLlNjaGVkdWxlV2ZSZXF1ZXN0LlZh",
            "cmlhYmxlc0VudHJ5EjMKEHBhcmVudF93Zl9ydW5faWQYBiABKAsyFC5saXR0",
            "bGVob3JzZS5XZlJ1bklkSAOIAQESFwoPY3Jvbl9leHByZXNzaW9uGAcgASgJ",
            "GkwKDlZhcmlhYmxlc0VudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEo",
            "CzIaLmxpdHRsZWhvcnNlLlZhcmlhYmxlVmFsdWU6AjgBQgUKA19pZEIQCg5f",
            "bWFqb3JfdmVyc2lvbkILCglfcmV2aXNpb25CEwoRX3BhcmVudF93Zl9ydW5f",
            "aWQiTAoNVmFyaWFibGVNYXRjaBIQCgh2YXJfbmFtZRgBIAEoCRIpCgV2YWx1",
            "ZRgCIAEoCzIaLmxpdHRsZWhvcnNlLlZhcmlhYmxlVmFsdWUivQEKGUF3YWl0",
            "V29ya2Zsb3dFdmVudFJlcXVlc3QSJwoJd2ZfcnVuX2lkGAEgASgLMhQubGl0",
            "dGxlaG9yc2UuV2ZSdW5JZBI2Cg1ldmVudF9kZWZfaWRzGAIgAygLMh8ubGl0",
            "dGxlaG9yc2UuV29ya2Zsb3dFdmVudERlZklkEj8KGXdvcmtmbG93X2V2ZW50",
            "c190b19pZ25vcmUYAyADKAsyHC5saXR0bGVob3JzZS5Xb3JrZmxvd0V2ZW50",
            "SWQi3wMKElNlYXJjaFdmUnVuUmVxdWVzdBIVCghib29rbWFyaxgBIAEoDEgA",
            "iAEBEhIKBWxpbWl0GAIgASgFSAGIAQESFAoMd2Zfc3BlY19uYW1lGAMgASgJ",
            "EiIKFXdmX3NwZWNfbWFqb3JfdmVyc2lvbhgEIAEoBUgCiAEBEh0KEHdmX3Nw",
            "ZWNfcmV2aXNpb24YBSABKAVIA4gBARIqCgZzdGF0dXMYBiABKA4yFS5saXR0",
            "bGVob3JzZS5MSFN0YXR1c0gEiAEBEjcKDmVhcmxpZXN0X3N0YXJ0GAcgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgFiAEBEjUKDGxhdGVzdF9z",
            "dGFydBgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIBogBARI0",
            "ChB2YXJpYWJsZV9maWx0ZXJzGAkgAygLMhoubGl0dGxlaG9yc2UuVmFyaWFi",
            "bGVNYXRjaEILCglfYm9va21hcmtCCAoGX2xpbWl0QhgKFl93Zl9zcGVjX21h",
            "am9yX3ZlcnNpb25CEwoRX3dmX3NwZWNfcmV2aXNpb25CCQoHX3N0YXR1c0IR",
            "Cg9fZWFybGllc3Rfc3RhcnRCDwoNX2xhdGVzdF9zdGFydCJYCgtXZlJ1bklk",
            "TGlzdBIlCgdyZXN1bHRzGAEgAygLMhQubGl0dGxlaG9yc2UuV2ZSdW5JZBIV",
            "Cghib29rbWFyaxgCIAEoDEgAiAEBQgsKCV9ib29rbWFyayK8AgoUU2VhcmNo",
            "VGFza1J1blJlcXVlc3QSFQoIYm9va21hcmsYASABKAxIAIgBARISCgVsaW1p",
            "dBgCIAEoBUgBiAEBEhUKDXRhc2tfZGVmX25hbWUYAyABKAkSLAoGc3RhdHVz",
            "GAQgASgOMhcubGl0dGxlaG9yc2UuVGFza1N0YXR1c0gCiAEBEjcKDmVhcmxp",
            "ZXN0X3N0YXJ0GAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgD",
            "iAEBEjUKDGxhdGVzdF9zdGFydBgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXBIBIgBAUILCglfYm9va21hcmtCCAoGX2xpbWl0QgkKB19zdGF0",
            "dXNCEQoPX2VhcmxpZXN0X3N0YXJ0Qg8KDV9sYXRlc3Rfc3RhcnQiXAoNVGFz",
            "a1J1bklkTGlzdBInCgdyZXN1bHRzGAEgAygLMhYubGl0dGxlaG9yc2UuVGFz",
            "a1J1bklkEhUKCGJvb2ttYXJrGAIgASgMSACIAQFCCwoJX2Jvb2ttYXJrIvED",
            "ChRTZWFyY2hOb2RlUnVuUmVxdWVzdBIVCghib29rbWFyaxgBIAEoDEgAiAEB",
            "EhIKBWxpbWl0GAIgASgFSAGIAQESNwoOZWFybGllc3Rfc3RhcnQYAyABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAKIAQESNQoMbGF0ZXN0X3N0",
            "YXJ0GAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgDiAEBEj0K",
            "CW5vZGVfdHlwZRgFIAEoDjIqLmxpdHRsZWhvcnNlLlNlYXJjaE5vZGVSdW5S",
            "ZXF1ZXN0Lk5vZGVUeXBlEiUKBnN0YXR1cxgGIAEoDjIVLmxpdHRsZWhvcnNl",
            "LkxIU3RhdHVzIpwBCghOb2RlVHlwZRIICgRUQVNLEAASEgoORVhURVJOQUxf",
            "RVZFTlQQARIOCgpFTlRSWVBPSU5UEAISCAoERVhJVBADEhAKDFNUQVJUX1RI",
            "UkVBRBAEEhAKDFdBSVRfVEhSRUFEUxAFEgkKBVNMRUVQEAYSDQoJVVNFUl9U",
            "QVNLEAcSGgoWU1RBUlRfTVVMVElQTEVfVEhSRUFEUxAIQgsKCV9ib29rbWFy",
            "a0IICgZfbGltaXRCEQoPX2VhcmxpZXN0X3N0YXJ0Qg8KDV9sYXRlc3Rfc3Rh",
            "cnQiXAoNTm9kZVJ1bklkTGlzdBInCgdyZXN1bHRzGAEgAygLMhYubGl0dGxl",
            "aG9yc2UuTm9kZVJ1bklkEhUKCGJvb2ttYXJrGAIgASgMSACIAQFCCwoJX2Jv",
            "b2ttYXJrIrIDChhTZWFyY2hVc2VyVGFza1J1blJlcXVlc3QSFQoIYm9va21h",
            "cmsYASABKAxIAIgBARISCgVsaW1pdBgCIAEoBUgBiAEBEjMKBnN0YXR1cxgD",
            "IAEoDjIeLmxpdHRsZWhvcnNlLlVzZXJUYXNrUnVuU3RhdHVzSAKIAQESHwoS",
            "dXNlcl90YXNrX2RlZl9uYW1lGAQgASgJSAOIAQESFAoHdXNlcl9pZBgFIAEo",
            "CUgEiAEBEhcKCnVzZXJfZ3JvdXAYBiABKAlIBYgBARI3Cg5lYXJsaWVzdF9z",
            "dGFydBgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIBogBARI1",
            "CgxsYXRlc3Rfc3RhcnQYCCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wSAeIAQFCCwoJX2Jvb2ttYXJrQggKBl9saW1pdEIJCgdfc3RhdHVzQhUK",
            "E191c2VyX3Rhc2tfZGVmX25hbWVCCgoIX3VzZXJfaWRCDQoLX3VzZXJfZ3Jv",
            "dXBCEQoPX2VhcmxpZXN0X3N0YXJ0Qg8KDV9sYXRlc3Rfc3RhcnQiZAoRVXNl",
            "clRhc2tSdW5JZExpc3QSKwoHcmVzdWx0cxgBIAMoCzIaLmxpdHRsZWhvcnNl",
            "LlVzZXJUYXNrUnVuSWQSFQoIYm9va21hcmsYAiABKAxIAIgBAUILCglfYm9v",
            "a21hcmsingIKFVNlYXJjaFZhcmlhYmxlUmVxdWVzdBIVCghib29rbWFyaxgB",
            "IAEoDEgAiAEBEhIKBWxpbWl0GAIgASgFSAGIAQESKQoFdmFsdWUYAyABKAsy",
            "Gi5saXR0bGVob3JzZS5WYXJpYWJsZVZhbHVlEiIKFXdmX3NwZWNfbWFqb3Jf",
            "dmVyc2lvbhgEIAEoBUgCiAEBEh0KEHdmX3NwZWNfcmV2aXNpb24YBSABKAVI",
            "A4gBARIQCgh2YXJfbmFtZRgGIAEoCRIUCgx3Zl9zcGVjX25hbWUYByABKAlC",
            "CwoJX2Jvb2ttYXJrQggKBl9saW1pdEIYChZfd2Zfc3BlY19tYWpvcl92ZXJz",
            "aW9uQhMKEV93Zl9zcGVjX3JldmlzaW9uIl4KDlZhcmlhYmxlSWRMaXN0EigK",
            "B3Jlc3VsdHMYASADKAsyFy5saXR0bGVob3JzZS5WYXJpYWJsZUlkEhUKCGJv",
            "b2ttYXJrGAIgASgMSACIAQFCCwoJX2Jvb2ttYXJrIngKFFNlYXJjaFRhc2tE",
            "ZWZSZXF1ZXN0EhUKCGJvb2ttYXJrGAEgASgMSACIAQESEgoFbGltaXQYAiAB",
            "KAVIAYgBARITCgZwcmVmaXgYAyABKAlIAogBAUILCglfYm9va21hcmtCCAoG",
            "X2xpbWl0QgkKB19wcmVmaXgiXAoNVGFza0RlZklkTGlzdBInCgdyZXN1bHRz",
            "GAEgAygLMhYubGl0dGxlaG9yc2UuVGFza0RlZklkEhUKCGJvb2ttYXJrGAIg",
            "ASgMSACIAQFCCwoJX2Jvb2ttYXJrIpgBChhTZWFyY2hVc2VyVGFza0RlZlJl",
            "cXVlc3QSFQoIYm9va21hcmsYASABKAxIAYgBARISCgVsaW1pdBgCIAEoBUgC",
            "iAEBEhAKBnByZWZpeBgDIAEoCUgAEg4KBG5hbWUYBCABKAlIAEIYChZ1c2Vy",
            "X3Rhc2tfZGVmX2NyaXRlcmlhQgsKCV9ib29rbWFya0IICgZfbGltaXQiZAoR",
            "VXNlclRhc2tEZWZJZExpc3QSKwoHcmVzdWx0cxgBIAMoCzIaLmxpdHRsZWhv",
            "cnNlLlVzZXJUYXNrRGVmSWQSFQoIYm9va21hcmsYAiABKAxIAIgBAUILCglf",
            "Ym9va21hcmsipgEKE1NlYXJjaFdmU3BlY1JlcXVlc3QSFQoIYm9va21hcmsY",
            "ASABKAxIAYgBARISCgVsaW1pdBgCIAEoBUgCiAEBEg4KBG5hbWUYAyABKAlI",
            "ABIQCgZwcmVmaXgYBCABKAlIABIXCg10YXNrX2RlZl9uYW1lGAUgASgJSABC",
            "EgoQd2Zfc3BlY19jcml0ZXJpYUILCglfYm9va21hcmtCCAoGX2xpbWl0IloK",
            "DFdmU3BlY0lkTGlzdBImCgdyZXN1bHRzGAEgAygLMhUubGl0dGxlaG9yc2Uu",
            "V2ZTcGVjSWQSFQoIYm9va21hcmsYAiABKAxIAIgBAUILCglfYm9va21hcmsi",
            "gQEKHVNlYXJjaEV4dGVybmFsRXZlbnREZWZSZXF1ZXN0EhUKCGJvb2ttYXJr",
            "GAEgASgMSACIAQESEgoFbGltaXQYAiABKAVIAYgBARITCgZwcmVmaXgYAyAB",
            "KAlIAogBAUILCglfYm9va21hcmtCCAoGX2xpbWl0QgkKB19wcmVmaXgibgoW",
            "RXh0ZXJuYWxFdmVudERlZklkTGlzdBIwCgdyZXN1bHRzGAEgAygLMh8ubGl0",
            "dGxlaG9yc2UuRXh0ZXJuYWxFdmVudERlZklkEhUKCGJvb2ttYXJrGAIgASgM",
            "SACIAQFCCwoJX2Jvb2ttYXJrIlcKE1NlYXJjaFRlbmFudFJlcXVlc3QSEgoF",
            "bGltaXQYASABKAVIAIgBARIVCghib29rbWFyaxgCIAEoDEgBiAEBQggKBl9s",
            "aW1pdEILCglfYm9va21hcmsiWgoMVGVuYW50SWRMaXN0EiYKB3Jlc3VsdHMY",
            "ASADKAsyFS5saXR0bGVob3JzZS5UZW5hbnRJZBIVCghib29rbWFyaxgCIAEo",
            "DEgAiAEBQgsKCV9ib29rbWFyayKrAgoWU2VhcmNoUHJpbmNpcGFsUmVxdWVz",
            "dBIVCghib29rbWFyaxgBIAEoDEgBiAEBEhIKBWxpbWl0GAIgASgFSAKIAQES",
            "NwoOZWFybGllc3Rfc3RhcnQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wSAOIAQESNQoMbGF0ZXN0X3N0YXJ0GAQgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcEgEiAEBEhEKB2lzQWRtaW4YBSABKAhIABISCgh0",
            "ZW5hbnRJZBgGIAEoCUgAQhQKEnByaW5jaXBhbF9jcml0ZXJpYUILCglfYm9v",
            "a21hcmtCCAoGX2xpbWl0QhEKD19lYXJsaWVzdF9zdGFydEIPCg1fbGF0ZXN0",
            "X3N0YXJ0ImAKD1ByaW5jaXBhbElkTGlzdBIpCgdyZXN1bHRzGAEgAygLMhgu",
            "bGl0dGxlaG9yc2UuUHJpbmNpcGFsSWQSFQoIYm9va21hcmsYAiABKAxIAIgB",
            "AUILCglfYm9va21hcmsi2gIKGlNlYXJjaEV4dGVybmFsRXZlbnRSZXF1ZXN0",
            "EhUKCGJvb2ttYXJrGAEgASgMSACIAQESEgoFbGltaXQYAiABKAVIAYgBARI3",
            "Cg5lYXJsaWVzdF9zdGFydBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXBIAogBARI1CgxsYXRlc3Rfc3RhcnQYBCABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wSAOIAQESPgoVZXh0ZXJuYWxfZXZlbnRfZGVmX2lk",
            "GAUgASgLMh8ubGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVudERlZklkEhcKCmlz",
            "X2NsYWltZWQYBiABKAhIBIgBAUILCglfYm9va21hcmtCCAoGX2xpbWl0QhEK",
            "D19lYXJsaWVzdF9zdGFydEIPCg1fbGF0ZXN0X3N0YXJ0Qg0KC19pc19jbGFp",
            "bWVkImgKE0V4dGVybmFsRXZlbnRJZExpc3QSLQoHcmVzdWx0cxgBIAMoCzIc",
            "LmxpdHRsZWhvcnNlLkV4dGVybmFsRXZlbnRJZBIVCghib29rbWFyaxgCIAEo",
            "DEgAiAEBQgsKCV9ib29rbWFyayK2AQoTTGlzdE5vZGVSdW5zUmVxdWVzdBIn",
            "Cgl3Zl9ydW5faWQYASABKAsyFC5saXR0bGVob3JzZS5XZlJ1bklkEh4KEXRo",
            "cmVhZF9ydW5fbnVtYmVyGAIgASgFSACIAQESFQoIYm9va21hcmsYAyABKAxI",
            "AYgBARISCgVsaW1pdBgEIAEoBUgCiAEBQhQKEl90aHJlYWRfcnVuX251bWJl",
            "ckILCglfYm9va21hcmtCCAoGX2xpbWl0IlgKC05vZGVSdW5MaXN0EiUKB3Jl",
            "c3VsdHMYASADKAsyFC5saXR0bGVob3JzZS5Ob2RlUnVuEhUKCGJvb2ttYXJr",
            "GAIgASgMSACIAQFCCwoJX2Jvb2ttYXJrIj8KFExpc3RWYXJpYWJsZXNSZXF1",
            "ZXN0EicKCXdmX3J1bl9pZBgBIAEoCzIULmxpdHRsZWhvcnNlLldmUnVuSWQi",
            "NgoMVmFyaWFibGVMaXN0EiYKB3Jlc3VsdHMYASADKAsyFS5saXR0bGVob3Jz",
            "ZS5WYXJpYWJsZSJEChlMaXN0RXh0ZXJuYWxFdmVudHNSZXF1ZXN0EicKCXdm",
            "X3J1bl9pZBgBIAEoCzIULmxpdHRsZWhvcnNlLldmUnVuSWQiQAoRRXh0ZXJu",
            "YWxFdmVudExpc3QSKwoHcmVzdWx0cxgBIAMoCzIaLmxpdHRsZWhvcnNlLkV4",
            "dGVybmFsRXZlbnQiYAoZUmVnaXN0ZXJUYXNrV29ya2VyUmVxdWVzdBIWCg50",
            "YXNrX3dvcmtlcl9pZBgBIAEoCRIrCgt0YXNrX2RlZl9pZBgCIAEoCzIWLmxp",
            "dHRsZWhvcnNlLlRhc2tEZWZJZCJzChpUYXNrV29ya2VySGVhcnRCZWF0UmVx",
            "dWVzdBIRCgljbGllbnRfaWQYASABKAkSKwoLdGFza19kZWZfaWQYAiABKAsy",
            "Fi5saXR0bGVob3JzZS5UYXNrRGVmSWQSFQoNbGlzdGVuZXJfbmFtZRgDIAEo",
            "CSKBAQoaUmVnaXN0ZXJUYXNrV29ya2VyUmVzcG9uc2USKwoKeW91cl9ob3N0",
            "cxgBIAMoCzIXLmxpdHRsZWhvcnNlLkxISG9zdEluZm8SHwoSaXNfY2x1c3Rl",
            "cl9oZWFsdGh5GAIgASgISACIAQFCFQoTX2lzX2NsdXN0ZXJfaGVhbHRoeSIo",
            "CgpMSEhvc3RJbmZvEgwKBGhvc3QYASABKAkSDAoEcG9ydBgCIAEoBSKLAQoP",
            "UG9sbFRhc2tSZXF1ZXN0EisKC3Rhc2tfZGVmX2lkGAEgASgLMhYubGl0dGxl",
            "aG9yc2UuVGFza0RlZklkEhEKCWNsaWVudF9pZBgCIAEoCRIgChN0YXNrX3dv",
            "cmtlcl92ZXJzaW9uGAMgASgJSACIAQFCFgoUX3Rhc2tfd29ya2VyX3ZlcnNp",
            "b24ijAIKDVNjaGVkdWxlZFRhc2sSKwoLdGFza19ydW5faWQYASABKAsyFi5s",
            "aXR0bGVob3JzZS5UYXNrUnVuSWQSKwoLdGFza19kZWZfaWQYAiABKAsyFi5s",
            "aXR0bGVob3JzZS5UYXNrRGVmSWQSFgoOYXR0ZW1wdF9udW1iZXIYAyABKAUS",
            "LQoJdmFyaWFibGVzGAQgAygLMhoubGl0dGxlaG9yc2UuVmFyTmFtZUFuZFZh",
            "bBIuCgpjcmVhdGVkX2F0GAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIqCgZzb3VyY2UYBiABKAsyGi5saXR0bGVob3JzZS5UYXNrUnVuU291",
            "cmNlIk4KEFBvbGxUYXNrUmVzcG9uc2USLwoGcmVzdWx0GAEgASgLMhoubGl0",
            "dGxlaG9yc2UuU2NoZWR1bGVkVGFza0gAiAEBQgkKB19yZXN1bHQigQMKDVJl",
            "cG9ydFRhc2tSdW4SKwoLdGFza19ydW5faWQYASABKAsyFi5saXR0bGVob3Jz",
            "ZS5UYXNrUnVuSWQSKAoEdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASJwoGc3RhdHVzGAMgASgOMhcubGl0dGxlaG9yc2UuVGFza1N0",
            "YXR1cxIzCgpsb2dfb3V0cHV0GAUgASgLMhoubGl0dGxlaG9yc2UuVmFyaWFi",
            "bGVWYWx1ZUgBiAEBEhYKDmF0dGVtcHRfbnVtYmVyGAYgASgFEiwKBm91dHB1",
            "dBgEIAEoCzIaLmxpdHRsZWhvcnNlLlZhcmlhYmxlVmFsdWVIABIpCgVlcnJv",
            "chgHIAEoCzIYLmxpdHRsZWhvcnNlLkxIVGFza0Vycm9ySAASMQoJZXhjZXB0",
            "aW9uGAggASgLMhwubGl0dGxlaG9yc2UuTEhUYXNrRXhjZXB0aW9uSABCCAoG",
            "cmVzdWx0Qg0KC19sb2dfb3V0cHV0IlYKEFN0b3BXZlJ1blJlcXVlc3QSJwoJ",
            "d2ZfcnVuX2lkGAEgASgLMhQubGl0dGxlaG9yc2UuV2ZSdW5JZBIZChF0aHJl",
            "YWRfcnVuX251bWJlchgCIAEoBSJYChJSZXN1bWVXZlJ1blJlcXVlc3QSJwoJ",
            "d2ZfcnVuX2lkGAEgASgLMhQubGl0dGxlaG9yc2UuV2ZSdW5JZBIZChF0aHJl",
            "YWRfcnVuX251bWJlchgCIAEoBSJ3ChZSZXNjdWVUaHJlYWRSdW5SZXF1ZXN0",
            "EicKCXdmX3J1bl9pZBgBIAEoCzIULmxpdHRsZWhvcnNlLldmUnVuSWQSGQoR",
            "dGhyZWFkX3J1bl9udW1iZXIYAiABKAUSGQoRc2tpcF9jdXJyZW50X25vZGUY",
            "AyABKAgiswEKGlRhc2tEZWZNZXRyaWNzUXVlcnlSZXF1ZXN0EjAKDHdpbmRv",
            "d19zdGFydBgBIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNQoL",
            "d2luZG93X3R5cGUYAiABKA4yIC5saXR0bGVob3JzZS5NZXRyaWNzV2luZG93",
            "TGVuZ3RoEhoKDXRhc2tfZGVmX25hbWUYAyABKAlIAIgBAUIQCg5fdGFza19k",
            "ZWZfbmFtZSLKAQoWTGlzdFRhc2tNZXRyaWNzUmVxdWVzdBIrCgt0YXNrX2Rl",
            "Zl9pZBgBIAEoCzIWLmxpdHRsZWhvcnNlLlRhc2tEZWZJZBI1ChFsYXN0X3dp",
            "bmRvd19zdGFydBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "NwoNd2luZG93X2xlbmd0aBgDIAEoDjIgLmxpdHRsZWhvcnNlLk1ldHJpY3NX",
            "aW5kb3dMZW5ndGgSEwoLbnVtX3dpbmRvd3MYBCABKAUiRwoXTGlzdFRhc2tN",
            "ZXRyaWNzUmVzcG9uc2USLAoHcmVzdWx0cxgBIAMoCzIbLmxpdHRsZWhvcnNl",
            "LlRhc2tEZWZNZXRyaWNzIrEBChlXZlNwZWNNZXRyaWNzUXVlcnlSZXF1ZXN0",
            "EikKCndmX3NwZWNfaWQYASABKAsyFS5saXR0bGVob3JzZS5XZlNwZWNJZBIw",
            "Cgx3aW5kb3dfc3RhcnQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEjcKDXdpbmRvd19sZW5ndGgYAyABKA4yIC5saXR0bGVob3JzZS5NZXRy",
            "aWNzV2luZG93TGVuZ3RoIsYBChRMaXN0V2ZNZXRyaWNzUmVxdWVzdBIpCgp3",
            "Zl9zcGVjX2lkGAEgASgLMhUubGl0dGxlaG9yc2UuV2ZTcGVjSWQSNQoRbGFz",
            "dF93aW5kb3dfc3RhcnQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEjcKDXdpbmRvd19sZW5ndGgYAyABKA4yIC5saXR0bGVob3JzZS5NZXRy",
            "aWNzV2luZG93TGVuZ3RoEhMKC251bV93aW5kb3dzGAQgASgFIkQKFUxpc3RX",
            "Zk1ldHJpY3NSZXNwb25zZRIrCgdyZXN1bHRzGAEgAygLMhoubGl0dGxlaG9y",
            "c2UuV2ZTcGVjTWV0cmljcyL7AgoOVGFza0RlZk1ldHJpY3MSKwoLdGFza19k",
            "ZWZfaWQYASABKAsyFi5saXR0bGVob3JzZS5UYXNrRGVmSWQSMAoMd2luZG93",
            "X3N0YXJ0GAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIuCgR0",
            "eXBlGAMgASgOMiAubGl0dGxlaG9yc2UuTWV0cmljc1dpbmRvd0xlbmd0aBId",
            "ChVzY2hlZHVsZV90b19zdGFydF9tYXgYBCABKAMSHQoVc2NoZWR1bGVfdG9f",
            "c3RhcnRfYXZnGAUgASgDEh0KFXN0YXJ0X3RvX2NvbXBsZXRlX21heBgGIAEo",
            "AxIdChVzdGFydF90b19jb21wbGV0ZV9hdmcYByABKAMSFwoPdG90YWxfY29t",
            "cGxldGVkGAggASgDEhUKDXRvdGFsX2Vycm9yZWQYCSABKAMSFQoNdG90YWxf",
            "c3RhcnRlZBgKIAEoAxIXCg90b3RhbF9zY2hlZHVsZWQYCyABKAMioQIKDVdm",
            "U3BlY01ldHJpY3MSKQoKd2Zfc3BlY19pZBgBIAEoCzIVLmxpdHRsZWhvcnNl",
            "LldmU3BlY0lkEjAKDHdpbmRvd19zdGFydBgCIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXASLgoEdHlwZRgDIAEoDjIgLmxpdHRsZWhvcnNlLk1l",
            "dHJpY3NXaW5kb3dMZW5ndGgSFQoNdG90YWxfc3RhcnRlZBgEIAEoAxIXCg90",
            "b3RhbF9jb21wbGV0ZWQYBSABKAMSFQoNdG90YWxfZXJyb3JlZBgGIAEoAxId",
            "ChVzdGFydF90b19jb21wbGV0ZV9tYXgYByABKAMSHQoVc3RhcnRfdG9fY29t",
            "cGxldGVfYXZnGAggASgDIkEKFkxpc3RVc2VyVGFza1J1blJlcXVlc3QSJwoJ",
            "d2ZfcnVuX2lkGAEgASgLMhQubGl0dGxlaG9yc2UuV2ZSdW5JZCI8Cg9Vc2Vy",
            "VGFza1J1bkxpc3QSKQoHcmVzdWx0cxgBIAMoCzIYLmxpdHRsZWhvcnNlLlVz",
            "ZXJUYXNrUnVuIkYKFFNjaGVkdWxlZFdmUnVuSWRMaXN0Ei4KB3Jlc3VsdHMY",
            "ASADKAsyHS5saXR0bGVob3JzZS5TY2hlZHVsZWRXZlJ1bklkIoUBChtTZWFy",
            "Y2hTY2hlZHVsZWRXZlJ1blJlcXVlc3QSFAoMd2Zfc3BlY19uYW1lGAEgASgJ",
            "EhoKDW1ham9yX3ZlcnNpb24YAiABKAVIAIgBARIVCghyZXZpc2lvbhgDIAEo",
            "BUgBiAEBQhAKDl9tYWpvcl92ZXJzaW9uQgsKCV9yZXZpc2lvbiKKAQoSVGFz",
            "a1dvcmtlck1ldGFkYXRhEhYKDnRhc2tfd29ya2VyX2lkGAEgASgJEjQKEGxh",
            "dGVzdF9oZWFydGJlYXQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wEiYKBWhvc3RzGAMgAygLMhcubGl0dGxlaG9yc2UuTEhIb3N0SW5mbyKH",
            "AgoPVGFza1dvcmtlckdyb3VwEioKAmlkGAEgASgLMh4ubGl0dGxlaG9yc2Uu",
            "VGFza1dvcmtlckdyb3VwSWQSLgoKY3JlYXRlZF9hdBgCIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASQwoMdGFza193b3JrZXJzGAMgAygLMi0u",
            "bGl0dGxlaG9yc2UuVGFza1dvcmtlckdyb3VwLlRhc2tXb3JrZXJzRW50cnka",
            "UwoQVGFza1dvcmtlcnNFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiAB",
            "KAsyHy5saXR0bGVob3JzZS5UYXNrV29ya2VyTWV0YWRhdGE6AjgBIj4KE0xp",
            "c3RUYXNrUnVuc1JlcXVlc3QSJwoJd2ZfcnVuX2lkGAEgASgLMhQubGl0dGxl",
            "aG9yc2UuV2ZSdW5JZCI0CgtUYXNrUnVuTGlzdBIlCgdyZXN1bHRzGAEgAygL",
            "MhQubGl0dGxlaG9yc2UuVGFza1J1biJ6ChRNaWdyYXRlV2ZTcGVjUmVxdWVz",
            "dBIqCgtvbGRfd2Zfc3BlYxgBIAEoCzIVLmxpdHRsZWhvcnNlLldmU3BlY0lk",
            "EjYKCW1pZ3JhdGlvbhgCIAEoCzIjLmxpdHRsZWhvcnNlLldmU3BlY1ZlcnNp",
            "b25NaWdyYXRpb24iVAoWR2V0TGF0ZXN0V2ZTcGVjUmVxdWVzdBIMCgRuYW1l",
            "GAEgASgJEhoKDW1ham9yX3ZlcnNpb24YAiABKAVIAIgBAUIQCg5fbWFqb3Jf",
            "dmVyc2lvbiKcAQoVU2VydmVyVmVyc2lvblJlc3BvbnNlEhUKDW1ham9yX3Zl",
            "cnNpb24YASABKAUSFQoNbWlub3JfdmVyc2lvbhgCIAEoBRIVCg1wYXRjaF92",
            "ZXJzaW9uGAMgASgFEiMKFnByZV9yZWxlYXNlX2lkZW50aWZpZXIYBCABKAlI",
            "AIgBAUIZChdfcHJlX3JlbGVhc2VfaWRlbnRpZmllcipQChFBbGxvd2VkVXBk",
            "YXRlVHlwZRIPCgtBTExfVVBEQVRFUxAAEhoKFk1JTk9SX1JFVklTSU9OX1VQ",
            "REFURVMQARIOCgpOT19VUERBVEVTEAIyuCsKC0xpdHRsZUhvcnNlEkQKClB1",
            "dFRhc2tEZWYSHi5saXR0bGVob3JzZS5QdXRUYXNrRGVmUmVxdWVzdBoULmxp",
            "dHRsZWhvcnNlLlRhc2tEZWYiABI8CgpHZXRUYXNrRGVmEhYubGl0dGxlaG9y",
            "c2UuVGFza0RlZklkGhQubGl0dGxlaG9yc2UuVGFza0RlZiIAEkwKEkdldFRh",
            "c2tXb3JrZXJHcm91cBIWLmxpdHRsZWhvcnNlLlRhc2tEZWZJZBocLmxpdHRs",
            "ZWhvcnNlLlRhc2tXb3JrZXJHcm91cCIAEl8KE1B1dEV4dGVybmFsRXZlbnRE",
            "ZWYSJy5saXR0bGVob3JzZS5QdXRFeHRlcm5hbEV2ZW50RGVmUmVxdWVzdBod",
            "LmxpdHRsZWhvcnNlLkV4dGVybmFsRXZlbnREZWYiABJXChNHZXRFeHRlcm5h",
            "bEV2ZW50RGVmEh8ubGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVudERlZklkGh0u",
            "bGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVudERlZiIAEl8KE1B1dFdvcmtmbG93",
            "RXZlbnREZWYSJy5saXR0bGVob3JzZS5QdXRXb3JrZmxvd0V2ZW50RGVmUmVx",
            "dWVzdBodLmxpdHRsZWhvcnNlLldvcmtmbG93RXZlbnREZWYiABJBCglQdXRX",
            "ZlNwZWMSHS5saXR0bGVob3JzZS5QdXRXZlNwZWNSZXF1ZXN0GhMubGl0dGxl",
            "aG9yc2UuV2ZTcGVjIgASOQoJR2V0V2ZTcGVjEhUubGl0dGxlaG9yc2UuV2ZT",
            "cGVjSWQaEy5saXR0bGVob3JzZS5XZlNwZWMiABJNCg9HZXRMYXRlc3RXZlNw",
            "ZWMSIy5saXR0bGVob3JzZS5HZXRMYXRlc3RXZlNwZWNSZXF1ZXN0GhMubGl0",
            "dGxlaG9yc2UuV2ZTcGVjIgASSQoNTWlncmF0ZVdmU3BlYxIhLmxpdHRsZWhv",
            "cnNlLk1pZ3JhdGVXZlNwZWNSZXF1ZXN0GhMubGl0dGxlaG9yc2UuV2ZTcGVj",
            "IgASUAoOUHV0VXNlclRhc2tEZWYSIi5saXR0bGVob3JzZS5QdXRVc2VyVGFz",
            "a0RlZlJlcXVlc3QaGC5saXR0bGVob3JzZS5Vc2VyVGFza0RlZiIAEkgKDkdl",
            "dFVzZXJUYXNrRGVmEhoubGl0dGxlaG9yc2UuVXNlclRhc2tEZWZJZBoYLmxp",
            "dHRsZWhvcnNlLlVzZXJUYXNrRGVmIgASXAoUR2V0TGF0ZXN0VXNlclRhc2tE",
            "ZWYSKC5saXR0bGVob3JzZS5HZXRMYXRlc3RVc2VyVGFza0RlZlJlcXVlc3Qa",
            "GC5saXR0bGVob3JzZS5Vc2VyVGFza0RlZiIAEjgKBVJ1bldmEhkubGl0dGxl",
            "aG9yc2UuUnVuV2ZSZXF1ZXN0GhIubGl0dGxlaG9yc2UuV2ZSdW4iABJLCgpT",
            "Y2hlZHVsZVdmEh4ubGl0dGxlaG9yc2UuU2NoZWR1bGVXZlJlcXVlc3QaGy5s",
            "aXR0bGVob3JzZS5TY2hlZHVsZWRXZlJ1biIAEmUKFFNlYXJjaFNjaGVkdWxl",
            "ZFdmUnVuEigubGl0dGxlaG9yc2UuU2VhcmNoU2NoZWR1bGVkV2ZSdW5SZXF1",
            "ZXN0GiEubGl0dGxlaG9yc2UuU2NoZWR1bGVkV2ZSdW5JZExpc3QiABJRChFH",
            "ZXRTY2hlZHVsZWRXZlJ1bhIdLmxpdHRsZWhvcnNlLlNjaGVkdWxlZFdmUnVu",
            "SWQaGy5saXR0bGVob3JzZS5TY2hlZHVsZWRXZlJ1biIAEjYKCEdldFdmUnVu",
            "EhQubGl0dGxlaG9yc2UuV2ZSdW5JZBoSLmxpdHRsZWhvcnNlLldmUnVuIgAS",
            "SAoOR2V0VXNlclRhc2tSdW4SGi5saXR0bGVob3JzZS5Vc2VyVGFza1J1bklk",
            "GhgubGl0dGxlaG9yc2UuVXNlclRhc2tSdW4iABJUChFBc3NpZ25Vc2VyVGFz",
            "a1J1bhIlLmxpdHRsZWhvcnNlLkFzc2lnblVzZXJUYXNrUnVuUmVxdWVzdBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElgKE0NvbXBsZXRlVXNlclRhc2tS",
            "dW4SJy5saXR0bGVob3JzZS5Db21wbGV0ZVVzZXJUYXNrUnVuUmVxdWVzdBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAElQKEUNhbmNlbFVzZXJUYXNrUnVu",
            "EiUubGl0dGxlaG9yc2UuQ2FuY2VsVXNlclRhc2tSdW5SZXF1ZXN0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5IgASYgoXU2F2ZVVzZXJUYXNrUnVuUHJvZ3Jl",
            "c3MSKy5saXR0bGVob3JzZS5TYXZlVXNlclRhc2tSdW5Qcm9ncmVzc1JlcXVl",
            "c3QaGC5saXR0bGVob3JzZS5Vc2VyVGFza1J1biIAElcKEExpc3RVc2VyVGFz",
            "a1J1bnMSIy5saXR0bGVob3JzZS5MaXN0VXNlclRhc2tSdW5SZXF1ZXN0Ghwu",
            "bGl0dGxlaG9yc2UuVXNlclRhc2tSdW5MaXN0IgASPAoKR2V0Tm9kZVJ1bhIW",
            "LmxpdHRsZWhvcnNlLk5vZGVSdW5JZBoULmxpdHRsZWhvcnNlLk5vZGVSdW4i",
            "ABJMCgxMaXN0Tm9kZVJ1bnMSIC5saXR0bGVob3JzZS5MaXN0Tm9kZVJ1bnNS",
            "ZXF1ZXN0GhgubGl0dGxlaG9yc2UuTm9kZVJ1bkxpc3QiABI8CgpHZXRUYXNr",
            "UnVuEhYubGl0dGxlaG9yc2UuVGFza1J1bklkGhQubGl0dGxlaG9yc2UuVGFz",
            "a1J1biIAEkwKDExpc3RUYXNrUnVucxIgLmxpdHRsZWhvcnNlLkxpc3RUYXNr",
            "UnVuc1JlcXVlc3QaGC5saXR0bGVob3JzZS5UYXNrUnVuTGlzdCIAEj8KC0dl",
            "dFZhcmlhYmxlEhcubGl0dGxlaG9yc2UuVmFyaWFibGVJZBoVLmxpdHRsZWhv",
            "cnNlLlZhcmlhYmxlIgASTwoNTGlzdFZhcmlhYmxlcxIhLmxpdHRsZWhvcnNl",
            "Lkxpc3RWYXJpYWJsZXNSZXF1ZXN0GhkubGl0dGxlaG9yc2UuVmFyaWFibGVM",
            "aXN0IgASVgoQUHV0RXh0ZXJuYWxFdmVudBIkLmxpdHRsZWhvcnNlLlB1dEV4",
            "dGVybmFsRXZlbnRSZXF1ZXN0GhoubGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVu",
            "dCIAEk4KEEdldEV4dGVybmFsRXZlbnQSHC5saXR0bGVob3JzZS5FeHRlcm5h",
            "bEV2ZW50SWQaGi5saXR0bGVob3JzZS5FeHRlcm5hbEV2ZW50IgASWgoSQXdh",
            "aXRXb3JrZmxvd0V2ZW50EiYubGl0dGxlaG9yc2UuQXdhaXRXb3JrZmxvd0V2",
            "ZW50UmVxdWVzdBoaLmxpdHRsZWhvcnNlLldvcmtmbG93RXZlbnQiABJeChJM",
            "aXN0RXh0ZXJuYWxFdmVudHMSJi5saXR0bGVob3JzZS5MaXN0RXh0ZXJuYWxF",
            "dmVudHNSZXF1ZXN0Gh4ubGl0dGxlaG9yc2UuRXh0ZXJuYWxFdmVudExpc3Qi",
            "ABJKCgtTZWFyY2hXZlJ1bhIfLmxpdHRsZWhvcnNlLlNlYXJjaFdmUnVuUmVx",
            "dWVzdBoYLmxpdHRsZWhvcnNlLldmUnVuSWRMaXN0IgASUAoNU2VhcmNoTm9k",
            "ZVJ1bhIhLmxpdHRsZWhvcnNlLlNlYXJjaE5vZGVSdW5SZXF1ZXN0GhoubGl0",
            "dGxlaG9yc2UuTm9kZVJ1bklkTGlzdCIAElAKDVNlYXJjaFRhc2tSdW4SIS5s",
            "aXR0bGVob3JzZS5TZWFyY2hUYXNrUnVuUmVxdWVzdBoaLmxpdHRsZWhvcnNl",
            "LlRhc2tSdW5JZExpc3QiABJcChFTZWFyY2hVc2VyVGFza1J1bhIlLmxpdHRs",
            "ZWhvcnNlLlNlYXJjaFVzZXJUYXNrUnVuUmVxdWVzdBoeLmxpdHRsZWhvcnNl",
            "LlVzZXJUYXNrUnVuSWRMaXN0IgASUwoOU2VhcmNoVmFyaWFibGUSIi5saXR0",
            "bGVob3JzZS5TZWFyY2hWYXJpYWJsZVJlcXVlc3QaGy5saXR0bGVob3JzZS5W",
            "YXJpYWJsZUlkTGlzdCIAEmIKE1NlYXJjaEV4dGVybmFsRXZlbnQSJy5saXR0",
            "bGVob3JzZS5TZWFyY2hFeHRlcm5hbEV2ZW50UmVxdWVzdBogLmxpdHRsZWhv",
            "cnNlLkV4dGVybmFsRXZlbnRJZExpc3QiABJQCg1TZWFyY2hUYXNrRGVmEiEu",
            "bGl0dGxlaG9yc2UuU2VhcmNoVGFza0RlZlJlcXVlc3QaGi5saXR0bGVob3Jz",
            "ZS5UYXNrRGVmSWRMaXN0IgASXAoRU2VhcmNoVXNlclRhc2tEZWYSJS5saXR0",
            "bGVob3JzZS5TZWFyY2hVc2VyVGFza0RlZlJlcXVlc3QaHi5saXR0bGVob3Jz",
            "ZS5Vc2VyVGFza0RlZklkTGlzdCIAEk0KDFNlYXJjaFdmU3BlYxIgLmxpdHRs",
            "ZWhvcnNlLlNlYXJjaFdmU3BlY1JlcXVlc3QaGS5saXR0bGVob3JzZS5XZlNw",
            "ZWNJZExpc3QiABJrChZTZWFyY2hFeHRlcm5hbEV2ZW50RGVmEioubGl0dGxl",
            "aG9yc2UuU2VhcmNoRXh0ZXJuYWxFdmVudERlZlJlcXVlc3QaIy5saXR0bGVo",
            "b3JzZS5FeHRlcm5hbEV2ZW50RGVmSWRMaXN0IgASTQoMU2VhcmNoVGVuYW50",
            "EiAubGl0dGxlaG9yc2UuU2VhcmNoVGVuYW50UmVxdWVzdBoZLmxpdHRsZWhv",
            "cnNlLlRlbmFudElkTGlzdCIAElYKD1NlYXJjaFByaW5jaXBhbBIjLmxpdHRs",
            "ZWhvcnNlLlNlYXJjaFByaW5jaXBhbFJlcXVlc3QaHC5saXR0bGVob3JzZS5Q",
            "cmluY2lwYWxJZExpc3QiABJnChJSZWdpc3RlclRhc2tXb3JrZXISJi5saXR0",
            "bGVob3JzZS5SZWdpc3RlclRhc2tXb3JrZXJSZXF1ZXN0GicubGl0dGxlaG9y",
            "c2UuUmVnaXN0ZXJUYXNrV29ya2VyUmVzcG9uc2UiABJNCghQb2xsVGFzaxIc",
            "LmxpdHRsZWhvcnNlLlBvbGxUYXNrUmVxdWVzdBodLmxpdHRsZWhvcnNlLlBv",
            "bGxUYXNrUmVzcG9uc2UiACgBMAESQgoKUmVwb3J0VGFzaxIaLmxpdHRsZWhv",
            "cnNlLlJlcG9ydFRhc2tSdW4aFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJE",
            "CglTdG9wV2ZSdW4SHS5saXR0bGVob3JzZS5TdG9wV2ZSdW5SZXF1ZXN0GhYu",
            "Z29vZ2xlLnByb3RvYnVmLkVtcHR5IgASSAoLUmVzdW1lV2ZSdW4SHy5saXR0",
            "bGVob3JzZS5SZXN1bWVXZlJ1blJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYu",
            "RW1wdHkiABJMCg9SZXNjdWVUaHJlYWRSdW4SIy5saXR0bGVob3JzZS5SZXNj",
            "dWVUaHJlYWRSdW5SZXF1ZXN0GhIubGl0dGxlaG9yc2UuV2ZSdW4iABJICgtE",
            "ZWxldGVXZlJ1bhIfLmxpdHRsZWhvcnNlLkRlbGV0ZVdmUnVuUmVxdWVzdBoW",
            "Lmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEkwKDURlbGV0ZVRhc2tEZWYSIS5s",
            "aXR0bGVob3JzZS5EZWxldGVUYXNrRGVmUmVxdWVzdBoWLmdvb2dsZS5wcm90",
            "b2J1Zi5FbXB0eSIAEkoKDERlbGV0ZVdmU3BlYxIgLmxpdHRsZWhvcnNlLkRl",
            "bGV0ZVdmU3BlY1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJU",
            "ChFEZWxldGVVc2VyVGFza0RlZhIlLmxpdHRsZWhvcnNlLkRlbGV0ZVVzZXJU",
            "YXNrRGVmUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEl4KFkRl",
            "bGV0ZUV4dGVybmFsRXZlbnREZWYSKi5saXR0bGVob3JzZS5EZWxldGVFeHRl",
            "cm5hbEV2ZW50RGVmUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIA",
            "ElAKD0RlbGV0ZVByaW5jaXBhbBIjLmxpdHRsZWhvcnNlLkRlbGV0ZVByaW5j",
            "aXBhbFJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABJaChREZWxl",
            "dGVTY2hlZHVsZWRXZlJ1bhIoLmxpdHRsZWhvcnNlLkRlbGV0ZVNjaGVkdWxl",
            "ZFdmUnVuUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAEmEKF0dl",
            "dFRhc2tEZWZNZXRyaWNzV2luZG93EicubGl0dGxlaG9yc2UuVGFza0RlZk1l",
            "dHJpY3NRdWVyeVJlcXVlc3QaGy5saXR0bGVob3JzZS5UYXNrRGVmTWV0cmlj",
            "cyIAEl4KFkdldFdmU3BlY01ldHJpY3NXaW5kb3cSJi5saXR0bGVob3JzZS5X",
            "ZlNwZWNNZXRyaWNzUXVlcnlSZXF1ZXN0GhoubGl0dGxlaG9yc2UuV2ZTcGVj",
            "TWV0cmljcyIAEmEKEkxpc3RUYXNrRGVmTWV0cmljcxIjLmxpdHRsZWhvcnNl",
            "Lkxpc3RUYXNrTWV0cmljc1JlcXVlc3QaJC5saXR0bGVob3JzZS5MaXN0VGFz",
            "a01ldHJpY3NSZXNwb25zZSIAElwKEUxpc3RXZlNwZWNNZXRyaWNzEiEubGl0",
            "dGxlaG9yc2UuTGlzdFdmTWV0cmljc1JlcXVlc3QaIi5saXR0bGVob3JzZS5M",
            "aXN0V2ZNZXRyaWNzUmVzcG9uc2UiABJBCglQdXRUZW5hbnQSHS5saXR0bGVo",
            "b3JzZS5QdXRUZW5hbnRSZXF1ZXN0GhMubGl0dGxlaG9yc2UuVGVuYW50IgAS",
            "OQoJR2V0VGVuYW50EhUubGl0dGxlaG9yc2UuVGVuYW50SWQaEy5saXR0bGVo",
            "b3JzZS5UZW5hbnQiABJKCgxQdXRQcmluY2lwYWwSIC5saXR0bGVob3JzZS5Q",
            "dXRQcmluY2lwYWxSZXF1ZXN0GhYubGl0dGxlaG9yc2UuUHJpbmNpcGFsIgAS",
            "OgoGV2hvYW1pEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhYubGl0dGxlaG9y",
            "c2UuUHJpbmNpcGFsIgASUAoQR2V0U2VydmVyVmVyc2lvbhIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRoiLmxpdHRsZWhvcnNlLlNlcnZlclZlcnNpb25SZXNw",
            "b25zZSIAQkkKH2lvLmxpdHRsZWhvcnNlLnNkay5jb21tb24ucHJvdG9QAVoJ",
            "LjtsaHByb3RvqgIYTGl0dGxlSG9yc2UuQ29tbW9uLlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::LittleHorse.Common.Proto.CommonWfspecReflection.Descriptor, global::LittleHorse.Common.Proto.CommonEnumsReflection.Descriptor, global::LittleHorse.Common.Proto.ObjectIdReflection.Descriptor, global::LittleHorse.Common.Proto.VariableReflection.Descriptor, global::LittleHorse.Common.Proto.ExternalEventReflection.Descriptor, global::LittleHorse.Common.Proto.WfRunReflection.Descriptor, global::LittleHorse.Common.Proto.NodeRunReflection.Descriptor, global::LittleHorse.Common.Proto.TaskRunReflection.Descriptor, global::LittleHorse.Common.Proto.UserTasksReflection.Descriptor, global::LittleHorse.Common.Proto.WfSpecReflection.Descriptor, global::LittleHorse.Common.Proto.TaskDefReflection.Descriptor, global::LittleHorse.Common.Proto.AclsReflection.Descriptor, global::LittleHorse.Common.Proto.WorkflowEventReflection.Descriptor, global::LittleHorse.Common.Proto.ScheduledWfRunReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LittleHorse.Common.Proto.AllowedUpdateType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.GetLatestUserTaskDefRequest), global::LittleHorse.Common.Proto.GetLatestUserTaskDefRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutWfSpecRequest), global::LittleHorse.Common.Proto.PutWfSpecRequest.Parser, new[]{ "Name", "ThreadSpecs", "EntrypointThreadName", "RetentionPolicy", "ParentWfSpec", "AllowedUpdates" }, new[]{ "RetentionPolicy", "ParentWfSpec" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutTaskDefRequest), global::LittleHorse.Common.Proto.PutTaskDefRequest.Parser, new[]{ "Name", "InputVars", "OutputSchema" }, new[]{ "OutputSchema" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutWorkflowEventDefRequest), global::LittleHorse.Common.Proto.PutWorkflowEventDefRequest.Parser, new[]{ "Name", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutUserTaskDefRequest), global::LittleHorse.Common.Proto.PutUserTaskDefRequest.Parser, new[]{ "Name", "Fields", "Description" }, new[]{ "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutExternalEventDefRequest), global::LittleHorse.Common.Proto.PutExternalEventDefRequest.Parser, new[]{ "Name", "RetentionPolicy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PutExternalEventRequest), global::LittleHorse.Common.Proto.PutExternalEventRequest.Parser, new[]{ "WfRunId", "ExternalEventDefId", "Guid", "Content", "ThreadRunNumber", "NodeRunPosition" }, new[]{ "Guid", "ThreadRunNumber", "NodeRunPosition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteExternalEventRequest), global::LittleHorse.Common.Proto.DeleteExternalEventRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteScheduledWfRunRequest), global::LittleHorse.Common.Proto.DeleteScheduledWfRunRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteWfRunRequest), global::LittleHorse.Common.Proto.DeleteWfRunRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteTaskDefRequest), global::LittleHorse.Common.Proto.DeleteTaskDefRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteUserTaskDefRequest), global::LittleHorse.Common.Proto.DeleteUserTaskDefRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteWfSpecRequest), global::LittleHorse.Common.Proto.DeleteWfSpecRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.DeleteExternalEventDefRequest), global::LittleHorse.Common.Proto.DeleteExternalEventDefRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.RunWfRequest), global::LittleHorse.Common.Proto.RunWfRequest.Parser, new[]{ "WfSpecName", "MajorVersion", "Revision", "Variables", "Id", "ParentWfRunId" }, new[]{ "MajorVersion", "Revision", "Id", "ParentWfRunId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ScheduleWfRequest), global::LittleHorse.Common.Proto.ScheduleWfRequest.Parser, new[]{ "Id", "WfSpecName", "MajorVersion", "Revision", "Variables", "ParentWfRunId", "CronExpression" }, new[]{ "Id", "MajorVersion", "Revision", "ParentWfRunId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.VariableMatch), global::LittleHorse.Common.Proto.VariableMatch.Parser, new[]{ "VarName", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.AwaitWorkflowEventRequest), global::LittleHorse.Common.Proto.AwaitWorkflowEventRequest.Parser, new[]{ "WfRunId", "EventDefIds", "WorkflowEventsToIgnore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchWfRunRequest), global::LittleHorse.Common.Proto.SearchWfRunRequest.Parser, new[]{ "Bookmark", "Limit", "WfSpecName", "WfSpecMajorVersion", "WfSpecRevision", "Status", "EarliestStart", "LatestStart", "VariableFilters" }, new[]{ "Bookmark", "Limit", "WfSpecMajorVersion", "WfSpecRevision", "Status", "EarliestStart", "LatestStart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfRunIdList), global::LittleHorse.Common.Proto.WfRunIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchTaskRunRequest), global::LittleHorse.Common.Proto.SearchTaskRunRequest.Parser, new[]{ "Bookmark", "Limit", "TaskDefName", "Status", "EarliestStart", "LatestStart" }, new[]{ "Bookmark", "Limit", "Status", "EarliestStart", "LatestStart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskRunIdList), global::LittleHorse.Common.Proto.TaskRunIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchNodeRunRequest), global::LittleHorse.Common.Proto.SearchNodeRunRequest.Parser, new[]{ "Bookmark", "Limit", "EarliestStart", "LatestStart", "NodeType", "Status" }, new[]{ "Bookmark", "Limit", "EarliestStart", "LatestStart" }, new[]{ typeof(global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.NodeRunIdList), global::LittleHorse.Common.Proto.NodeRunIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchUserTaskRunRequest), global::LittleHorse.Common.Proto.SearchUserTaskRunRequest.Parser, new[]{ "Bookmark", "Limit", "Status", "UserTaskDefName", "UserId", "UserGroup", "EarliestStart", "LatestStart" }, new[]{ "Bookmark", "Limit", "Status", "UserTaskDefName", "UserId", "UserGroup", "EarliestStart", "LatestStart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskRunIdList), global::LittleHorse.Common.Proto.UserTaskRunIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchVariableRequest), global::LittleHorse.Common.Proto.SearchVariableRequest.Parser, new[]{ "Bookmark", "Limit", "Value", "WfSpecMajorVersion", "WfSpecRevision", "VarName", "WfSpecName" }, new[]{ "Bookmark", "Limit", "WfSpecMajorVersion", "WfSpecRevision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.VariableIdList), global::LittleHorse.Common.Proto.VariableIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchTaskDefRequest), global::LittleHorse.Common.Proto.SearchTaskDefRequest.Parser, new[]{ "Bookmark", "Limit", "Prefix" }, new[]{ "Bookmark", "Limit", "Prefix" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskDefIdList), global::LittleHorse.Common.Proto.TaskDefIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchUserTaskDefRequest), global::LittleHorse.Common.Proto.SearchUserTaskDefRequest.Parser, new[]{ "Bookmark", "Limit", "Prefix", "Name" }, new[]{ "UserTaskDefCriteria", "Bookmark", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskDefIdList), global::LittleHorse.Common.Proto.UserTaskDefIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchWfSpecRequest), global::LittleHorse.Common.Proto.SearchWfSpecRequest.Parser, new[]{ "Bookmark", "Limit", "Name", "Prefix", "TaskDefName" }, new[]{ "WfSpecCriteria", "Bookmark", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpecIdList), global::LittleHorse.Common.Proto.WfSpecIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchExternalEventDefRequest), global::LittleHorse.Common.Proto.SearchExternalEventDefRequest.Parser, new[]{ "Bookmark", "Limit", "Prefix" }, new[]{ "Bookmark", "Limit", "Prefix" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ExternalEventDefIdList), global::LittleHorse.Common.Proto.ExternalEventDefIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchTenantRequest), global::LittleHorse.Common.Proto.SearchTenantRequest.Parser, new[]{ "Limit", "Bookmark" }, new[]{ "Limit", "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TenantIdList), global::LittleHorse.Common.Proto.TenantIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchPrincipalRequest), global::LittleHorse.Common.Proto.SearchPrincipalRequest.Parser, new[]{ "Bookmark", "Limit", "EarliestStart", "LatestStart", "IsAdmin", "TenantId" }, new[]{ "PrincipalCriteria", "Bookmark", "Limit", "EarliestStart", "LatestStart" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PrincipalIdList), global::LittleHorse.Common.Proto.PrincipalIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchExternalEventRequest), global::LittleHorse.Common.Proto.SearchExternalEventRequest.Parser, new[]{ "Bookmark", "Limit", "EarliestStart", "LatestStart", "ExternalEventDefId", "IsClaimed" }, new[]{ "Bookmark", "Limit", "EarliestStart", "LatestStart", "IsClaimed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ExternalEventIdList), global::LittleHorse.Common.Proto.ExternalEventIdList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListNodeRunsRequest), global::LittleHorse.Common.Proto.ListNodeRunsRequest.Parser, new[]{ "WfRunId", "ThreadRunNumber", "Bookmark", "Limit" }, new[]{ "ThreadRunNumber", "Bookmark", "Limit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.NodeRunList), global::LittleHorse.Common.Proto.NodeRunList.Parser, new[]{ "Results", "Bookmark" }, new[]{ "Bookmark" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListVariablesRequest), global::LittleHorse.Common.Proto.ListVariablesRequest.Parser, new[]{ "WfRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.VariableList), global::LittleHorse.Common.Proto.VariableList.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListExternalEventsRequest), global::LittleHorse.Common.Proto.ListExternalEventsRequest.Parser, new[]{ "WfRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ExternalEventList), global::LittleHorse.Common.Proto.ExternalEventList.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.RegisterTaskWorkerRequest), global::LittleHorse.Common.Proto.RegisterTaskWorkerRequest.Parser, new[]{ "TaskWorkerId", "TaskDefId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskWorkerHeartBeatRequest), global::LittleHorse.Common.Proto.TaskWorkerHeartBeatRequest.Parser, new[]{ "ClientId", "TaskDefId", "ListenerName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.RegisterTaskWorkerResponse), global::LittleHorse.Common.Proto.RegisterTaskWorkerResponse.Parser, new[]{ "YourHosts", "IsClusterHealthy" }, new[]{ "IsClusterHealthy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.LHHostInfo), global::LittleHorse.Common.Proto.LHHostInfo.Parser, new[]{ "Host", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PollTaskRequest), global::LittleHorse.Common.Proto.PollTaskRequest.Parser, new[]{ "TaskDefId", "ClientId", "TaskWorkerVersion" }, new[]{ "TaskWorkerVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ScheduledTask), global::LittleHorse.Common.Proto.ScheduledTask.Parser, new[]{ "TaskRunId", "TaskDefId", "AttemptNumber", "Variables", "CreatedAt", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.PollTaskResponse), global::LittleHorse.Common.Proto.PollTaskResponse.Parser, new[]{ "Result" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ReportTaskRun), global::LittleHorse.Common.Proto.ReportTaskRun.Parser, new[]{ "TaskRunId", "Time", "Status", "LogOutput", "AttemptNumber", "Output", "Error", "Exception" }, new[]{ "Result", "LogOutput" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.StopWfRunRequest), global::LittleHorse.Common.Proto.StopWfRunRequest.Parser, new[]{ "WfRunId", "ThreadRunNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ResumeWfRunRequest), global::LittleHorse.Common.Proto.ResumeWfRunRequest.Parser, new[]{ "WfRunId", "ThreadRunNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.RescueThreadRunRequest), global::LittleHorse.Common.Proto.RescueThreadRunRequest.Parser, new[]{ "WfRunId", "ThreadRunNumber", "SkipCurrentNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskDefMetricsQueryRequest), global::LittleHorse.Common.Proto.TaskDefMetricsQueryRequest.Parser, new[]{ "WindowStart", "WindowType", "TaskDefName" }, new[]{ "TaskDefName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListTaskMetricsRequest), global::LittleHorse.Common.Proto.ListTaskMetricsRequest.Parser, new[]{ "TaskDefId", "LastWindowStart", "WindowLength", "NumWindows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListTaskMetricsResponse), global::LittleHorse.Common.Proto.ListTaskMetricsResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpecMetricsQueryRequest), global::LittleHorse.Common.Proto.WfSpecMetricsQueryRequest.Parser, new[]{ "WfSpecId", "WindowStart", "WindowLength" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListWfMetricsRequest), global::LittleHorse.Common.Proto.ListWfMetricsRequest.Parser, new[]{ "WfSpecId", "LastWindowStart", "WindowLength", "NumWindows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListWfMetricsResponse), global::LittleHorse.Common.Proto.ListWfMetricsResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskDefMetrics), global::LittleHorse.Common.Proto.TaskDefMetrics.Parser, new[]{ "TaskDefId", "WindowStart", "Type", "ScheduleToStartMax", "ScheduleToStartAvg", "StartToCompleteMax", "StartToCompleteAvg", "TotalCompleted", "TotalErrored", "TotalStarted", "TotalScheduled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.WfSpecMetrics), global::LittleHorse.Common.Proto.WfSpecMetrics.Parser, new[]{ "WfSpecId", "WindowStart", "Type", "TotalStarted", "TotalCompleted", "TotalErrored", "StartToCompleteMax", "StartToCompleteAvg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListUserTaskRunRequest), global::LittleHorse.Common.Proto.ListUserTaskRunRequest.Parser, new[]{ "WfRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.UserTaskRunList), global::LittleHorse.Common.Proto.UserTaskRunList.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ScheduledWfRunIdList), global::LittleHorse.Common.Proto.ScheduledWfRunIdList.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.SearchScheduledWfRunRequest), global::LittleHorse.Common.Proto.SearchScheduledWfRunRequest.Parser, new[]{ "WfSpecName", "MajorVersion", "Revision" }, new[]{ "MajorVersion", "Revision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskWorkerMetadata), global::LittleHorse.Common.Proto.TaskWorkerMetadata.Parser, new[]{ "TaskWorkerId", "LatestHeartbeat", "Hosts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskWorkerGroup), global::LittleHorse.Common.Proto.TaskWorkerGroup.Parser, new[]{ "Id", "CreatedAt", "TaskWorkers" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ListTaskRunsRequest), global::LittleHorse.Common.Proto.ListTaskRunsRequest.Parser, new[]{ "WfRunId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.TaskRunList), global::LittleHorse.Common.Proto.TaskRunList.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.MigrateWfSpecRequest), global::LittleHorse.Common.Proto.MigrateWfSpecRequest.Parser, new[]{ "OldWfSpec", "Migration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.GetLatestWfSpecRequest), global::LittleHorse.Common.Proto.GetLatestWfSpecRequest.Parser, new[]{ "Name", "MajorVersion" }, new[]{ "MajorVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LittleHorse.Common.Proto.ServerVersionResponse), global::LittleHorse.Common.Proto.ServerVersionResponse.Parser, new[]{ "MajorVersion", "MinorVersion", "PatchVersion", "PreReleaseIdentifier" }, new[]{ "PreReleaseIdentifier" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// This enum controls the behavior of a PutWfSpecRequest when a WfSpec with the same
  /// name previously exists.
  /// </summary>
  public enum AllowedUpdateType {
    /// <summary>
    /// Allows any update: both minor (revsion) changes and breaking (majorVersion) changes
    /// are accepted
    /// </summary>
    [pbr::OriginalName("ALL_UPDATES")] AllUpdates = 0,
    /// <summary>
    /// Allows only backwards-compatible changes that do not change the required input variables
    /// or the searchable variables in the WfSpec.
    /// </summary>
    [pbr::OriginalName("MINOR_REVISION_UPDATES")] MinorRevisionUpdates = 1,
    /// <summary>
    /// Rejects any changes to the WfSpec.
    /// </summary>
    [pbr::OriginalName("NO_UPDATES")] NoUpdates = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Returns the UserTaskDef with a given name and the highest version number.
  /// </summary>
  public sealed partial class GetLatestUserTaskDefRequest : pb::IMessage<GetLatestUserTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLatestUserTaskDefRequest> _parser = new pb::MessageParser<GetLatestUserTaskDefRequest>(() => new GetLatestUserTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLatestUserTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestUserTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestUserTaskDefRequest(GetLatestUserTaskDefRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestUserTaskDefRequest Clone() {
      return new GetLatestUserTaskDefRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the UserTaskDef to search for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLatestUserTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLatestUserTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLatestUserTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Creates a WfSpec. Generally, this request is generated by the Workflow object in
  /// our various SDK's.
  /// </summary>
  public sealed partial class PutWfSpecRequest : pb::IMessage<PutWfSpecRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutWfSpecRequest> _parser = new pb::MessageParser<PutWfSpecRequest>(() => new PutWfSpecRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutWfSpecRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWfSpecRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWfSpecRequest(PutWfSpecRequest other) : this() {
      name_ = other.name_;
      threadSpecs_ = other.threadSpecs_.Clone();
      entrypointThreadName_ = other.entrypointThreadName_;
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      parentWfSpec_ = other.parentWfSpec_ != null ? other.parentWfSpec_.Clone() : null;
      allowedUpdates_ = other.allowedUpdates_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWfSpecRequest Clone() {
      return new PutWfSpecRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the resulting WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thread_specs" field.</summary>
    public const int ThreadSpecsFieldNumber = 5;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>.Codec _map_threadSpecs_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.ThreadSpec.Parser), 42);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec> threadSpecs_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec>();
    /// <summary>
    /// Map from name the ThreadSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.ThreadSpec> ThreadSpecs {
      get { return threadSpecs_; }
    }

    /// <summary>Field number for the "entrypoint_thread_name" field.</summary>
    public const int EntrypointThreadNameFieldNumber = 6;
    private string entrypointThreadName_ = "";
    /// <summary>
    /// The name of the ThreadSpec to be used as the workflow entrypoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EntrypointThreadName {
      get { return entrypointThreadName_; }
      set {
        entrypointThreadName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 8;
    private global::LittleHorse.Common.Proto.WorkflowRetentionPolicy retentionPolicy_;
    /// <summary>
    /// Optional policy to determine how long a WfRun is retained in the data store after
    /// it is completed or terminated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WorkflowRetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    /// <summary>Field number for the "parent_wf_spec" field.</summary>
    public const int ParentWfSpecFieldNumber = 9;
    private global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference parentWfSpec_;
    /// <summary>
    /// Parent WfSpec Reference. If this is set, then all WfRun's for this WfSpec *MUST* be
    /// Child WfRun's of the specified WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference ParentWfSpec {
      get { return parentWfSpec_; }
      set {
        parentWfSpec_ = value;
      }
    }

    /// <summary>Field number for the "allowed_updates" field.</summary>
    public const int AllowedUpdatesFieldNumber = 10;
    private global::LittleHorse.Common.Proto.AllowedUpdateType allowedUpdates_ = global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates;
    /// <summary>
    /// Configures the behavior of this individual request. Can be used to prevent
    /// breaking changes to the WfSpec, prevent any changes to the WfSpec, or allow
    /// all changes to the WfSpec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.AllowedUpdateType AllowedUpdates {
      get { return allowedUpdates_; }
      set {
        allowedUpdates_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutWfSpecRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutWfSpecRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!ThreadSpecs.Equals(other.ThreadSpecs)) return false;
      if (EntrypointThreadName != other.EntrypointThreadName) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      if (!object.Equals(ParentWfSpec, other.ParentWfSpec)) return false;
      if (AllowedUpdates != other.AllowedUpdates) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= ThreadSpecs.GetHashCode();
      if (EntrypointThreadName.Length != 0) hash ^= EntrypointThreadName.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (parentWfSpec_ != null) hash ^= ParentWfSpec.GetHashCode();
      if (AllowedUpdates != global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates) hash ^= AllowedUpdates.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      threadSpecs_.WriteTo(output, _map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RetentionPolicy);
      }
      if (parentWfSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ParentWfSpec);
      }
      if (AllowedUpdates != global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates) {
        output.WriteRawTag(80);
        output.WriteEnum((int) AllowedUpdates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      threadSpecs_.WriteTo(ref output, _map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(RetentionPolicy);
      }
      if (parentWfSpec_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ParentWfSpec);
      }
      if (AllowedUpdates != global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates) {
        output.WriteRawTag(80);
        output.WriteEnum((int) AllowedUpdates);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += threadSpecs_.CalculateSize(_map_threadSpecs_codec);
      if (EntrypointThreadName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntrypointThreadName);
      }
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (parentWfSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentWfSpec);
      }
      if (AllowedUpdates != global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AllowedUpdates);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutWfSpecRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      threadSpecs_.MergeFrom(other.threadSpecs_);
      if (other.EntrypointThreadName.Length != 0) {
        EntrypointThreadName = other.EntrypointThreadName;
      }
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      if (other.parentWfSpec_ != null) {
        if (parentWfSpec_ == null) {
          ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
        }
        ParentWfSpec.MergeFrom(other.ParentWfSpec);
      }
      if (other.AllowedUpdates != global::LittleHorse.Common.Proto.AllowedUpdateType.AllUpdates) {
        AllowedUpdates = other.AllowedUpdates;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            threadSpecs_.AddEntriesFrom(input, _map_threadSpecs_codec);
            break;
          }
          case 50: {
            EntrypointThreadName = input.ReadString();
            break;
          }
          case 66: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
          case 74: {
            if (parentWfSpec_ == null) {
              ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
            }
            input.ReadMessage(ParentWfSpec);
            break;
          }
          case 80: {
            AllowedUpdates = (global::LittleHorse.Common.Proto.AllowedUpdateType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            threadSpecs_.AddEntriesFrom(ref input, _map_threadSpecs_codec);
            break;
          }
          case 50: {
            EntrypointThreadName = input.ReadString();
            break;
          }
          case 66: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.WorkflowRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
          case 74: {
            if (parentWfSpec_ == null) {
              ParentWfSpec = new global::LittleHorse.Common.Proto.WfSpec.Types.ParentWfSpecReference();
            }
            input.ReadMessage(ParentWfSpec);
            break;
          }
          case 80: {
            AllowedUpdates = (global::LittleHorse.Common.Proto.AllowedUpdateType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Creates a TaskDef.
  /// </summary>
  public sealed partial class PutTaskDefRequest : pb::IMessage<PutTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutTaskDefRequest> _parser = new pb::MessageParser<PutTaskDefRequest>(() => new PutTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTaskDefRequest(PutTaskDefRequest other) : this() {
      name_ = other.name_;
      inputVars_ = other.inputVars_.Clone();
      outputSchema_ = other.outputSchema_ != null ? other.outputSchema_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutTaskDefRequest Clone() {
      return new PutTaskDefRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the TaskDef to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_vars" field.</summary>
    public const int InputVarsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VariableDef> _repeated_inputVars_codec
        = pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableDef.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableDef> inputVars_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableDef>();
    /// <summary>
    /// Variables required to execute the TaskDef. Normally, these are automatically
    /// generated by the Task Worker SDK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableDef> InputVars {
      get { return inputVars_; }
    }

    /// <summary>Field number for the "output_schema" field.</summary>
    public const int OutputSchemaFieldNumber = 3;
    private global::LittleHorse.Common.Proto.TaskDefOutputSchema outputSchema_;
    /// <summary>
    /// Schema that validates the TaskDef's output
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefOutputSchema OutputSchema {
      get { return outputSchema_; }
      set {
        outputSchema_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!inputVars_.Equals(other.inputVars_)) return false;
      if (!object.Equals(OutputSchema, other.OutputSchema)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= inputVars_.GetHashCode();
      if (outputSchema_ != null) hash ^= OutputSchema.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      inputVars_.WriteTo(output, _repeated_inputVars_codec);
      if (outputSchema_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OutputSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      inputVars_.WriteTo(ref output, _repeated_inputVars_codec);
      if (outputSchema_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OutputSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += inputVars_.CalculateSize(_repeated_inputVars_codec);
      if (outputSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      inputVars_.Add(other.inputVars_);
      if (other.outputSchema_ != null) {
        if (outputSchema_ == null) {
          OutputSchema = new global::LittleHorse.Common.Proto.TaskDefOutputSchema();
        }
        OutputSchema.MergeFrom(other.OutputSchema);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            inputVars_.AddEntriesFrom(input, _repeated_inputVars_codec);
            break;
          }
          case 26: {
            if (outputSchema_ == null) {
              OutputSchema = new global::LittleHorse.Common.Proto.TaskDefOutputSchema();
            }
            input.ReadMessage(OutputSchema);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            inputVars_.AddEntriesFrom(ref input, _repeated_inputVars_codec);
            break;
          }
          case 26: {
            if (outputSchema_ == null) {
              OutputSchema = new global::LittleHorse.Common.Proto.TaskDefOutputSchema();
            }
            input.ReadMessage(OutputSchema);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EXPERIMENTAL: Creates a WorkflowEventDef
  /// </summary>
  public sealed partial class PutWorkflowEventDefRequest : pb::IMessage<PutWorkflowEventDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutWorkflowEventDefRequest> _parser = new pb::MessageParser<PutWorkflowEventDefRequest>(() => new PutWorkflowEventDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutWorkflowEventDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWorkflowEventDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWorkflowEventDefRequest(PutWorkflowEventDefRequest other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutWorkflowEventDefRequest Clone() {
      return new PutWorkflowEventDefRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableType type_ = global::LittleHorse.Common.Proto.VariableType.JsonObj;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutWorkflowEventDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutWorkflowEventDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutWorkflowEventDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type != global::LittleHorse.Common.Proto.VariableType.JsonObj) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Type = (global::LittleHorse.Common.Proto.VariableType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Creates a UserTaskDef.
  /// </summary>
  public sealed partial class PutUserTaskDefRequest : pb::IMessage<PutUserTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutUserTaskDefRequest> _parser = new pb::MessageParser<PutUserTaskDefRequest>(() => new PutUserTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutUserTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutUserTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutUserTaskDefRequest(PutUserTaskDefRequest other) : this() {
      name_ = other.name_;
      fields_ = other.fields_.Clone();
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutUserTaskDefRequest Clone() {
      return new PutUserTaskDefRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the UserTaskDef to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.UserTaskField.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField> fields_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField>();
    /// <summary>
    /// The fields that should be presented to the user on the screen in order to fill
    /// out the User Task. Note that these fields also define a data contract for the
    /// result of the UserTaskDef.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskField> Fields {
      get { return fields_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// Optional metadata field to store user-defined data. Does not impact workflow
    /// execution. Fine to store up to a few KB of text here.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutUserTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutUserTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!fields_.Equals(other.fields_)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      fields_.WriteTo(ref output, _repeated_fields_codec);
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutUserTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      fields_.Add(other.fields_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            fields_.AddEntriesFrom(ref input, _repeated_fields_codec);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Field to create an ExternalEventDef.
  /// </summary>
  public sealed partial class PutExternalEventDefRequest : pb::IMessage<PutExternalEventDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutExternalEventDefRequest> _parser = new pb::MessageParser<PutExternalEventDefRequest>(() => new PutExternalEventDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutExternalEventDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventDefRequest(PutExternalEventDefRequest other) : this() {
      name_ = other.name_;
      retentionPolicy_ = other.retentionPolicy_ != null ? other.retentionPolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventDefRequest Clone() {
      return new PutExternalEventDefRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the resulting ExternalEventDef.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "retention_policy" field.</summary>
    public const int RetentionPolicyFieldNumber = 2;
    private global::LittleHorse.Common.Proto.ExternalEventRetentionPolicy retentionPolicy_;
    /// <summary>
    /// Policy to determine how long an ExternalEvent is retained after creation if it
    /// is not yet claimed by a WfRun. Note that once a WfRun has been matched with the
    /// ExternalEvent, the ExternalEvent is deleted if/when that WfRun is deleted.
    /// If not set, then ExternalEvent's are not deleted if they are not matched with
    /// a WfRun.
    ///
    /// A future version of LittleHorse will allow changing the retention_policy, which
    /// will trigger a cleanup of old `ExternalEvent`s.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventRetentionPolicy RetentionPolicy {
      get { return retentionPolicy_; }
      set {
        retentionPolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutExternalEventDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutExternalEventDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(RetentionPolicy, other.RetentionPolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (retentionPolicy_ != null) hash ^= RetentionPolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (retentionPolicy_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RetentionPolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (retentionPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RetentionPolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutExternalEventDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.retentionPolicy_ != null) {
        if (retentionPolicy_ == null) {
          RetentionPolicy = new global::LittleHorse.Common.Proto.ExternalEventRetentionPolicy();
        }
        RetentionPolicy.MergeFrom(other.RetentionPolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.ExternalEventRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (retentionPolicy_ == null) {
              RetentionPolicy = new global::LittleHorse.Common.Proto.ExternalEventRetentionPolicy();
            }
            input.ReadMessage(RetentionPolicy);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request used to create an ExternalEvent.
  /// </summary>
  public sealed partial class PutExternalEventRequest : pb::IMessage<PutExternalEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PutExternalEventRequest> _parser = new pb::MessageParser<PutExternalEventRequest>(() => new PutExternalEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PutExternalEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventRequest(PutExternalEventRequest other) : this() {
      _hasBits0 = other._hasBits0;
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      externalEventDefId_ = other.externalEventDefId_ != null ? other.externalEventDefId_.Clone() : null;
      guid_ = other.guid_;
      content_ = other.content_ != null ? other.content_.Clone() : null;
      threadRunNumber_ = other.threadRunNumber_;
      nodeRunPosition_ = other.nodeRunPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PutExternalEventRequest Clone() {
      return new PutExternalEventRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The ID of the WfRun that this Event is sent to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "external_event_def_id" field.</summary>
    public const int ExternalEventDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.ExternalEventDefId externalEventDefId_;
    /// <summary>
    /// The ID of the ExternalEventDef that this event implements.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventDefId ExternalEventDefId {
      get { return externalEventDefId_; }
      set {
        externalEventDefId_ = value;
      }
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 3;
    private readonly static string GuidDefaultValue = "";

    private string guid_;
    /// <summary>
    /// Note that an ExternalEventDefId is a three-part ID:
    /// 1. WfRunId
    /// 2. ExternalEventDef Name
    /// 3. A guid
    /// The guid from part 3) can be optionally provided to the PutExternalEventRequest
    /// in order to make it idempotent. It is a best practice to do so.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Guid {
      get { return guid_ ?? GuidDefaultValue; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "guid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGuid {
      get { return guid_ != null; }
    }
    /// <summary>Clears the value of the "guid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGuid() {
      guid_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 5;
    private global::LittleHorse.Common.Proto.VariableValue content_;
    /// <summary>
    /// The content of this event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Content {
      get { return content_; }
      set {
        content_ = value;
      }
    }

    /// <summary>Field number for the "thread_run_number" field.</summary>
    public const int ThreadRunNumberFieldNumber = 6;
    private readonly static int ThreadRunNumberDefaultValue = 0;

    private int threadRunNumber_;
    /// <summary>
    /// Optionally specify that this ExternalEvent may only be claimed by a specific ThreadRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreadRunNumber {
      get { if ((_hasBits0 & 1) != 0) { return threadRunNumber_; } else { return ThreadRunNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        threadRunNumber_ = value;
      }
    }
    /// <summary>Gets whether the "thread_run_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreadRunNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "thread_run_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreadRunNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "node_run_position" field.</summary>
    public const int NodeRunPositionFieldNumber = 7;
    private readonly static int NodeRunPositionDefaultValue = 0;

    private int nodeRunPosition_;
    /// <summary>
    /// Optionally specify that this ExternalEvent may only be claimed by a specific NodeRun.
    /// In order for this to be set, you must also set thread_run_number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NodeRunPosition {
      get { if ((_hasBits0 & 2) != 0) { return nodeRunPosition_; } else { return NodeRunPositionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        nodeRunPosition_ = value;
      }
    }
    /// <summary>Gets whether the "node_run_position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNodeRunPosition {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "node_run_position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNodeRunPosition() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PutExternalEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PutExternalEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if (!object.Equals(ExternalEventDefId, other.ExternalEventDefId)) return false;
      if (Guid != other.Guid) return false;
      if (!object.Equals(Content, other.Content)) return false;
      if (ThreadRunNumber != other.ThreadRunNumber) return false;
      if (NodeRunPosition != other.NodeRunPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (externalEventDefId_ != null) hash ^= ExternalEventDefId.GetHashCode();
      if (HasGuid) hash ^= Guid.GetHashCode();
      if (content_ != null) hash ^= Content.GetHashCode();
      if (HasThreadRunNumber) hash ^= ThreadRunNumber.GetHashCode();
      if (HasNodeRunPosition) hash ^= NodeRunPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (externalEventDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HasGuid) {
        output.WriteRawTag(26);
        output.WriteString(Guid);
      }
      if (content_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Content);
      }
      if (HasThreadRunNumber) {
        output.WriteRawTag(48);
        output.WriteInt32(ThreadRunNumber);
      }
      if (HasNodeRunPosition) {
        output.WriteRawTag(56);
        output.WriteInt32(NodeRunPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (externalEventDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HasGuid) {
        output.WriteRawTag(26);
        output.WriteString(Guid);
      }
      if (content_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Content);
      }
      if (HasThreadRunNumber) {
        output.WriteRawTag(48);
        output.WriteInt32(ThreadRunNumber);
      }
      if (HasNodeRunPosition) {
        output.WriteRawTag(56);
        output.WriteInt32(NodeRunPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (externalEventDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalEventDefId);
      }
      if (HasGuid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (content_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Content);
      }
      if (HasThreadRunNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadRunNumber);
      }
      if (HasNodeRunPosition) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeRunPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PutExternalEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      if (other.externalEventDefId_ != null) {
        if (externalEventDefId_ == null) {
          ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
        }
        ExternalEventDefId.MergeFrom(other.ExternalEventDefId);
      }
      if (other.HasGuid) {
        Guid = other.Guid;
      }
      if (other.content_ != null) {
        if (content_ == null) {
          Content = new global::LittleHorse.Common.Proto.VariableValue();
        }
        Content.MergeFrom(other.Content);
      }
      if (other.HasThreadRunNumber) {
        ThreadRunNumber = other.ThreadRunNumber;
      }
      if (other.HasNodeRunPosition) {
        NodeRunPosition = other.NodeRunPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 18: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 26: {
            Guid = input.ReadString();
            break;
          }
          case 42: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Content);
            break;
          }
          case 48: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 56: {
            NodeRunPosition = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 18: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 26: {
            Guid = input.ReadString();
            break;
          }
          case 42: {
            if (content_ == null) {
              Content = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Content);
            break;
          }
          case 48: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 56: {
            NodeRunPosition = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes an ExternalEvent.
  /// </summary>
  public sealed partial class DeleteExternalEventRequest : pb::IMessage<DeleteExternalEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteExternalEventRequest> _parser = new pb::MessageParser<DeleteExternalEventRequest>(() => new DeleteExternalEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteExternalEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventRequest(DeleteExternalEventRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventRequest Clone() {
      return new DeleteExternalEventRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ExternalEventId id_;
    /// <summary>
    /// The ID of the ExternalEvent to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteExternalEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteExternalEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteExternalEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.ExternalEventId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ExternalEventId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ExternalEventId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Delete an existing ScheduledWfRun, returns INVALID_ARGUMENT if object does not exist
  /// </summary>
  public sealed partial class DeleteScheduledWfRunRequest : pb::IMessage<DeleteScheduledWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteScheduledWfRunRequest> _parser = new pb::MessageParser<DeleteScheduledWfRunRequest>(() => new DeleteScheduledWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteScheduledWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteScheduledWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteScheduledWfRunRequest(DeleteScheduledWfRunRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteScheduledWfRunRequest Clone() {
      return new DeleteScheduledWfRunRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ScheduledWfRunId id_;
    /// <summary>
    /// Id of the `ScheduledWfRun` to be deleted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ScheduledWfRunId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteScheduledWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteScheduledWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteScheduledWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.ScheduledWfRunId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ScheduledWfRunId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ScheduledWfRunId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes a WfRun.
  /// </summary>
  public sealed partial class DeleteWfRunRequest : pb::IMessage<DeleteWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWfRunRequest> _parser = new pb::MessageParser<DeleteWfRunRequest>(() => new DeleteWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfRunRequest(DeleteWfRunRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfRunRequest Clone() {
      return new DeleteWfRunRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId id_;
    /// <summary>
    /// The ID of the WfRun to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.WfRunId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes a TaskDef.
  /// </summary>
  public sealed partial class DeleteTaskDefRequest : pb::IMessage<DeleteTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteTaskDefRequest> _parser = new pb::MessageParser<DeleteTaskDefRequest>(() => new DeleteTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTaskDefRequest(DeleteTaskDefRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteTaskDefRequest Clone() {
      return new DeleteTaskDefRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskDefId id_;
    /// <summary>
    /// The ID of the TaskDef to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes a UserTaskDef.
  /// </summary>
  public sealed partial class DeleteUserTaskDefRequest : pb::IMessage<DeleteUserTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteUserTaskDefRequest> _parser = new pb::MessageParser<DeleteUserTaskDefRequest>(() => new DeleteUserTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteUserTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteUserTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteUserTaskDefRequest(DeleteUserTaskDefRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteUserTaskDefRequest Clone() {
      return new DeleteUserTaskDefRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.UserTaskDefId id_;
    /// <summary>
    /// The ID of the UserTaskDef to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskDefId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteUserTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteUserTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteUserTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.UserTaskDefId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.UserTaskDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.UserTaskDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes a WfSpec
  /// </summary>
  public sealed partial class DeleteWfSpecRequest : pb::IMessage<DeleteWfSpecRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteWfSpecRequest> _parser = new pb::MessageParser<DeleteWfSpecRequest>(() => new DeleteWfSpecRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteWfSpecRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfSpecRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfSpecRequest(DeleteWfSpecRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteWfSpecRequest Clone() {
      return new DeleteWfSpecRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId id_;
    /// <summary>
    /// The ID of the WfSpec to delete
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteWfSpecRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteWfSpecRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteWfSpecRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Deletes an ExternalEventDef
  /// </summary>
  public sealed partial class DeleteExternalEventDefRequest : pb::IMessage<DeleteExternalEventDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeleteExternalEventDefRequest> _parser = new pb::MessageParser<DeleteExternalEventDefRequest>(() => new DeleteExternalEventDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeleteExternalEventDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventDefRequest(DeleteExternalEventDefRequest other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeleteExternalEventDefRequest Clone() {
      return new DeleteExternalEventDefRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ExternalEventDefId id_;
    /// <summary>
    /// The ID of the ExternalEventDef to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventDefId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeleteExternalEventDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeleteExternalEventDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeleteExternalEventDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.ExternalEventDefId();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(Id);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Create a Workflow Run.
  /// </summary>
  public sealed partial class RunWfRequest : pb::IMessage<RunWfRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RunWfRequest> _parser = new pb::MessageParser<RunWfRequest>(() => new RunWfRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RunWfRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunWfRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunWfRequest(RunWfRequest other) : this() {
      _hasBits0 = other._hasBits0;
      wfSpecName_ = other.wfSpecName_;
      majorVersion_ = other.majorVersion_;
      revision_ = other.revision_;
      variables_ = other.variables_.Clone();
      id_ = other.id_;
      parentWfRunId_ = other.parentWfRunId_ != null ? other.parentWfRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RunWfRequest Clone() {
      return new RunWfRequest(this);
    }

    /// <summary>Field number for the "wf_spec_name" field.</summary>
    public const int WfSpecNameFieldNumber = 1;
    private string wfSpecName_ = "";
    /// <summary>
    /// The name of the WfSpec to run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WfSpecName {
      get { return wfSpecName_; }
      set {
        wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private readonly static int MajorVersionDefaultValue = 0;

    private int majorVersion_;
    /// <summary>
    /// Optionally specify the major version of the WfSpec to run. This guarantees that
    /// the "signature" of the WfSpec (i.e. the required input variables, and searchable
    /// variables) will not change for this app.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { if ((_hasBits0 & 1) != 0) { return majorVersion_; } else { return MajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 3;
    private readonly static int RevisionDefaultValue = 0;

    private int revision_;
    /// <summary>
    /// Optionally specify the specific revision of the WfSpec to run. It is not recommended
    /// to use this in practice, as the WfSpec logic should be de-coupled from the applications
    /// that run WfRun's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Revision {
      get { if ((_hasBits0 & 2) != 0) { return revision_; } else { return RevisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        revision_ = value;
      }
    }
    /// <summary>Gets whether the "revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRevision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRevision() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 4;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_variables_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 34);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> variables_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
    /// <summary>
    /// A map from Variable Name to Values for those variables. The provided variables are
    /// passed as input to the Entrypoint ThreadRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Variables {
      get { return variables_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private readonly static string IdDefaultValue = "";

    private string id_;
    /// <summary>
    /// You can optionally specify the ID of this WfRun. This is a recommended best practice
    /// as it also makes your request idempotent and allows you to easily find the WfRun at
    /// a later time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "parent_wf_run_id" field.</summary>
    public const int ParentWfRunIdFieldNumber = 6;
    private global::LittleHorse.Common.Proto.WfRunId parentWfRunId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId ParentWfRunId {
      get { return parentWfRunId_; }
      set {
        parentWfRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RunWfRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RunWfRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WfSpecName != other.WfSpecName) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (Revision != other.Revision) return false;
      if (!Variables.Equals(other.Variables)) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(ParentWfRunId, other.ParentWfRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
      if (HasMajorVersion) hash ^= MajorVersion.GetHashCode();
      if (HasRevision) hash ^= Revision.GetHashCode();
      hash ^= Variables.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (parentWfRunId_ != null) hash ^= ParentWfRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(24);
        output.WriteInt32(Revision);
      }
      variables_.WriteTo(output, _map_variables_codec);
      if (HasId) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      if (parentWfRunId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParentWfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(24);
        output.WriteInt32(Revision);
      }
      variables_.WriteTo(ref output, _map_variables_codec);
      if (HasId) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      if (parentWfRunId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParentWfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WfSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
      }
      if (HasMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (HasRevision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Revision);
      }
      size += variables_.CalculateSize(_map_variables_codec);
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (parentWfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentWfRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RunWfRequest other) {
      if (other == null) {
        return;
      }
      if (other.WfSpecName.Length != 0) {
        WfSpecName = other.WfSpecName;
      }
      if (other.HasMajorVersion) {
        MajorVersion = other.MajorVersion;
      }
      if (other.HasRevision) {
        Revision = other.Revision;
      }
      variables_.MergeFrom(other.variables_);
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.parentWfRunId_ != null) {
        if (parentWfRunId_ == null) {
          ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        ParentWfRunId.MergeFrom(other.ParentWfRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WfSpecName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            Revision = input.ReadInt32();
            break;
          }
          case 34: {
            variables_.AddEntriesFrom(input, _map_variables_codec);
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            if (parentWfRunId_ == null) {
              ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(ParentWfRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WfSpecName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            Revision = input.ReadInt32();
            break;
          }
          case 34: {
            variables_.AddEntriesFrom(ref input, _map_variables_codec);
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 50: {
            if (parentWfRunId_ == null) {
              ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(ParentWfRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Schedule WfRuns based on a specific cron UNIX expression
  /// </summary>
  public sealed partial class ScheduleWfRequest : pb::IMessage<ScheduleWfRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduleWfRequest> _parser = new pb::MessageParser<ScheduleWfRequest>(() => new ScheduleWfRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduleWfRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleWfRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleWfRequest(ScheduleWfRequest other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      wfSpecName_ = other.wfSpecName_;
      majorVersion_ = other.majorVersion_;
      revision_ = other.revision_;
      variables_ = other.variables_.Clone();
      parentWfRunId_ = other.parentWfRunId_ != null ? other.parentWfRunId_.Clone() : null;
      cronExpression_ = other.cronExpression_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduleWfRequest Clone() {
      return new ScheduleWfRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    /// <summary>
    /// Specific ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "wf_spec_name" field.</summary>
    public const int WfSpecNameFieldNumber = 2;
    private string wfSpecName_ = "";
    /// <summary>
    /// The name of the WfSpec to run.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WfSpecName {
      get { return wfSpecName_; }
      set {
        wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 3;
    private readonly static int MajorVersionDefaultValue = 0;

    private int majorVersion_;
    /// <summary>
    /// Optionally specify the major version of the WfSpec to run. This guarantees that
    /// the "signature" of the WfSpec (i.e. the required input variables, and searchable
    /// variables) will not change for this app.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { if ((_hasBits0 & 1) != 0) { return majorVersion_; } else { return MajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 4;
    private readonly static int RevisionDefaultValue = 0;

    private int revision_;
    /// <summary>
    /// Optionally specify the specific revision of the WfSpec to run. It is not recommended
    /// to use this in practice, as the WfSpec logic should be de-coupled from the applications
    /// that run WfRun's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Revision {
      get { if ((_hasBits0 & 2) != 0) { return revision_; } else { return RevisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        revision_ = value;
      }
    }
    /// <summary>Gets whether the "revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRevision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRevision() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 5;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec _map_variables_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.VariableValue.Parser), 42);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> variables_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue>();
    /// <summary>
    /// A map from Variable Name to Values for those variables. The provided variables are
    /// passed as input to the Entrypoint ThreadRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.VariableValue> Variables {
      get { return variables_; }
    }

    /// <summary>Field number for the "parent_wf_run_id" field.</summary>
    public const int ParentWfRunIdFieldNumber = 6;
    private global::LittleHorse.Common.Proto.WfRunId parentWfRunId_;
    /// <summary>
    /// Parent WfRunId associated with all the generated WfRuns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId ParentWfRunId {
      get { return parentWfRunId_; }
      set {
        parentWfRunId_ = value;
      }
    }

    /// <summary>Field number for the "cron_expression" field.</summary>
    public const int CronExpressionFieldNumber = 7;
    private string cronExpression_ = "";
    /// <summary>
    /// UNIX expression used to specify the schedule for executing WfRuns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CronExpression {
      get { return cronExpression_; }
      set {
        cronExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduleWfRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduleWfRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (WfSpecName != other.WfSpecName) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (Revision != other.Revision) return false;
      if (!Variables.Equals(other.Variables)) return false;
      if (!object.Equals(ParentWfRunId, other.ParentWfRunId)) return false;
      if (CronExpression != other.CronExpression) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
      if (HasMajorVersion) hash ^= MajorVersion.GetHashCode();
      if (HasRevision) hash ^= Revision.GetHashCode();
      hash ^= Variables.GetHashCode();
      if (parentWfRunId_ != null) hash ^= ParentWfRunId.GetHashCode();
      if (CronExpression.Length != 0) hash ^= CronExpression.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(32);
        output.WriteInt32(Revision);
      }
      variables_.WriteTo(output, _map_variables_codec);
      if (parentWfRunId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParentWfRunId);
      }
      if (CronExpression.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CronExpression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(24);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(32);
        output.WriteInt32(Revision);
      }
      variables_.WriteTo(ref output, _map_variables_codec);
      if (parentWfRunId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParentWfRunId);
      }
      if (CronExpression.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CronExpression);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (WfSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
      }
      if (HasMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (HasRevision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Revision);
      }
      size += variables_.CalculateSize(_map_variables_codec);
      if (parentWfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParentWfRunId);
      }
      if (CronExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CronExpression);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduleWfRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.WfSpecName.Length != 0) {
        WfSpecName = other.WfSpecName;
      }
      if (other.HasMajorVersion) {
        MajorVersion = other.MajorVersion;
      }
      if (other.HasRevision) {
        Revision = other.Revision;
      }
      variables_.MergeFrom(other.variables_);
      if (other.parentWfRunId_ != null) {
        if (parentWfRunId_ == null) {
          ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        ParentWfRunId.MergeFrom(other.ParentWfRunId);
      }
      if (other.CronExpression.Length != 0) {
        CronExpression = other.CronExpression;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            WfSpecName = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            Revision = input.ReadInt32();
            break;
          }
          case 42: {
            variables_.AddEntriesFrom(input, _map_variables_codec);
            break;
          }
          case 50: {
            if (parentWfRunId_ == null) {
              ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(ParentWfRunId);
            break;
          }
          case 58: {
            CronExpression = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            WfSpecName = input.ReadString();
            break;
          }
          case 24: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 32: {
            Revision = input.ReadInt32();
            break;
          }
          case 42: {
            variables_.AddEntriesFrom(ref input, _map_variables_codec);
            break;
          }
          case 50: {
            if (parentWfRunId_ == null) {
              ParentWfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(ParentWfRunId);
            break;
          }
          case 58: {
            CronExpression = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used by a SearchWfRunRequest to filter WfRun's and only return those whose Variable's
  /// match a certain filter.
  /// </summary>
  public sealed partial class VariableMatch : pb::IMessage<VariableMatch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VariableMatch> _parser = new pb::MessageParser<VariableMatch>(() => new VariableMatch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VariableMatch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableMatch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableMatch(VariableMatch other) : this() {
      varName_ = other.varName_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableMatch Clone() {
      return new VariableMatch(this);
    }

    /// <summary>Field number for the "var_name" field.</summary>
    public const int VarNameFieldNumber = 1;
    private string varName_ = "";
    /// <summary>
    /// The name of the variable to inspect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VarName {
      get { return varName_; }
      set {
        varName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::LittleHorse.Common.Proto.VariableValue value_;
    /// <summary>
    /// The value that the Variable must have in order to satisfy this VariableMatch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VariableMatch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VariableMatch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VarName != other.VarName) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VarName.Length != 0) hash ^= VarName.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VarName);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VarName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VarName);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarName);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VariableMatch other) {
      if (other == null) {
        return;
      }
      if (other.VarName.Length != 0) {
        VarName = other.VarName;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::LittleHorse.Common.Proto.VariableValue();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VarName = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VarName = input.ReadString();
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to await until a WorkflowEvent of a certain WorkflowEventDef on a certain WfRun
  /// is thrown. Relies upon native GRPC deadlines to configure timeouts.
  /// </summary>
  public sealed partial class AwaitWorkflowEventRequest : pb::IMessage<AwaitWorkflowEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AwaitWorkflowEventRequest> _parser = new pb::MessageParser<AwaitWorkflowEventRequest>(() => new AwaitWorkflowEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AwaitWorkflowEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwaitWorkflowEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwaitWorkflowEventRequest(AwaitWorkflowEventRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      eventDefIds_ = other.eventDefIds_.Clone();
      workflowEventsToIgnore_ = other.workflowEventsToIgnore_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AwaitWorkflowEventRequest Clone() {
      return new AwaitWorkflowEventRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The ID of the WfRun which must throw the WorkflowEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "event_def_ids" field.</summary>
    public const int EventDefIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WorkflowEventDefId> _repeated_eventDefIds_codec
        = pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.WorkflowEventDefId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventDefId> eventDefIds_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventDefId>();
    /// <summary>
    /// The IDs of the WorkflowEventDef that must be thrown. The request will return the first matching
    /// WorkflowEvent is thrown. If event_def_ids is empty, then the request will return the first
    /// WorkflowEvent thrown by the WfRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventDefId> EventDefIds {
      get { return eventDefIds_; }
    }

    /// <summary>Field number for the "workflow_events_to_ignore" field.</summary>
    public const int WorkflowEventsToIgnoreFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WorkflowEventId> _repeated_workflowEventsToIgnore_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.WorkflowEventId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventId> workflowEventsToIgnore_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventId>();
    /// <summary>
    /// Since a single WfRun may throw multiple WorkflowEvent's with the same WorkflowEventDefId, it
    /// is necessary to provide a client the ability to "ignore" WorkflowEvent's that have already been
    /// 'awaited'. Any WorkflowEvent specified by this field is ignored by the rpc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.WorkflowEventId> WorkflowEventsToIgnore {
      get { return workflowEventsToIgnore_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AwaitWorkflowEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AwaitWorkflowEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if(!eventDefIds_.Equals(other.eventDefIds_)) return false;
      if(!workflowEventsToIgnore_.Equals(other.workflowEventsToIgnore_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      hash ^= eventDefIds_.GetHashCode();
      hash ^= workflowEventsToIgnore_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      eventDefIds_.WriteTo(output, _repeated_eventDefIds_codec);
      workflowEventsToIgnore_.WriteTo(output, _repeated_workflowEventsToIgnore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      eventDefIds_.WriteTo(ref output, _repeated_eventDefIds_codec);
      workflowEventsToIgnore_.WriteTo(ref output, _repeated_workflowEventsToIgnore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      size += eventDefIds_.CalculateSize(_repeated_eventDefIds_codec);
      size += workflowEventsToIgnore_.CalculateSize(_repeated_workflowEventsToIgnore_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AwaitWorkflowEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      eventDefIds_.Add(other.eventDefIds_);
      workflowEventsToIgnore_.Add(other.workflowEventsToIgnore_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 18: {
            eventDefIds_.AddEntriesFrom(input, _repeated_eventDefIds_codec);
            break;
          }
          case 26: {
            workflowEventsToIgnore_.AddEntriesFrom(input, _repeated_workflowEventsToIgnore_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 18: {
            eventDefIds_.AddEntriesFrom(ref input, _repeated_eventDefIds_codec);
            break;
          }
          case 26: {
            workflowEventsToIgnore_.AddEntriesFrom(ref input, _repeated_workflowEventsToIgnore_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A request used to retrieve a list of WfRunId's by certain criteria.
  /// </summary>
  public sealed partial class SearchWfRunRequest : pb::IMessage<SearchWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchWfRunRequest> _parser = new pb::MessageParser<SearchWfRunRequest>(() => new SearchWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfRunRequest(SearchWfRunRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      wfSpecName_ = other.wfSpecName_;
      wfSpecMajorVersion_ = other.wfSpecMajorVersion_;
      wfSpecRevision_ = other.wfSpecRevision_;
      status_ = other.status_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      variableFilters_ = other.variableFilters_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfRunRequest Clone() {
      return new SearchWfRunRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "wf_spec_name" field.</summary>
    public const int WfSpecNameFieldNumber = 3;
    private string wfSpecName_ = "";
    /// <summary>
    /// The WfSpec whose WfRun's we are searching for. This is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WfSpecName {
      get { return wfSpecName_; }
      set {
        wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wf_spec_major_version" field.</summary>
    public const int WfSpecMajorVersionFieldNumber = 4;
    private readonly static int WfSpecMajorVersionDefaultValue = 0;

    private int wfSpecMajorVersion_;
    /// <summary>
    /// Specifies to return only WfRun's from this WfSpec Major Version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WfSpecMajorVersion {
      get { if ((_hasBits0 & 2) != 0) { return wfSpecMajorVersion_; } else { return WfSpecMajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        wfSpecMajorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "wf_spec_major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWfSpecMajorVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wf_spec_major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfSpecMajorVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "wf_spec_revision" field.</summary>
    public const int WfSpecRevisionFieldNumber = 5;
    private readonly static int WfSpecRevisionDefaultValue = 0;

    private int wfSpecRevision_;
    /// <summary>
    /// Specifies to return only WfRun's from this WfSpec Revision. Can only be set if
    /// wf_spec_major_version is also set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WfSpecRevision {
      get { if ((_hasBits0 & 4) != 0) { return wfSpecRevision_; } else { return WfSpecRevisionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        wfSpecRevision_ = value;
      }
    }
    /// <summary>Gets whether the "wf_spec_revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWfSpecRevision {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "wf_spec_revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfSpecRevision() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private readonly static global::LittleHorse.Common.Proto.LHStatus StatusDefaultValue = global::LittleHorse.Common.Proto.LHStatus.Starting;

    private global::LittleHorse.Common.Proto.LHStatus status_;
    /// <summary>
    /// Specifies to return only WfRun's matching this status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHStatus Status {
      get { if ((_hasBits0 & 8) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Specifies to return only WfRun's that started after this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Specifies to return only WfRun's that started before this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    /// <summary>Field number for the "variable_filters" field.</summary>
    public const int VariableFiltersFieldNumber = 9;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VariableMatch> _repeated_variableFilters_codec
        = pb::FieldCodec.ForMessage(74, global::LittleHorse.Common.Proto.VariableMatch.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMatch> variableFilters_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMatch>();
    /// <summary>
    /// Allows filtering WfRun's based on the value of the Variables. This ONLY
    /// works for the Variables in the entrypiont threadrun (that is, variables
    /// where the threadRunNumber == 0).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableMatch> VariableFilters {
      get { return variableFilters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (WfSpecName != other.WfSpecName) return false;
      if (WfSpecMajorVersion != other.WfSpecMajorVersion) return false;
      if (WfSpecRevision != other.WfSpecRevision) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      if(!variableFilters_.Equals(other.variableFilters_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
      if (HasWfSpecMajorVersion) hash ^= WfSpecMajorVersion.GetHashCode();
      if (HasWfSpecRevision) hash ^= WfSpecRevision.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      hash ^= variableFilters_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WfSpecName);
      }
      if (HasWfSpecMajorVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        output.WriteRawTag(40);
        output.WriteInt32(WfSpecRevision);
      }
      if (HasStatus) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LatestStart);
      }
      variableFilters_.WriteTo(output, _repeated_variableFilters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WfSpecName);
      }
      if (HasWfSpecMajorVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        output.WriteRawTag(40);
        output.WriteInt32(WfSpecRevision);
      }
      if (HasStatus) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LatestStart);
      }
      variableFilters_.WriteTo(ref output, _repeated_variableFilters_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (WfSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
      }
      if (HasWfSpecMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WfSpecRevision);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      size += variableFilters_.CalculateSize(_repeated_variableFilters_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.WfSpecName.Length != 0) {
        WfSpecName = other.WfSpecName;
      }
      if (other.HasWfSpecMajorVersion) {
        WfSpecMajorVersion = other.WfSpecMajorVersion;
      }
      if (other.HasWfSpecRevision) {
        WfSpecRevision = other.WfSpecRevision;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      variableFilters_.Add(other.variableFilters_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            WfSpecName = input.ReadString();
            break;
          }
          case 32: {
            WfSpecMajorVersion = input.ReadInt32();
            break;
          }
          case 40: {
            WfSpecRevision = input.ReadInt32();
            break;
          }
          case 48: {
            Status = (global::LittleHorse.Common.Proto.LHStatus) input.ReadEnum();
            break;
          }
          case 58: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 66: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 74: {
            variableFilters_.AddEntriesFrom(input, _repeated_variableFilters_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            WfSpecName = input.ReadString();
            break;
          }
          case 32: {
            WfSpecMajorVersion = input.ReadInt32();
            break;
          }
          case 40: {
            WfSpecRevision = input.ReadInt32();
            break;
          }
          case 48: {
            Status = (global::LittleHorse.Common.Proto.LHStatus) input.ReadEnum();
            break;
          }
          case 58: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 66: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 74: {
            variableFilters_.AddEntriesFrom(ref input, _repeated_variableFilters_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of WfRun Id's
  /// </summary>
  public sealed partial class WfRunIdList : pb::IMessage<WfRunIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfRunIdList> _parser = new pb::MessageParser<WfRunIdList>(() => new WfRunIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfRunIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfRunIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfRunIdList(WfRunIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfRunIdList Clone() {
      return new WfRunIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WfRunId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.WfRunId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WfRunId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WfRunId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.WfRunId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfRunIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfRunIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfRunIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Searches for TaskRuns by various criteria.
  /// </summary>
  public sealed partial class SearchTaskRunRequest : pb::IMessage<SearchTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchTaskRunRequest> _parser = new pb::MessageParser<SearchTaskRunRequest>(() => new SearchTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskRunRequest(SearchTaskRunRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      taskDefName_ = other.taskDefName_;
      status_ = other.status_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskRunRequest Clone() {
      return new SearchTaskRunRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "task_def_name" field.</summary>
    public const int TaskDefNameFieldNumber = 3;
    private string taskDefName_ = "";
    /// <summary>
    /// Specifies the TaskDef of TaskRun's to return. This is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskDefName {
      get { return taskDefName_; }
      set {
        taskDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private readonly static global::LittleHorse.Common.Proto.TaskStatus StatusDefaultValue = global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled;

    private global::LittleHorse.Common.Proto.TaskStatus status_;
    /// <summary>
    /// Specifies to only return TaskRun's matching this status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskStatus Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Specifies to only return TaskRun's that were scheduled after this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Specifies to only return TaskRun's that were scheduled before this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (TaskDefName != other.TaskDefName) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (TaskDefName.Length != 0) hash ^= TaskDefName.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (TaskDefName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskDefName);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LatestStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (TaskDefName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskDefName);
      }
      if (HasStatus) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LatestStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (TaskDefName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskDefName);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.TaskDefName.Length != 0) {
        TaskDefName = other.TaskDefName;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            TaskDefName = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 50: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            TaskDefName = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 42: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 50: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of TaskRun ID's.
  /// </summary>
  public sealed partial class TaskRunIdList : pb::IMessage<TaskRunIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRunIdList> _parser = new pb::MessageParser<TaskRunIdList>(() => new TaskRunIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRunIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunIdList(TaskRunIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunIdList Clone() {
      return new TaskRunIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TaskRunId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.TaskRunId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRunId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRunId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRunId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRunIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRunIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRunIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for NodeRun's by certain criteria.
  /// </summary>
  public sealed partial class SearchNodeRunRequest : pb::IMessage<SearchNodeRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchNodeRunRequest> _parser = new pb::MessageParser<SearchNodeRunRequest>(() => new SearchNodeRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchNodeRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchNodeRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchNodeRunRequest(SearchNodeRunRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      nodeType_ = other.nodeType_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchNodeRunRequest Clone() {
      return new SearchNodeRunRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Only return NodeRun's created after this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Only return NodeRun's created before this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    /// <summary>Field number for the "node_type" field.</summary>
    public const int NodeTypeFieldNumber = 5;
    private global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType nodeType_ = global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task;
    /// <summary>
    /// Specifies the type of NodeRun to search for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType NodeType {
      get { return nodeType_; }
      set {
        nodeType_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private global::LittleHorse.Common.Proto.LHStatus status_ = global::LittleHorse.Common.Proto.LHStatus.Starting;
    /// <summary>
    /// Specifies the status of NodeRun to search for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchNodeRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchNodeRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      if (NodeType != other.NodeType) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      if (NodeType != global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task) hash ^= NodeType.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.LHStatus.Starting) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (NodeType != global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NodeType);
      }
      if (Status != global::LittleHorse.Common.Proto.LHStatus.Starting) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (NodeType != global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NodeType);
      }
      if (Status != global::LittleHorse.Common.Proto.LHStatus.Starting) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      if (NodeType != global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NodeType);
      }
      if (Status != global::LittleHorse.Common.Proto.LHStatus.Starting) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchNodeRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      if (other.NodeType != global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType.Task) {
        NodeType = other.NodeType;
      }
      if (other.Status != global::LittleHorse.Common.Proto.LHStatus.Starting) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 40: {
            NodeType = (global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType) input.ReadEnum();
            break;
          }
          case 48: {
            Status = (global::LittleHorse.Common.Proto.LHStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 40: {
            NodeType = (global::LittleHorse.Common.Proto.SearchNodeRunRequest.Types.NodeType) input.ReadEnum();
            break;
          }
          case 48: {
            Status = (global::LittleHorse.Common.Proto.LHStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SearchNodeRunRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// This enum denotes the type of a NodeRun.
      /// </summary>
      public enum NodeType {
        /// <summary>
        /// TASK node schedules a TaskRun
        /// </summary>
        [pbr::OriginalName("TASK")] Task = 0,
        /// <summary>
        /// EXTERNAL_EVENT blocks the ThreadRun until a specified ExternalEvent arrives
        /// </summary>
        [pbr::OriginalName("EXTERNAL_EVENT")] ExternalEvent = 1,
        /// <summary>
        /// ENTRYPOINT kicks off a ThreadRun
        /// </summary>
        [pbr::OriginalName("ENTRYPOINT")] Entrypoint = 2,
        /// <summary>
        /// EXIT completes a ThreadRun
        /// </summary>
        [pbr::OriginalName("EXIT")] Exit = 3,
        /// <summary>
        /// START_THREAD creates a Child ThreadRun
        /// </summary>
        [pbr::OriginalName("START_THREAD")] StartThread = 4,
        /// <summary>
        /// WAIT_THREADS waits for one or more child ThreadRuns to complete
        /// </summary>
        [pbr::OriginalName("WAIT_THREADS")] WaitThreads = 5,
        /// <summary>
        /// SLEEP makes the ThreadRun sleep for a specified time
        /// </summary>
        [pbr::OriginalName("SLEEP")] Sleep = 6,
        /// <summary>
        /// USER_TASK creates a UserTaskRun and blocks until the UserTaskRun is completed.
        /// </summary>
        [pbr::OriginalName("USER_TASK")] UserTask = 7,
        /// <summary>
        /// START_MULTIPLE_THREADS iterates over a list and starts a Child Thread for each item
        /// </summary>
        [pbr::OriginalName("START_MULTIPLE_THREADS")] StartMultipleThreads = 8,
      }

    }
    #endregion

  }

  /// <summary>
  /// List of NodeRun Id's.
  /// </summary>
  public sealed partial class NodeRunIdList : pb::IMessage<NodeRunIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeRunIdList> _parser = new pb::MessageParser<NodeRunIdList>(() => new NodeRunIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeRunIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunIdList(NodeRunIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunIdList Clone() {
      return new NodeRunIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.NodeRunId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.NodeRunId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRunId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRunId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRunId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeRunIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeRunIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeRunIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for UserTaskRun's matching certain criteria. The attributes are additive,
  /// you may specify any combination of fields in this request. Only UserTaskRun's
  /// matching all criteria will be returned.
  /// </summary>
  public sealed partial class SearchUserTaskRunRequest : pb::IMessage<SearchUserTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchUserTaskRunRequest> _parser = new pb::MessageParser<SearchUserTaskRunRequest>(() => new SearchUserTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchUserTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskRunRequest(SearchUserTaskRunRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      status_ = other.status_;
      userTaskDefName_ = other.userTaskDefName_;
      userId_ = other.userId_;
      userGroup_ = other.userGroup_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskRunRequest Clone() {
      return new SearchUserTaskRunRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private readonly static global::LittleHorse.Common.Proto.UserTaskRunStatus StatusDefaultValue = global::LittleHorse.Common.Proto.UserTaskRunStatus.Unassigned;

    private global::LittleHorse.Common.Proto.UserTaskRunStatus status_;
    /// <summary>
    /// Status of UserTaskRun's to return.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.UserTaskRunStatus Status {
      get { if ((_hasBits0 & 2) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "user_task_def_name" field.</summary>
    public const int UserTaskDefNameFieldNumber = 4;
    private readonly static string UserTaskDefNameDefaultValue = "";

    private string userTaskDefName_;
    /// <summary>
    /// UserTaskDef name to search for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserTaskDefName {
      get { return userTaskDefName_ ?? UserTaskDefNameDefaultValue; }
      set {
        userTaskDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_task_def_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserTaskDefName {
      get { return userTaskDefName_ != null; }
    }
    /// <summary>Clears the value of the "user_task_def_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserTaskDefName() {
      userTaskDefName_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 5;
    private readonly static string UserIdDefaultValue = "";

    private string userId_;
    /// <summary>
    /// Search for UserTaskRun's assigned to this user id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_ ?? UserIdDefaultValue; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return userId_ != null; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      userId_ = null;
    }

    /// <summary>Field number for the "user_group" field.</summary>
    public const int UserGroupFieldNumber = 6;
    private readonly static string UserGroupDefaultValue = "";

    private string userGroup_;
    /// <summary>
    /// Search for UserTaskRun's assigned to this user group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserGroup {
      get { return userGroup_ ?? UserGroupDefaultValue; }
      set {
        userGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "user_group" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserGroup {
      get { return userGroup_ != null; }
    }
    /// <summary>Clears the value of the "user_group" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserGroup() {
      userGroup_ = null;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Search for UserTaskRun's that were created after this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Search for UserTaskRun's that were created before this time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchUserTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchUserTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (Status != other.Status) return false;
      if (UserTaskDefName != other.UserTaskDefName) return false;
      if (UserId != other.UserId) return false;
      if (UserGroup != other.UserGroup) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasUserTaskDefName) hash ^= UserTaskDefName.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasUserGroup) hash ^= UserGroup.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (HasUserTaskDefName) {
        output.WriteRawTag(34);
        output.WriteString(UserTaskDefName);
      }
      if (HasUserId) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(50);
        output.WriteString(UserGroup);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LatestStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasStatus) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (HasUserTaskDefName) {
        output.WriteRawTag(34);
        output.WriteString(UserTaskDefName);
      }
      if (HasUserId) {
        output.WriteRawTag(42);
        output.WriteString(UserId);
      }
      if (HasUserGroup) {
        output.WriteRawTag(50);
        output.WriteString(UserGroup);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LatestStart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (HasUserTaskDefName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserTaskDefName);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (HasUserGroup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserGroup);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchUserTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasUserTaskDefName) {
        UserTaskDefName = other.UserTaskDefName;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasUserGroup) {
        UserGroup = other.UserGroup;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 24: {
            Status = (global::LittleHorse.Common.Proto.UserTaskRunStatus) input.ReadEnum();
            break;
          }
          case 34: {
            UserTaskDefName = input.ReadString();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            UserGroup = input.ReadString();
            break;
          }
          case 58: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 66: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 24: {
            Status = (global::LittleHorse.Common.Proto.UserTaskRunStatus) input.ReadEnum();
            break;
          }
          case 34: {
            UserTaskDefName = input.ReadString();
            break;
          }
          case 42: {
            UserId = input.ReadString();
            break;
          }
          case 50: {
            UserGroup = input.ReadString();
            break;
          }
          case 58: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 66: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of UserTaskRun Id's
  /// </summary>
  public sealed partial class UserTaskRunIdList : pb::IMessage<UserTaskRunIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskRunIdList> _parser = new pb::MessageParser<UserTaskRunIdList>(() => new UserTaskRunIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskRunIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunIdList(UserTaskRunIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunIdList Clone() {
      return new UserTaskRunIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskRunId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.UserTaskRunId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRunId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRunId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRunId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskRunIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskRunIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskRunIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for Variables by their value. This request is also highly useful to search for
  /// WfRun's based on the value of Variable's that are not in the Entrypoint ThreadRun,
  /// and also when you are using LittleHorse as a data store and need to perform a search.
  ///
  /// You may only search for a Variable that has an index specified on it. This may be done
  /// via th `.searchable()` method on our SDK's.
  ///
  /// Note that we do not yet support searching JSON_OBJ or JSON_ARR fields, but you may
  /// still mark those fields as searchable. We will soon add the ability to query those
  /// fields via the indices.
  /// </summary>
  public sealed partial class SearchVariableRequest : pb::IMessage<SearchVariableRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchVariableRequest> _parser = new pb::MessageParser<SearchVariableRequest>(() => new SearchVariableRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchVariableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchVariableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchVariableRequest(SearchVariableRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      wfSpecMajorVersion_ = other.wfSpecMajorVersion_;
      wfSpecRevision_ = other.wfSpecRevision_;
      varName_ = other.varName_;
      wfSpecName_ = other.wfSpecName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchVariableRequest Clone() {
      return new SearchVariableRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private global::LittleHorse.Common.Proto.VariableValue value_;
    /// <summary>
    /// Specifies the value that the variable must be. Exact match is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "wf_spec_major_version" field.</summary>
    public const int WfSpecMajorVersionFieldNumber = 4;
    private readonly static int WfSpecMajorVersionDefaultValue = 0;

    private int wfSpecMajorVersion_;
    /// <summary>
    /// Specifies major version of the WfSpec for the associated WfRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WfSpecMajorVersion {
      get { if ((_hasBits0 & 2) != 0) { return wfSpecMajorVersion_; } else { return WfSpecMajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        wfSpecMajorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "wf_spec_major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWfSpecMajorVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "wf_spec_major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfSpecMajorVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "wf_spec_revision" field.</summary>
    public const int WfSpecRevisionFieldNumber = 5;
    private readonly static int WfSpecRevisionDefaultValue = 0;

    private int wfSpecRevision_;
    /// <summary>
    /// Specifies the revision of the WfSpec for the associated WfRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WfSpecRevision {
      get { if ((_hasBits0 & 4) != 0) { return wfSpecRevision_; } else { return WfSpecRevisionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        wfSpecRevision_ = value;
      }
    }
    /// <summary>Gets whether the "wf_spec_revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWfSpecRevision {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "wf_spec_revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfSpecRevision() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "var_name" field.</summary>
    public const int VarNameFieldNumber = 6;
    private string varName_ = "";
    /// <summary>
    /// Specifies the name of the variable to search for. This is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VarName {
      get { return varName_; }
      set {
        varName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wf_spec_name" field.</summary>
    public const int WfSpecNameFieldNumber = 7;
    private string wfSpecName_ = "";
    /// <summary>
    /// Specifies the name of the WfSpec for the associated WfRun's. This is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WfSpecName {
      get { return wfSpecName_; }
      set {
        wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchVariableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchVariableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(Value, other.Value)) return false;
      if (WfSpecMajorVersion != other.WfSpecMajorVersion) return false;
      if (WfSpecRevision != other.WfSpecRevision) return false;
      if (VarName != other.VarName) return false;
      if (WfSpecName != other.WfSpecName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (HasWfSpecMajorVersion) hash ^= WfSpecMajorVersion.GetHashCode();
      if (HasWfSpecRevision) hash ^= WfSpecRevision.GetHashCode();
      if (VarName.Length != 0) hash ^= VarName.GetHashCode();
      if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (HasWfSpecMajorVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        output.WriteRawTag(40);
        output.WriteInt32(WfSpecRevision);
      }
      if (VarName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VarName);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(WfSpecName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (value_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Value);
      }
      if (HasWfSpecMajorVersion) {
        output.WriteRawTag(32);
        output.WriteInt32(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        output.WriteRawTag(40);
        output.WriteInt32(WfSpecRevision);
      }
      if (VarName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VarName);
      }
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(WfSpecName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (HasWfSpecMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WfSpecMajorVersion);
      }
      if (HasWfSpecRevision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WfSpecRevision);
      }
      if (VarName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VarName);
      }
      if (WfSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchVariableRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::LittleHorse.Common.Proto.VariableValue();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.HasWfSpecMajorVersion) {
        WfSpecMajorVersion = other.WfSpecMajorVersion;
      }
      if (other.HasWfSpecRevision) {
        WfSpecRevision = other.WfSpecRevision;
      }
      if (other.VarName.Length != 0) {
        VarName = other.VarName;
      }
      if (other.WfSpecName.Length != 0) {
        WfSpecName = other.WfSpecName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
          case 32: {
            WfSpecMajorVersion = input.ReadInt32();
            break;
          }
          case 40: {
            WfSpecRevision = input.ReadInt32();
            break;
          }
          case 50: {
            VarName = input.ReadString();
            break;
          }
          case 58: {
            WfSpecName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (value_ == null) {
              Value = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(Value);
            break;
          }
          case 32: {
            WfSpecMajorVersion = input.ReadInt32();
            break;
          }
          case 40: {
            WfSpecRevision = input.ReadInt32();
            break;
          }
          case 50: {
            VarName = input.ReadString();
            break;
          }
          case 58: {
            WfSpecName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// This is a list of Variable ID's.
  /// </summary>
  public sealed partial class VariableIdList : pb::IMessage<VariableIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VariableIdList> _parser = new pb::MessageParser<VariableIdList>(() => new VariableIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VariableIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableIdList(VariableIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableIdList Clone() {
      return new VariableIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VariableId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.VariableId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VariableId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VariableIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VariableIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VariableIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for TaskDef's based on certain criteria.
  /// </summary>
  public sealed partial class SearchTaskDefRequest : pb::IMessage<SearchTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchTaskDefRequest> _parser = new pb::MessageParser<SearchTaskDefRequest>(() => new SearchTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskDefRequest(SearchTaskDefRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      prefix_ = other.prefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTaskDefRequest Clone() {
      return new SearchTaskDefRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 3;
    private readonly static string PrefixDefaultValue = "";

    private string prefix_;
    /// <summary>
    /// Optionally specify to only return TaskDef's with a specific prefix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return prefix_ ?? PrefixDefaultValue; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrefix {
      get { return prefix_ != null; }
    }
    /// <summary>Clears the value of the "prefix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrefix() {
      prefix_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (Prefix != other.Prefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasPrefix) hash ^= Prefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasPrefix) {
        Prefix = other.Prefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of TaskDef Id's.
  /// </summary>
  public sealed partial class TaskDefIdList : pb::IMessage<TaskDefIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskDefIdList> _parser = new pb::MessageParser<TaskDefIdList>(() => new TaskDefIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskDefIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefIdList(TaskDefIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefIdList Clone() {
      return new TaskDefIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TaskDefId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.TaskDefId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskDefIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskDefIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskDefIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for UserTaskDef's.
  /// </summary>
  public sealed partial class SearchUserTaskDefRequest : pb::IMessage<SearchUserTaskDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchUserTaskDefRequest> _parser = new pb::MessageParser<SearchUserTaskDefRequest>(() => new SearchUserTaskDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchUserTaskDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskDefRequest(SearchUserTaskDefRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      switch (other.UserTaskDefCriteriaCase) {
        case UserTaskDefCriteriaOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case UserTaskDefCriteriaOneofCase.Name:
          Name = other.Name;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchUserTaskDefRequest Clone() {
      return new SearchUserTaskDefRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 3;
    /// <summary>
    /// Return all UserTaskDef's with a specific prefix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return HasPrefix ? (string) userTaskDefCriteria_ : ""; }
      set {
        userTaskDefCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        userTaskDefCriteriaCase_ = UserTaskDefCriteriaOneofCase.Prefix;
      }
    }
    /// <summary>Gets whether the "prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrefix {
      get { return userTaskDefCriteriaCase_ == UserTaskDefCriteriaOneofCase.Prefix; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "prefix" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrefix() {
      if (HasPrefix) {
        ClearUserTaskDefCriteria();
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    /// <summary>
    /// Return all UserTaskDef's with a specific name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return HasName ? (string) userTaskDefCriteria_ : ""; }
      set {
        userTaskDefCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        userTaskDefCriteriaCase_ = UserTaskDefCriteriaOneofCase.Name;
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return userTaskDefCriteriaCase_ == UserTaskDefCriteriaOneofCase.Name; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      if (HasName) {
        ClearUserTaskDefCriteria();
      }
    }

    private object userTaskDefCriteria_;
    /// <summary>Enum of possible cases for the "user_task_def_criteria" oneof.</summary>
    public enum UserTaskDefCriteriaOneofCase {
      None = 0,
      Prefix = 3,
      Name = 4,
    }
    private UserTaskDefCriteriaOneofCase userTaskDefCriteriaCase_ = UserTaskDefCriteriaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDefCriteriaOneofCase UserTaskDefCriteriaCase {
      get { return userTaskDefCriteriaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserTaskDefCriteria() {
      userTaskDefCriteriaCase_ = UserTaskDefCriteriaOneofCase.None;
      userTaskDefCriteria_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchUserTaskDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchUserTaskDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (Prefix != other.Prefix) return false;
      if (Name != other.Name) return false;
      if (UserTaskDefCriteriaCase != other.UserTaskDefCriteriaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasPrefix) hash ^= Prefix.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= (int) userTaskDefCriteriaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (HasName) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchUserTaskDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      switch (other.UserTaskDefCriteriaCase) {
        case UserTaskDefCriteriaOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case UserTaskDefCriteriaOneofCase.Name:
          Name = other.Name;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of UserTaskDef Id's.
  /// </summary>
  public sealed partial class UserTaskDefIdList : pb::IMessage<UserTaskDefIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskDefIdList> _parser = new pb::MessageParser<UserTaskDefIdList>(() => new UserTaskDefIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskDefIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDefIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDefIdList(UserTaskDefIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskDefIdList Clone() {
      return new UserTaskDefIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskDefId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.UserTaskDefId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskDefId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskDefId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskDefId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskDefIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskDefIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskDefIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for WfSpec's.
  /// </summary>
  public sealed partial class SearchWfSpecRequest : pb::IMessage<SearchWfSpecRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchWfSpecRequest> _parser = new pb::MessageParser<SearchWfSpecRequest>(() => new SearchWfSpecRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchWfSpecRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfSpecRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfSpecRequest(SearchWfSpecRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      switch (other.WfSpecCriteriaCase) {
        case WfSpecCriteriaOneofCase.Name:
          Name = other.Name;
          break;
        case WfSpecCriteriaOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case WfSpecCriteriaOneofCase.TaskDefName:
          TaskDefName = other.TaskDefName;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchWfSpecRequest Clone() {
      return new SearchWfSpecRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    /// <summary>
    /// Return WfSpec's with a specific name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return HasName ? (string) wfSpecCriteria_ : ""; }
      set {
        wfSpecCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        wfSpecCriteriaCase_ = WfSpecCriteriaOneofCase.Name;
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return wfSpecCriteriaCase_ == WfSpecCriteriaOneofCase.Name; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      if (HasName) {
        ClearWfSpecCriteria();
      }
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 4;
    /// <summary>
    /// Return WfSpec's with a specific prefix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return HasPrefix ? (string) wfSpecCriteria_ : ""; }
      set {
        wfSpecCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        wfSpecCriteriaCase_ = WfSpecCriteriaOneofCase.Prefix;
      }
    }
    /// <summary>Gets whether the "prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrefix {
      get { return wfSpecCriteriaCase_ == WfSpecCriteriaOneofCase.Prefix; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "prefix" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrefix() {
      if (HasPrefix) {
        ClearWfSpecCriteria();
      }
    }

    /// <summary>Field number for the "task_def_name" field.</summary>
    public const int TaskDefNameFieldNumber = 5;
    /// <summary>
    /// Return all WfSpec's that make use of a given TaskDef.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskDefName {
      get { return HasTaskDefName ? (string) wfSpecCriteria_ : ""; }
      set {
        wfSpecCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        wfSpecCriteriaCase_ = WfSpecCriteriaOneofCase.TaskDefName;
      }
    }
    /// <summary>Gets whether the "task_def_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskDefName {
      get { return wfSpecCriteriaCase_ == WfSpecCriteriaOneofCase.TaskDefName; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "task_def_name" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskDefName() {
      if (HasTaskDefName) {
        ClearWfSpecCriteria();
      }
    }

    private object wfSpecCriteria_;
    /// <summary>Enum of possible cases for the "wf_spec_criteria" oneof.</summary>
    public enum WfSpecCriteriaOneofCase {
      None = 0,
      Name = 3,
      Prefix = 4,
      TaskDefName = 5,
    }
    private WfSpecCriteriaOneofCase wfSpecCriteriaCase_ = WfSpecCriteriaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecCriteriaOneofCase WfSpecCriteriaCase {
      get { return wfSpecCriteriaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWfSpecCriteria() {
      wfSpecCriteriaCase_ = WfSpecCriteriaOneofCase.None;
      wfSpecCriteria_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchWfSpecRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchWfSpecRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (Name != other.Name) return false;
      if (Prefix != other.Prefix) return false;
      if (TaskDefName != other.TaskDefName) return false;
      if (WfSpecCriteriaCase != other.WfSpecCriteriaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasPrefix) hash ^= Prefix.GetHashCode();
      if (HasTaskDefName) hash ^= TaskDefName.GetHashCode();
      hash ^= (int) wfSpecCriteriaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasPrefix) {
        output.WriteRawTag(34);
        output.WriteString(Prefix);
      }
      if (HasTaskDefName) {
        output.WriteRawTag(42);
        output.WriteString(TaskDefName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasPrefix) {
        output.WriteRawTag(34);
        output.WriteString(Prefix);
      }
      if (HasTaskDefName) {
        output.WriteRawTag(42);
        output.WriteString(TaskDefName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (HasTaskDefName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskDefName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchWfSpecRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      switch (other.WfSpecCriteriaCase) {
        case WfSpecCriteriaOneofCase.Name:
          Name = other.Name;
          break;
        case WfSpecCriteriaOneofCase.Prefix:
          Prefix = other.Prefix;
          break;
        case WfSpecCriteriaOneofCase.TaskDefName:
          TaskDefName = other.TaskDefName;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Prefix = input.ReadString();
            break;
          }
          case 42: {
            TaskDefName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Prefix = input.ReadString();
            break;
          }
          case 42: {
            TaskDefName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of WfSpec Id's.
  /// </summary>
  public sealed partial class WfSpecIdList : pb::IMessage<WfSpecIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfSpecIdList> _parser = new pb::MessageParser<WfSpecIdList>(() => new WfSpecIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfSpecIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecIdList(WfSpecIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecIdList Clone() {
      return new WfSpecIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WfSpecId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.WfSpecId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfSpecIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfSpecIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfSpecIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for ExternalEventDefs based on certain criteria.
  /// </summary>
  public sealed partial class SearchExternalEventDefRequest : pb::IMessage<SearchExternalEventDefRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchExternalEventDefRequest> _parser = new pb::MessageParser<SearchExternalEventDefRequest>(() => new SearchExternalEventDefRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchExternalEventDefRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventDefRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventDefRequest(SearchExternalEventDefRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      prefix_ = other.prefix_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventDefRequest Clone() {
      return new SearchExternalEventDefRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 3;
    private readonly static string PrefixDefaultValue = "";

    private string prefix_;
    /// <summary>
    /// Optionally search only for ExternalEventDef's whose name starts with this prefix.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Prefix {
      get { return prefix_ ?? PrefixDefaultValue; }
      set {
        prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "prefix" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrefix {
      get { return prefix_ != null; }
    }
    /// <summary>Clears the value of the "prefix" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrefix() {
      prefix_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchExternalEventDefRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchExternalEventDefRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (Prefix != other.Prefix) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasPrefix) hash ^= Prefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (HasPrefix) {
        output.WriteRawTag(26);
        output.WriteString(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Prefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchExternalEventDefRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasPrefix) {
        Prefix = other.Prefix;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            Prefix = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of ExternalEventDef Id's.
  /// </summary>
  public sealed partial class ExternalEventDefIdList : pb::IMessage<ExternalEventDefIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalEventDefIdList> _parser = new pb::MessageParser<ExternalEventDefIdList>(() => new ExternalEventDefIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalEventDefIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventDefIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventDefIdList(ExternalEventDefIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventDefIdList Clone() {
      return new ExternalEventDefIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ExternalEventDefId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.ExternalEventDefId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventDefId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventDefId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventDefId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalEventDefIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalEventDefIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalEventDefIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for all available TenantIds for current Principal
  /// </summary>
  public sealed partial class SearchTenantRequest : pb::IMessage<SearchTenantRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchTenantRequest> _parser = new pb::MessageParser<SearchTenantRequest>(() => new SearchTenantRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchTenantRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTenantRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTenantRequest(SearchTenantRequest other) : this() {
      _hasBits0 = other._hasBits0;
      limit_ = other.limit_;
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchTenantRequest Clone() {
      return new SearchTenantRequest(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchTenantRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchTenantRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteInt32(Limit);
      }
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchTenantRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadInt32();
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TenantIdList : pb::IMessage<TenantIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantIdList> _parser = new pb::MessageParser<TenantIdList>(() => new TenantIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TenantIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantIdList(TenantIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantIdList Clone() {
      return new TenantIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TenantId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.TenantId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TenantId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TenantId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TenantId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TenantIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TenantIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TenantIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for Principals based on certain criteria.
  /// </summary>
  public sealed partial class SearchPrincipalRequest : pb::IMessage<SearchPrincipalRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchPrincipalRequest> _parser = new pb::MessageParser<SearchPrincipalRequest>(() => new SearchPrincipalRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchPrincipalRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchPrincipalRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchPrincipalRequest(SearchPrincipalRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      switch (other.PrincipalCriteriaCase) {
        case PrincipalCriteriaOneofCase.IsAdmin:
          IsAdmin = other.IsAdmin;
          break;
        case PrincipalCriteriaOneofCase.TenantId:
          TenantId = other.TenantId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchPrincipalRequest Clone() {
      return new SearchPrincipalRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Specifies to return only Principals's created after this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Specifies to return only Principals's created before this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    /// <summary>Field number for the "isAdmin" field.</summary>
    public const int IsAdminFieldNumber = 5;
    /// <summary>
    /// List only Principals that are admins
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAdmin {
      get { return HasIsAdmin ? (bool) principalCriteria_ : false; }
      set {
        principalCriteria_ = value;
        principalCriteriaCase_ = PrincipalCriteriaOneofCase.IsAdmin;
      }
    }
    /// <summary>Gets whether the "isAdmin" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsAdmin {
      get { return principalCriteriaCase_ == PrincipalCriteriaOneofCase.IsAdmin; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "isAdmin" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsAdmin() {
      if (HasIsAdmin) {
        ClearPrincipalCriteria();
      }
    }

    /// <summary>Field number for the "tenantId" field.</summary>
    public const int TenantIdFieldNumber = 6;
    /// <summary>
    /// List Principals associated with this Tenant ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TenantId {
      get { return HasTenantId ? (string) principalCriteria_ : ""; }
      set {
        principalCriteria_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        principalCriteriaCase_ = PrincipalCriteriaOneofCase.TenantId;
      }
    }
    /// <summary>Gets whether the "tenantId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTenantId {
      get { return principalCriteriaCase_ == PrincipalCriteriaOneofCase.TenantId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "tenantId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTenantId() {
      if (HasTenantId) {
        ClearPrincipalCriteria();
      }
    }

    private object principalCriteria_;
    /// <summary>Enum of possible cases for the "principal_criteria" oneof.</summary>
    public enum PrincipalCriteriaOneofCase {
      None = 0,
      IsAdmin = 5,
      TenantId = 6,
    }
    private PrincipalCriteriaOneofCase principalCriteriaCase_ = PrincipalCriteriaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrincipalCriteriaOneofCase PrincipalCriteriaCase {
      get { return principalCriteriaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrincipalCriteria() {
      principalCriteriaCase_ = PrincipalCriteriaOneofCase.None;
      principalCriteria_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchPrincipalRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchPrincipalRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      if (IsAdmin != other.IsAdmin) return false;
      if (TenantId != other.TenantId) return false;
      if (PrincipalCriteriaCase != other.PrincipalCriteriaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      if (HasIsAdmin) hash ^= IsAdmin.GetHashCode();
      if (HasTenantId) hash ^= TenantId.GetHashCode();
      hash ^= (int) principalCriteriaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (HasIsAdmin) {
        output.WriteRawTag(40);
        output.WriteBool(IsAdmin);
      }
      if (HasTenantId) {
        output.WriteRawTag(50);
        output.WriteString(TenantId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (HasIsAdmin) {
        output.WriteRawTag(40);
        output.WriteBool(IsAdmin);
      }
      if (HasTenantId) {
        output.WriteRawTag(50);
        output.WriteString(TenantId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      if (HasIsAdmin) {
        size += 1 + 1;
      }
      if (HasTenantId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenantId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchPrincipalRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      switch (other.PrincipalCriteriaCase) {
        case PrincipalCriteriaOneofCase.IsAdmin:
          IsAdmin = other.IsAdmin;
          break;
        case PrincipalCriteriaOneofCase.TenantId:
          TenantId = other.TenantId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 40: {
            IsAdmin = input.ReadBool();
            break;
          }
          case 50: {
            TenantId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 40: {
            IsAdmin = input.ReadBool();
            break;
          }
          case 50: {
            TenantId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PrincipalIdList : pb::IMessage<PrincipalIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PrincipalIdList> _parser = new pb::MessageParser<PrincipalIdList>(() => new PrincipalIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PrincipalIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrincipalIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrincipalIdList(PrincipalIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PrincipalIdList Clone() {
      return new PrincipalIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.PrincipalId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.PrincipalId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.PrincipalId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.PrincipalId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.PrincipalId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PrincipalIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PrincipalIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PrincipalIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search for ExternalEvents based on certain criteria.
  ///
  /// Required field ExternalEventDefId specifies which ExternalEventDef
  /// to search for ExternalEvents under.
  ///
  /// At this time, it is not possible to make a search for all ExternalEvents.
  /// </summary>
  public sealed partial class SearchExternalEventRequest : pb::IMessage<SearchExternalEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchExternalEventRequest> _parser = new pb::MessageParser<SearchExternalEventRequest>(() => new SearchExternalEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchExternalEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventRequest(SearchExternalEventRequest other) : this() {
      _hasBits0 = other._hasBits0;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      earliestStart_ = other.earliestStart_ != null ? other.earliestStart_.Clone() : null;
      latestStart_ = other.latestStart_ != null ? other.latestStart_.Clone() : null;
      externalEventDefId_ = other.externalEventDefId_ != null ? other.externalEventDefId_.Clone() : null;
      isClaimed_ = other.isClaimed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchExternalEventRequest Clone() {
      return new SearchExternalEventRequest(this);
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 1;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "earliest_start" field.</summary>
    public const int EarliestStartFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestStart_;
    /// <summary>
    /// Specifies to return only ExternalEvents created after this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestStart {
      get { return earliestStart_; }
      set {
        earliestStart_ = value;
      }
    }

    /// <summary>Field number for the "latest_start" field.</summary>
    public const int LatestStartFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestStart_;
    /// <summary>
    /// Specifies to return only ExternalEvents created before this time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestStart {
      get { return latestStart_; }
      set {
        latestStart_ = value;
      }
    }

    /// <summary>Field number for the "external_event_def_id" field.</summary>
    public const int ExternalEventDefIdFieldNumber = 5;
    private global::LittleHorse.Common.Proto.ExternalEventDefId externalEventDefId_;
    /// <summary>
    /// Search for ExternalEvents by their ExternalEventDefId
    ///
    /// * Note: If ExternalEventDefId is not provided or does not exist,
    ///         gRPC status code 'INVALID_ARGUMENT' will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ExternalEventDefId ExternalEventDefId {
      get { return externalEventDefId_; }
      set {
        externalEventDefId_ = value;
      }
    }

    /// <summary>Field number for the "is_claimed" field.</summary>
    public const int IsClaimedFieldNumber = 6;
    private readonly static bool IsClaimedDefaultValue = false;

    private bool isClaimed_;
    /// <summary>
    /// Optionally search for only ExternalEvents that are claimed or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClaimed {
      get { if ((_hasBits0 & 2) != 0) { return isClaimed_; } else { return IsClaimedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isClaimed_ = value;
      }
    }
    /// <summary>Gets whether the "is_claimed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsClaimed {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_claimed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsClaimed() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchExternalEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchExternalEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      if (!object.Equals(EarliestStart, other.EarliestStart)) return false;
      if (!object.Equals(LatestStart, other.LatestStart)) return false;
      if (!object.Equals(ExternalEventDefId, other.ExternalEventDefId)) return false;
      if (IsClaimed != other.IsClaimed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (earliestStart_ != null) hash ^= EarliestStart.GetHashCode();
      if (latestStart_ != null) hash ^= LatestStart.GetHashCode();
      if (externalEventDefId_ != null) hash ^= ExternalEventDefId.GetHashCode();
      if (HasIsClaimed) hash ^= IsClaimed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (externalEventDefId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HasIsClaimed) {
        output.WriteRawTag(48);
        output.WriteBool(IsClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBookmark) {
        output.WriteRawTag(10);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (earliestStart_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EarliestStart);
      }
      if (latestStart_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LatestStart);
      }
      if (externalEventDefId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ExternalEventDefId);
      }
      if (HasIsClaimed) {
        output.WriteRawTag(48);
        output.WriteBool(IsClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (earliestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestStart);
      }
      if (latestStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestStart);
      }
      if (externalEventDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalEventDefId);
      }
      if (HasIsClaimed) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchExternalEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.earliestStart_ != null) {
        if (earliestStart_ == null) {
          EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestStart.MergeFrom(other.EarliestStart);
      }
      if (other.latestStart_ != null) {
        if (latestStart_ == null) {
          LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestStart.MergeFrom(other.LatestStart);
      }
      if (other.externalEventDefId_ != null) {
        if (externalEventDefId_ == null) {
          ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
        }
        ExternalEventDefId.MergeFrom(other.ExternalEventDefId);
      }
      if (other.HasIsClaimed) {
        IsClaimed = other.IsClaimed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 42: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 48: {
            IsClaimed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 26: {
            if (earliestStart_ == null) {
              EarliestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestStart);
            break;
          }
          case 34: {
            if (latestStart_ == null) {
              LatestStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestStart);
            break;
          }
          case 42: {
            if (externalEventDefId_ == null) {
              ExternalEventDefId = new global::LittleHorse.Common.Proto.ExternalEventDefId();
            }
            input.ReadMessage(ExternalEventDefId);
            break;
          }
          case 48: {
            IsClaimed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of ExternalEvent Id's
  /// </summary>
  public sealed partial class ExternalEventIdList : pb::IMessage<ExternalEventIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalEventIdList> _parser = new pb::MessageParser<ExternalEventIdList>(() => new ExternalEventIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalEventIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventIdList(ExternalEventIdList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventIdList Clone() {
      return new ExternalEventIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ExternalEventId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.ExternalEventId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventId>();
    /// <summary>
    /// The resulting object id's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEventId> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalEventIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalEventIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalEventIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List all NodeRun's for a given WfRun. Note that List requests return actual NodeRun Objects,
  /// not NodeRunId's.
  /// </summary>
  public sealed partial class ListNodeRunsRequest : pb::IMessage<ListNodeRunsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListNodeRunsRequest> _parser = new pb::MessageParser<ListNodeRunsRequest>(() => new ListNodeRunsRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListNodeRunsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListNodeRunsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListNodeRunsRequest(ListNodeRunsRequest other) : this() {
      _hasBits0 = other._hasBits0;
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      threadRunNumber_ = other.threadRunNumber_;
      bookmark_ = other.bookmark_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListNodeRunsRequest Clone() {
      return new ListNodeRunsRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The WfRun for whom we list NodeRun's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "thread_run_number" field.</summary>
    public const int ThreadRunNumberFieldNumber = 2;
    private readonly static int ThreadRunNumberDefaultValue = 0;

    private int threadRunNumber_;
    /// <summary>
    /// Optionally specify the thread run number to filter NodeRun's by.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreadRunNumber {
      get { if ((_hasBits0 & 1) != 0) { return threadRunNumber_; } else { return ThreadRunNumberDefaultValue; } }
      set {
        _hasBits0 |= 1;
        threadRunNumber_ = value;
      }
    }
    /// <summary>Gets whether the "thread_run_number" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasThreadRunNumber {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "thread_run_number" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearThreadRunNumber() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 3;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// Bookmark for cursor-based pagination; pass if applicable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 4;
    private readonly static int LimitDefaultValue = 0;

    private int limit_;
    /// <summary>
    /// Maximum results to return in one request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Limit {
      get { if ((_hasBits0 & 2) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListNodeRunsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListNodeRunsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if (ThreadRunNumber != other.ThreadRunNumber) return false;
      if (Bookmark != other.Bookmark) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (HasThreadRunNumber) hash ^= ThreadRunNumber.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (HasThreadRunNumber) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (HasBookmark) {
        output.WriteRawTag(26);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(32);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (HasThreadRunNumber) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (HasBookmark) {
        output.WriteRawTag(26);
        output.WriteBytes(Bookmark);
      }
      if (HasLimit) {
        output.WriteRawTag(32);
        output.WriteInt32(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (HasThreadRunNumber) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadRunNumber);
      }
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListNodeRunsRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      if (other.HasThreadRunNumber) {
        ThreadRunNumber = other.ThreadRunNumber;
      }
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 26: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 32: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 26: {
            Bookmark = input.ReadBytes();
            break;
          }
          case 32: {
            Limit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of NodeRun Objects.
  /// </summary>
  public sealed partial class NodeRunList : pb::IMessage<NodeRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NodeRunList> _parser = new pb::MessageParser<NodeRunList>(() => new NodeRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NodeRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunList(NodeRunList other) : this() {
      results_ = other.results_.Clone();
      bookmark_ = other.bookmark_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NodeRunList Clone() {
      return new NodeRunList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.NodeRun> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.NodeRun.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRun> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRun>();
    /// <summary>
    /// A list of NodeRun Objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.NodeRun> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "bookmark" field.</summary>
    public const int BookmarkFieldNumber = 2;
    private readonly static pb::ByteString BookmarkDefaultValue = pb::ByteString.Empty;

    private pb::ByteString bookmark_;
    /// <summary>
    /// The bookmark can be used for cursor-based pagination. If it is null, the server
    /// has returned all results. If it is set, you can pass it into your next request
    /// to resume searching where your previous request left off.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Bookmark {
      get { return bookmark_ ?? BookmarkDefaultValue; }
      set {
        bookmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bookmark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBookmark {
      get { return bookmark_ != null; }
    }
    /// <summary>Clears the value of the "bookmark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBookmark() {
      bookmark_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NodeRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NodeRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (Bookmark != other.Bookmark) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (HasBookmark) hash ^= Bookmark.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (HasBookmark) {
        output.WriteRawTag(18);
        output.WriteBytes(Bookmark);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (HasBookmark) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bookmark);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NodeRunList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.HasBookmark) {
        Bookmark = other.Bookmark;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
          case 18: {
            Bookmark = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List all Variables for a specific WfRun. Note that List requests return actual Variable Objects,
  /// not VariableId's.
  /// </summary>
  public sealed partial class ListVariablesRequest : pb::IMessage<ListVariablesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListVariablesRequest> _parser = new pb::MessageParser<ListVariablesRequest>(() => new ListVariablesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListVariablesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVariablesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVariablesRequest(ListVariablesRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListVariablesRequest Clone() {
      return new ListVariablesRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The WfRun for whom we will list Variables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListVariablesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListVariablesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListVariablesRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of Variables.
  /// </summary>
  public sealed partial class VariableList : pb::IMessage<VariableList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VariableList> _parser = new pb::MessageParser<VariableList>(() => new VariableList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VariableList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableList(VariableList other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VariableList Clone() {
      return new VariableList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.Variable> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.Variable.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.Variable> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.Variable>();
    /// <summary>
    /// A list of Variable objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.Variable> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VariableList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VariableList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VariableList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List all ExternalEvents for a specific WfRunId. Note that List Requests return actual
  /// ExternalEvent objects, not ExternalEventId's.
  /// </summary>
  public sealed partial class ListExternalEventsRequest : pb::IMessage<ListExternalEventsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListExternalEventsRequest> _parser = new pb::MessageParser<ListExternalEventsRequest>(() => new ListExternalEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListExternalEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListExternalEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListExternalEventsRequest(ListExternalEventsRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListExternalEventsRequest Clone() {
      return new ListExternalEventsRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The WfRunId for whom we list ExternalEvent's.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListExternalEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListExternalEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListExternalEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of ExternalEvents.
  /// </summary>
  public sealed partial class ExternalEventList : pb::IMessage<ExternalEventList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExternalEventList> _parser = new pb::MessageParser<ExternalEventList>(() => new ExternalEventList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ExternalEventList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventList(ExternalEventList other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ExternalEventList Clone() {
      return new ExternalEventList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ExternalEvent> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.ExternalEvent.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEvent> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEvent>();
    /// <summary>
    /// A list of ExternalEvent objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ExternalEvent> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ExternalEventList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ExternalEventList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ExternalEventList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message used by Task Worker to register itself to the server and ask for assignments of
  /// servers to poll.
  ///
  /// Used by the Task Worker SDK; generally, you shouldn't have to touch this manually.
  /// </summary>
  public sealed partial class RegisterTaskWorkerRequest : pb::IMessage<RegisterTaskWorkerRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterTaskWorkerRequest> _parser = new pb::MessageParser<RegisterTaskWorkerRequest>(() => new RegisterTaskWorkerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterTaskWorkerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerRequest(RegisterTaskWorkerRequest other) : this() {
      taskWorkerId_ = other.taskWorkerId_;
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerRequest Clone() {
      return new RegisterTaskWorkerRequest(this);
    }

    /// <summary>Field number for the "task_worker_id" field.</summary>
    public const int TaskWorkerIdFieldNumber = 1;
    private string taskWorkerId_ = "";
    /// <summary>
    /// Is the ID of the Task Worker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskWorkerId {
      get { return taskWorkerId_; }
      set {
        taskWorkerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// The TaskDef the worker wants to poll for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterTaskWorkerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterTaskWorkerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskWorkerId != other.TaskWorkerId) return false;
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskWorkerId.Length != 0) hash ^= TaskWorkerId.GetHashCode();
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskWorkerId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskWorkerId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TaskWorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskWorkerId);
      }
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterTaskWorkerRequest other) {
      if (other == null) {
        return;
      }
      if (other.TaskWorkerId.Length != 0) {
        TaskWorkerId = other.TaskWorkerId;
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message used by Task Worker to register itself to the server and ask for assignments of
  /// servers to poll.
  ///
  /// Used by the Task Worker SDK; generally, you shouldn't have to touch this manually.
  /// </summary>
  public sealed partial class TaskWorkerHeartBeatRequest : pb::IMessage<TaskWorkerHeartBeatRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskWorkerHeartBeatRequest> _parser = new pb::MessageParser<TaskWorkerHeartBeatRequest>(() => new TaskWorkerHeartBeatRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskWorkerHeartBeatRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerHeartBeatRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerHeartBeatRequest(TaskWorkerHeartBeatRequest other) : this() {
      clientId_ = other.clientId_;
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      listenerName_ = other.listenerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerHeartBeatRequest Clone() {
      return new TaskWorkerHeartBeatRequest(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "listener_name" field.</summary>
    public const int ListenerNameFieldNumber = 3;
    private string listenerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ListenerName {
      get { return listenerName_; }
      set {
        listenerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskWorkerHeartBeatRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskWorkerHeartBeatRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if (ListenerName != other.ListenerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (ListenerName.Length != 0) hash ^= ListenerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (ListenerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ListenerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (ListenerName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ListenerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (ListenerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListenerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskWorkerHeartBeatRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      if (other.ListenerName.Length != 0) {
        ListenerName = other.ListenerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 26: {
            ListenerName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 26: {
            ListenerName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response containing list of Servers that the Task Worker should connect to and start polling from.
  /// Only used internally by the Task Worker SDK.
  /// </summary>
  public sealed partial class RegisterTaskWorkerResponse : pb::IMessage<RegisterTaskWorkerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterTaskWorkerResponse> _parser = new pb::MessageParser<RegisterTaskWorkerResponse>(() => new RegisterTaskWorkerResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterTaskWorkerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerResponse(RegisterTaskWorkerResponse other) : this() {
      _hasBits0 = other._hasBits0;
      yourHosts_ = other.yourHosts_.Clone();
      isClusterHealthy_ = other.isClusterHealthy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterTaskWorkerResponse Clone() {
      return new RegisterTaskWorkerResponse(this);
    }

    /// <summary>Field number for the "your_hosts" field.</summary>
    public const int YourHostsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.LHHostInfo> _repeated_yourHosts_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.LHHostInfo.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo> yourHosts_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo>();
    /// <summary>
    /// The list of LH Server hosts that the Task Worker should start polling.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo> YourHosts {
      get { return yourHosts_; }
    }

    /// <summary>Field number for the "is_cluster_healthy" field.</summary>
    public const int IsClusterHealthyFieldNumber = 2;
    private readonly static bool IsClusterHealthyDefaultValue = false;

    private bool isClusterHealthy_;
    /// <summary>
    /// Whether the LH Cluster is healthy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsClusterHealthy {
      get { if ((_hasBits0 & 1) != 0) { return isClusterHealthy_; } else { return IsClusterHealthyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isClusterHealthy_ = value;
      }
    }
    /// <summary>Gets whether the "is_cluster_healthy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsClusterHealthy {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_cluster_healthy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsClusterHealthy() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterTaskWorkerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterTaskWorkerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!yourHosts_.Equals(other.yourHosts_)) return false;
      if (IsClusterHealthy != other.IsClusterHealthy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= yourHosts_.GetHashCode();
      if (HasIsClusterHealthy) hash ^= IsClusterHealthy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      yourHosts_.WriteTo(output, _repeated_yourHosts_codec);
      if (HasIsClusterHealthy) {
        output.WriteRawTag(16);
        output.WriteBool(IsClusterHealthy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      yourHosts_.WriteTo(ref output, _repeated_yourHosts_codec);
      if (HasIsClusterHealthy) {
        output.WriteRawTag(16);
        output.WriteBool(IsClusterHealthy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += yourHosts_.CalculateSize(_repeated_yourHosts_codec);
      if (HasIsClusterHealthy) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterTaskWorkerResponse other) {
      if (other == null) {
        return;
      }
      yourHosts_.Add(other.yourHosts_);
      if (other.HasIsClusterHealthy) {
        IsClusterHealthy = other.IsClusterHealthy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            yourHosts_.AddEntriesFrom(input, _repeated_yourHosts_codec);
            break;
          }
          case 16: {
            IsClusterHealthy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            yourHosts_.AddEntriesFrom(ref input, _repeated_yourHosts_codec);
            break;
          }
          case 16: {
            IsClusterHealthy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Information about a specific LH Server to contact.
  /// </summary>
  public sealed partial class LHHostInfo : pb::IMessage<LHHostInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LHHostInfo> _parser = new pb::MessageParser<LHHostInfo>(() => new LHHostInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LHHostInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHHostInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHHostInfo(LHHostInfo other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LHHostInfo Clone() {
      return new LHHostInfo(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private string host_ = "";
    /// <summary>
    /// The host on the server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    /// <summary>
    /// The port for the specified listener.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LHHostInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LHHostInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LHHostInfo other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request sent by the Task Worker SDK to tell the Server that the Task Worker is ready
  /// to execute a TaskRun. Generally used only by the Task Worker SDK.
  /// </summary>
  public sealed partial class PollTaskRequest : pb::IMessage<PollTaskRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PollTaskRequest> _parser = new pb::MessageParser<PollTaskRequest>(() => new PollTaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PollTaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskRequest(PollTaskRequest other) : this() {
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      clientId_ = other.clientId_;
      taskWorkerVersion_ = other.taskWorkerVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskRequest Clone() {
      return new PollTaskRequest(this);
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// Is the TaskDefId that the Task Worker wants to execute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    /// <summary>
    /// Is the ID of the Task Worker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_worker_version" field.</summary>
    public const int TaskWorkerVersionFieldNumber = 3;
    private readonly static string TaskWorkerVersionDefaultValue = "";

    private string taskWorkerVersion_;
    /// <summary>
    /// Optionally specifies the version of the Task Worker, so that it can be recorded
    /// for debugging purposes on the TaskRun itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskWorkerVersion {
      get { return taskWorkerVersion_ ?? TaskWorkerVersionDefaultValue; }
      set {
        taskWorkerVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_worker_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskWorkerVersion {
      get { return taskWorkerVersion_ != null; }
    }
    /// <summary>Clears the value of the "task_worker_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskWorkerVersion() {
      taskWorkerVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PollTaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PollTaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if (ClientId != other.ClientId) return false;
      if (TaskWorkerVersion != other.TaskWorkerVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (HasTaskWorkerVersion) hash ^= TaskWorkerVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (HasTaskWorkerVersion) {
        output.WriteRawTag(26);
        output.WriteString(TaskWorkerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (HasTaskWorkerVersion) {
        output.WriteRawTag(26);
        output.WriteString(TaskWorkerVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (HasTaskWorkerVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskWorkerVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PollTaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.HasTaskWorkerVersion) {
        TaskWorkerVersion = other.TaskWorkerVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            TaskWorkerVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            TaskWorkerVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message sent by server to Task Worker SDK specifying a specific TaskRun to be executed.
  /// This is used and handled internally by the Task Worker SDK.
  /// </summary>
  public sealed partial class ScheduledTask : pb::IMessage<ScheduledTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduledTask> _parser = new pb::MessageParser<ScheduledTask>(() => new ScheduledTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduledTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledTask(ScheduledTask other) : this() {
      taskRunId_ = other.taskRunId_ != null ? other.taskRunId_.Clone() : null;
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      attemptNumber_ = other.attemptNumber_;
      variables_ = other.variables_.Clone();
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      source_ = other.source_ != null ? other.source_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledTask Clone() {
      return new ScheduledTask(this);
    }

    /// <summary>Field number for the "task_run_id" field.</summary>
    public const int TaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskRunId taskRunId_;
    /// <summary>
    /// Id of the TaskRun to execute.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskRunId TaskRunId {
      get { return taskRunId_; }
      set {
        taskRunId_ = value;
      }
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 2;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// ID of the TaskDef to which the TaskRun belongs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "attempt_number" field.</summary>
    public const int AttemptNumberFieldNumber = 3;
    private int attemptNumber_;
    /// <summary>
    /// Attempt number of the TaskRun, zero indexed. attempt_number of `0` means this is the
    /// first attempt; `1` means this is the first retry, etc.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttemptNumber {
      get { return attemptNumber_; }
      set {
        attemptNumber_ = value;
      }
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.VarNameAndVal> _repeated_variables_codec
        = pb::FieldCodec.ForMessage(34, global::LittleHorse.Common.Proto.VarNameAndVal.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal> variables_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal>();
    /// <summary>
    /// Input variables for this TaskRun.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.VarNameAndVal> Variables {
      get { return variables_; }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 6;
    private global::LittleHorse.Common.Proto.TaskRunSource source_;
    /// <summary>
    /// Source of the TaskRun. Currently, there are two options:
    /// 1. A TASK node
    /// 2. A reminder task scheduled by a trigger on a User Task.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskRunSource Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduledTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduledTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskRunId, other.TaskRunId)) return false;
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if (AttemptNumber != other.AttemptNumber) return false;
      if(!variables_.Equals(other.variables_)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!object.Equals(Source, other.Source)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskRunId_ != null) hash ^= TaskRunId.GetHashCode();
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (AttemptNumber != 0) hash ^= AttemptNumber.GetHashCode();
      hash ^= variables_.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (source_ != null) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskRunId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (AttemptNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttemptNumber);
      }
      variables_.WriteTo(output, _repeated_variables_codec);
      if (createdAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatedAt);
      }
      if (source_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskRunId);
      }
      if (taskDefId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskDefId);
      }
      if (AttemptNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AttemptNumber);
      }
      variables_.WriteTo(ref output, _repeated_variables_codec);
      if (createdAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreatedAt);
      }
      if (source_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskRunId);
      }
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (AttemptNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttemptNumber);
      }
      size += variables_.CalculateSize(_repeated_variables_codec);
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (source_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduledTask other) {
      if (other == null) {
        return;
      }
      if (other.taskRunId_ != null) {
        if (taskRunId_ == null) {
          TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
        }
        TaskRunId.MergeFrom(other.TaskRunId);
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      if (other.AttemptNumber != 0) {
        AttemptNumber = other.AttemptNumber;
      }
      variables_.Add(other.variables_);
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.source_ != null) {
        if (source_ == null) {
          Source = new global::LittleHorse.Common.Proto.TaskRunSource();
        }
        Source.MergeFrom(other.Source);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskRunId_ == null) {
              TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(TaskRunId);
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 24: {
            AttemptNumber = input.ReadInt32();
            break;
          }
          case 34: {
            variables_.AddEntriesFrom(input, _repeated_variables_codec);
            break;
          }
          case 42: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 50: {
            if (source_ == null) {
              Source = new global::LittleHorse.Common.Proto.TaskRunSource();
            }
            input.ReadMessage(Source);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (taskRunId_ == null) {
              TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(TaskRunId);
            break;
          }
          case 18: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 24: {
            AttemptNumber = input.ReadInt32();
            break;
          }
          case 34: {
            variables_.AddEntriesFrom(ref input, _repeated_variables_codec);
            break;
          }
          case 42: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 50: {
            if (source_ == null) {
              Source = new global::LittleHorse.Common.Proto.TaskRunSource();
            }
            input.ReadMessage(Source);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from the server for PollTaskRequest.
  /// </summary>
  public sealed partial class PollTaskResponse : pb::IMessage<PollTaskResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PollTaskResponse> _parser = new pb::MessageParser<PollTaskResponse>(() => new PollTaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PollTaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskResponse(PollTaskResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PollTaskResponse Clone() {
      return new PollTaskResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::LittleHorse.Common.Proto.ScheduledTask result_;
    /// <summary>
    /// If possible, a ScheduledTask is returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.ScheduledTask Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PollTaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PollTaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PollTaskResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::LittleHorse.Common.Proto.ScheduledTask();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::LittleHorse.Common.Proto.ScheduledTask();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::LittleHorse.Common.Proto.ScheduledTask();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request used by the Task Worker SDK to report the result of a TaskRun execution.
  /// </summary>
  public sealed partial class ReportTaskRun : pb::IMessage<ReportTaskRun>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReportTaskRun> _parser = new pb::MessageParser<ReportTaskRun>(() => new ReportTaskRun());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ReportTaskRun> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportTaskRun() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportTaskRun(ReportTaskRun other) : this() {
      taskRunId_ = other.taskRunId_ != null ? other.taskRunId_.Clone() : null;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      status_ = other.status_;
      logOutput_ = other.logOutput_ != null ? other.logOutput_.Clone() : null;
      attemptNumber_ = other.attemptNumber_;
      switch (other.ResultCase) {
        case ResultOneofCase.Output:
          Output = other.Output.Clone();
          break;
        case ResultOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResultOneofCase.Exception:
          Exception = other.Exception.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ReportTaskRun Clone() {
      return new ReportTaskRun(this);
    }

    /// <summary>Field number for the "task_run_id" field.</summary>
    public const int TaskRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskRunId taskRunId_;
    /// <summary>
    /// ID of the TaskRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskRunId TaskRunId {
      get { return taskRunId_; }
      set {
        taskRunId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    /// When the TaskRun was executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::LittleHorse.Common.Proto.TaskStatus status_ = global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled;
    /// <summary>
    /// Status of the TaskRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "log_output" field.</summary>
    public const int LogOutputFieldNumber = 5;
    private global::LittleHorse.Common.Proto.VariableValue logOutput_;
    /// <summary>
    /// Optional information for logging or exceptions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue LogOutput {
      get { return logOutput_; }
      set {
        logOutput_ = value;
      }
    }

    /// <summary>Field number for the "attempt_number" field.</summary>
    public const int AttemptNumberFieldNumber = 6;
    private int attemptNumber_;
    /// <summary>
    /// Attempt number of the TaskRun
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AttemptNumber {
      get { return attemptNumber_; }
      set {
        attemptNumber_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 4;
    /// <summary>
    /// Successfully completed task
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.VariableValue Output {
      get { return resultCase_ == ResultOneofCase.Output ? (global::LittleHorse.Common.Proto.VariableValue) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Output;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 7;
    /// <summary>
    /// Technical error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHTaskError Error {
      get { return resultCase_ == ResultOneofCase.Error ? (global::LittleHorse.Common.Proto.LHTaskError) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Error;
      }
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 8;
    /// <summary>
    /// Business exception
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.LHTaskException Exception {
      get { return resultCase_ == ResultOneofCase.Exception ? (global::LittleHorse.Common.Proto.LHTaskException) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Exception;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Output = 4,
      Error = 7,
      Exception = 8,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ReportTaskRun);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ReportTaskRun other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskRunId, other.TaskRunId)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (Status != other.Status) return false;
      if (!object.Equals(LogOutput, other.LogOutput)) return false;
      if (AttemptNumber != other.AttemptNumber) return false;
      if (!object.Equals(Output, other.Output)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Exception, other.Exception)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskRunId_ != null) hash ^= TaskRunId.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) hash ^= Status.GetHashCode();
      if (logOutput_ != null) hash ^= LogOutput.GetHashCode();
      if (AttemptNumber != 0) hash ^= AttemptNumber.GetHashCode();
      if (resultCase_ == ResultOneofCase.Output) hash ^= Output.GetHashCode();
      if (resultCase_ == ResultOneofCase.Error) hash ^= Error.GetHashCode();
      if (resultCase_ == ResultOneofCase.Exception) hash ^= Exception.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskRunId);
      }
      if (time_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Time);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Output) {
        output.WriteRawTag(34);
        output.WriteMessage(Output);
      }
      if (logOutput_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LogOutput);
      }
      if (AttemptNumber != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttemptNumber);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(58);
        output.WriteMessage(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        output.WriteRawTag(66);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskRunId);
      }
      if (time_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Time);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (resultCase_ == ResultOneofCase.Output) {
        output.WriteRawTag(34);
        output.WriteMessage(Output);
      }
      if (logOutput_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LogOutput);
      }
      if (AttemptNumber != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AttemptNumber);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        output.WriteRawTag(58);
        output.WriteMessage(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        output.WriteRawTag(66);
        output.WriteMessage(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskRunId);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (logOutput_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogOutput);
      }
      if (AttemptNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttemptNumber);
      }
      if (resultCase_ == ResultOneofCase.Output) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Output);
      }
      if (resultCase_ == ResultOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (resultCase_ == ResultOneofCase.Exception) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ReportTaskRun other) {
      if (other == null) {
        return;
      }
      if (other.taskRunId_ != null) {
        if (taskRunId_ == null) {
          TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
        }
        TaskRunId.MergeFrom(other.TaskRunId);
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.Status != global::LittleHorse.Common.Proto.TaskStatus.TaskScheduled) {
        Status = other.Status;
      }
      if (other.logOutput_ != null) {
        if (logOutput_ == null) {
          LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
        }
        LogOutput.MergeFrom(other.LogOutput);
      }
      if (other.AttemptNumber != 0) {
        AttemptNumber = other.AttemptNumber;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Output:
          if (Output == null) {
            Output = new global::LittleHorse.Common.Proto.VariableValue();
          }
          Output.MergeFrom(other.Output);
          break;
        case ResultOneofCase.Error:
          if (Error == null) {
            Error = new global::LittleHorse.Common.Proto.LHTaskError();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResultOneofCase.Exception:
          if (Exception == null) {
            Exception = new global::LittleHorse.Common.Proto.LHTaskException();
          }
          Exception.MergeFrom(other.Exception);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskRunId_ == null) {
              TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(TaskRunId);
            break;
          }
          case 18: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 24: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 34: {
            global::LittleHorse.Common.Proto.VariableValue subBuilder = new global::LittleHorse.Common.Proto.VariableValue();
            if (resultCase_ == ResultOneofCase.Output) {
              subBuilder.MergeFrom(Output);
            }
            input.ReadMessage(subBuilder);
            Output = subBuilder;
            break;
          }
          case 42: {
            if (logOutput_ == null) {
              LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(LogOutput);
            break;
          }
          case 48: {
            AttemptNumber = input.ReadInt32();
            break;
          }
          case 58: {
            global::LittleHorse.Common.Proto.LHTaskError subBuilder = new global::LittleHorse.Common.Proto.LHTaskError();
            if (resultCase_ == ResultOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 66: {
            global::LittleHorse.Common.Proto.LHTaskException subBuilder = new global::LittleHorse.Common.Proto.LHTaskException();
            if (resultCase_ == ResultOneofCase.Exception) {
              subBuilder.MergeFrom(Exception);
            }
            input.ReadMessage(subBuilder);
            Exception = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (taskRunId_ == null) {
              TaskRunId = new global::LittleHorse.Common.Proto.TaskRunId();
            }
            input.ReadMessage(TaskRunId);
            break;
          }
          case 18: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 24: {
            Status = (global::LittleHorse.Common.Proto.TaskStatus) input.ReadEnum();
            break;
          }
          case 34: {
            global::LittleHorse.Common.Proto.VariableValue subBuilder = new global::LittleHorse.Common.Proto.VariableValue();
            if (resultCase_ == ResultOneofCase.Output) {
              subBuilder.MergeFrom(Output);
            }
            input.ReadMessage(subBuilder);
            Output = subBuilder;
            break;
          }
          case 42: {
            if (logOutput_ == null) {
              LogOutput = new global::LittleHorse.Common.Proto.VariableValue();
            }
            input.ReadMessage(LogOutput);
            break;
          }
          case 48: {
            AttemptNumber = input.ReadInt32();
            break;
          }
          case 58: {
            global::LittleHorse.Common.Proto.LHTaskError subBuilder = new global::LittleHorse.Common.Proto.LHTaskError();
            if (resultCase_ == ResultOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 66: {
            global::LittleHorse.Common.Proto.LHTaskException subBuilder = new global::LittleHorse.Common.Proto.LHTaskException();
            if (resultCase_ == ResultOneofCase.Exception) {
              subBuilder.MergeFrom(Exception);
            }
            input.ReadMessage(subBuilder);
            Exception = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message to HALT a WfRun.
  /// </summary>
  public sealed partial class StopWfRunRequest : pb::IMessage<StopWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StopWfRunRequest> _parser = new pb::MessageParser<StopWfRunRequest>(() => new StopWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StopWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopWfRunRequest(StopWfRunRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      threadRunNumber_ = other.threadRunNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StopWfRunRequest Clone() {
      return new StopWfRunRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// Is the WfRunId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "thread_run_number" field.</summary>
    public const int ThreadRunNumberFieldNumber = 2;
    private int threadRunNumber_;
    /// <summary>
    /// The number of the ThreadRun to halt. Note that halting the entrypoint ThreadRun (which
    /// always has number `0`) causes the whole WfRun to halt. If you do not manually set
    /// the thread_run_number field, it defaults to zero, so stopping the entire WfRun is the
    /// default behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreadRunNumber {
      get { return threadRunNumber_; }
      set {
        threadRunNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StopWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StopWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if (ThreadRunNumber != other.ThreadRunNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (ThreadRunNumber != 0) hash ^= ThreadRunNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StopWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      if (other.ThreadRunNumber != 0) {
        ThreadRunNumber = other.ThreadRunNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Resume a WfRun.
  /// </summary>
  public sealed partial class ResumeWfRunRequest : pb::IMessage<ResumeWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResumeWfRunRequest> _parser = new pb::MessageParser<ResumeWfRunRequest>(() => new ResumeWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ResumeWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeWfRunRequest(ResumeWfRunRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      threadRunNumber_ = other.threadRunNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ResumeWfRunRequest Clone() {
      return new ResumeWfRunRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// Is the WfRunId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "thread_run_number" field.</summary>
    public const int ThreadRunNumberFieldNumber = 2;
    private int threadRunNumber_;
    /// <summary>
    /// The number of the ThreadRun to resume. Note that resuming the entrypoint ThreadRun (which
    /// always has number `0`) causes the whole WfRun to resume. If you do not manually set
    /// the thread_run_number field, it defaults to zero, so resuming the entire WfRun is the
    /// default behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreadRunNumber {
      get { return threadRunNumber_; }
      set {
        threadRunNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ResumeWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ResumeWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if (ThreadRunNumber != other.ThreadRunNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (ThreadRunNumber != 0) hash ^= ThreadRunNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadRunNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ResumeWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      if (other.ThreadRunNumber != 0) {
        ThreadRunNumber = other.ThreadRunNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request used to rescue a failed ThreadRun at a specific NodeRun.
  /// </summary>
  public sealed partial class RescueThreadRunRequest : pb::IMessage<RescueThreadRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RescueThreadRunRequest> _parser = new pb::MessageParser<RescueThreadRunRequest>(() => new RescueThreadRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RescueThreadRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RescueThreadRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RescueThreadRunRequest(RescueThreadRunRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      threadRunNumber_ = other.threadRunNumber_;
      skipCurrentNode_ = other.skipCurrentNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RescueThreadRunRequest Clone() {
      return new RescueThreadRunRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The id of the `WfRun` which we are going to rescue.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    /// <summary>Field number for the "thread_run_number" field.</summary>
    public const int ThreadRunNumberFieldNumber = 2;
    private int threadRunNumber_;
    /// <summary>
    /// The number of the failed `ThreadRun` that we will rescue. The specified
    /// `ThreadRun` must be in a state where it's latest `NodeRun` is: &lt;br/>
    /// - In the `ERROR` state.&lt;br/>
    /// - Has no `FailureHandler` `ThreadRun`s &lt;br/>
    /// - The parent `ThreadRun`, or any parent of the parent, has not handled the `Failure`
    /// yet.
    ///
    /// If that is not true, then the `ThreadRun` cannot be rescued and the request
    /// will return `FAILED_PRECONDITION`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ThreadRunNumber {
      get { return threadRunNumber_; }
      set {
        threadRunNumber_ = value;
      }
    }

    /// <summary>Field number for the "skip_current_node" field.</summary>
    public const int SkipCurrentNodeFieldNumber = 3;
    private bool skipCurrentNode_;
    /// <summary>
    /// If set to `true`, then the ThreadRun will skip past the `Node` of the
    /// current failed `NodeRun` and advance according to the outgoing edges.
    /// If set to `false`, then the `ThreadRun` will schedule another `NodeRun` for
    /// the current `Node`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SkipCurrentNode {
      get { return skipCurrentNode_; }
      set {
        skipCurrentNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RescueThreadRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RescueThreadRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      if (ThreadRunNumber != other.ThreadRunNumber) return false;
      if (SkipCurrentNode != other.SkipCurrentNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (ThreadRunNumber != 0) hash ^= ThreadRunNumber.GetHashCode();
      if (SkipCurrentNode != false) hash ^= SkipCurrentNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (SkipCurrentNode != false) {
        output.WriteRawTag(24);
        output.WriteBool(SkipCurrentNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ThreadRunNumber);
      }
      if (SkipCurrentNode != false) {
        output.WriteRawTag(24);
        output.WriteBool(SkipCurrentNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (ThreadRunNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThreadRunNumber);
      }
      if (SkipCurrentNode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RescueThreadRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      if (other.ThreadRunNumber != 0) {
        ThreadRunNumber = other.ThreadRunNumber;
      }
      if (other.SkipCurrentNode != false) {
        SkipCurrentNode = other.SkipCurrentNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 24: {
            SkipCurrentNode = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
          case 16: {
            ThreadRunNumber = input.ReadInt32();
            break;
          }
          case 24: {
            SkipCurrentNode = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Query to retrieve a specific TaskDef Metrics Window.
  /// </summary>
  public sealed partial class TaskDefMetricsQueryRequest : pb::IMessage<TaskDefMetricsQueryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskDefMetricsQueryRequest> _parser = new pb::MessageParser<TaskDefMetricsQueryRequest>(() => new TaskDefMetricsQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskDefMetricsQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetricsQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetricsQueryRequest(TaskDefMetricsQueryRequest other) : this() {
      windowStart_ = other.windowStart_ != null ? other.windowStart_.Clone() : null;
      windowType_ = other.windowType_;
      taskDefName_ = other.taskDefName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetricsQueryRequest Clone() {
      return new TaskDefMetricsQueryRequest(this);
    }

    /// <summary>Field number for the "window_start" field.</summary>
    public const int WindowStartFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp windowStart_;
    /// <summary>
    /// Return the window *containing* this timestamp. The window start is not guaranteed to
    /// align perfectly with the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WindowStart {
      get { return windowStart_; }
      set {
        windowStart_ = value;
      }
    }

    /// <summary>Field number for the "window_type" field.</summary>
    public const int WindowTypeFieldNumber = 2;
    private global::LittleHorse.Common.Proto.MetricsWindowLength windowType_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// The window size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength WindowType {
      get { return windowType_; }
      set {
        windowType_ = value;
      }
    }

    /// <summary>Field number for the "task_def_name" field.</summary>
    public const int TaskDefNameFieldNumber = 3;
    private readonly static string TaskDefNameDefaultValue = "";

    private string taskDefName_;
    /// <summary>
    /// The name of the specific TaskDef for which we are calculating metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskDefName {
      get { return taskDefName_ ?? TaskDefNameDefaultValue; }
      set {
        taskDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_def_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskDefName {
      get { return taskDefName_ != null; }
    }
    /// <summary>Clears the value of the "task_def_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskDefName() {
      taskDefName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskDefMetricsQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskDefMetricsQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WindowStart, other.WindowStart)) return false;
      if (WindowType != other.WindowType) return false;
      if (TaskDefName != other.TaskDefName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (windowStart_ != null) hash ^= WindowStart.GetHashCode();
      if (WindowType != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= WindowType.GetHashCode();
      if (HasTaskDefName) hash ^= TaskDefName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (windowStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WindowStart);
      }
      if (WindowType != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WindowType);
      }
      if (HasTaskDefName) {
        output.WriteRawTag(26);
        output.WriteString(TaskDefName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (windowStart_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WindowStart);
      }
      if (WindowType != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(16);
        output.WriteEnum((int) WindowType);
      }
      if (HasTaskDefName) {
        output.WriteRawTag(26);
        output.WriteString(TaskDefName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (windowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WindowStart);
      }
      if (WindowType != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowType);
      }
      if (HasTaskDefName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskDefName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskDefMetricsQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.windowStart_ != null) {
        if (windowStart_ == null) {
          WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WindowStart.MergeFrom(other.WindowStart);
      }
      if (other.WindowType != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        WindowType = other.WindowType;
      }
      if (other.HasTaskDefName) {
        TaskDefName = other.TaskDefName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 16: {
            WindowType = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 26: {
            TaskDefName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 16: {
            WindowType = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 26: {
            TaskDefName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Query to retrieve TaskDef Metrics over a period of time.
  /// </summary>
  public sealed partial class ListTaskMetricsRequest : pb::IMessage<ListTaskMetricsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTaskMetricsRequest> _parser = new pb::MessageParser<ListTaskMetricsRequest>(() => new ListTaskMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTaskMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsRequest(ListTaskMetricsRequest other) : this() {
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      lastWindowStart_ = other.lastWindowStart_ != null ? other.lastWindowStart_.Clone() : null;
      windowLength_ = other.windowLength_;
      numWindows_ = other.numWindows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsRequest Clone() {
      return new ListTaskMetricsRequest(this);
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// TaskDef id for whichwe retrieve metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "last_window_start" field.</summary>
    public const int LastWindowStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastWindowStart_;
    /// <summary>
    /// This parameter is a timestamp that is used to determine the *last* window returned. The
    /// server will then return `num_windows` worth of data from before this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastWindowStart {
      get { return lastWindowStart_; }
      set {
        lastWindowStart_ = value;
      }
    }

    /// <summary>Field number for the "window_length" field.</summary>
    public const int WindowLengthFieldNumber = 3;
    private global::LittleHorse.Common.Proto.MetricsWindowLength windowLength_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// Window size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength WindowLength {
      get { return windowLength_; }
      set {
        windowLength_ = value;
      }
    }

    /// <summary>Field number for the "num_windows" field.</summary>
    public const int NumWindowsFieldNumber = 4;
    private int numWindows_;
    /// <summary>
    /// Number of windows to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumWindows {
      get { return numWindows_; }
      set {
        numWindows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTaskMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTaskMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if (!object.Equals(LastWindowStart, other.LastWindowStart)) return false;
      if (WindowLength != other.WindowLength) return false;
      if (NumWindows != other.NumWindows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (lastWindowStart_ != null) hash ^= LastWindowStart.GetHashCode();
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= WindowLength.GetHashCode();
      if (NumWindows != 0) hash ^= NumWindows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (lastWindowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (NumWindows != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumWindows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (lastWindowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (NumWindows != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumWindows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (lastWindowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowLength);
      }
      if (NumWindows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumWindows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTaskMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      if (other.lastWindowStart_ != null) {
        if (lastWindowStart_ == null) {
          LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastWindowStart.MergeFrom(other.LastWindowStart);
      }
      if (other.WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        WindowLength = other.WindowLength;
      }
      if (other.NumWindows != 0) {
        NumWindows = other.NumWindows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            if (lastWindowStart_ == null) {
              LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastWindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            NumWindows = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            if (lastWindowStart_ == null) {
              LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastWindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            NumWindows = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of TaskDef Metrics WIndows
  /// </summary>
  public sealed partial class ListTaskMetricsResponse : pb::IMessage<ListTaskMetricsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTaskMetricsResponse> _parser = new pb::MessageParser<ListTaskMetricsResponse>(() => new ListTaskMetricsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTaskMetricsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsResponse(ListTaskMetricsResponse other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskMetricsResponse Clone() {
      return new ListTaskMetricsResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TaskDefMetrics> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.TaskDefMetrics.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefMetrics> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefMetrics>();
    /// <summary>
    /// List of TaskDef Metrics Windows
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskDefMetrics> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTaskMetricsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTaskMetricsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTaskMetricsResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Query to retrieve a specific WfSpec Metrics Window.
  /// </summary>
  public sealed partial class WfSpecMetricsQueryRequest : pb::IMessage<WfSpecMetricsQueryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfSpecMetricsQueryRequest> _parser = new pb::MessageParser<WfSpecMetricsQueryRequest>(() => new WfSpecMetricsQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfSpecMetricsQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetricsQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetricsQueryRequest(WfSpecMetricsQueryRequest other) : this() {
      wfSpecId_ = other.wfSpecId_ != null ? other.wfSpecId_.Clone() : null;
      windowStart_ = other.windowStart_ != null ? other.windowStart_.Clone() : null;
      windowLength_ = other.windowLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetricsQueryRequest Clone() {
      return new WfSpecMetricsQueryRequest(this);
    }

    /// <summary>Field number for the "wf_spec_id" field.</summary>
    public const int WfSpecIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId wfSpecId_;
    /// <summary>
    /// WfSpecId of metrics to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId WfSpecId {
      get { return wfSpecId_; }
      set {
        wfSpecId_ = value;
      }
    }

    /// <summary>Field number for the "window_start" field.</summary>
    public const int WindowStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp windowStart_;
    /// <summary>
    /// Return the window *containing* this timestamp. The window start is not guaranteed to
    /// align perfectly with the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WindowStart {
      get { return windowStart_; }
      set {
        windowStart_ = value;
      }
    }

    /// <summary>Field number for the "window_length" field.</summary>
    public const int WindowLengthFieldNumber = 3;
    private global::LittleHorse.Common.Proto.MetricsWindowLength windowLength_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// The window size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength WindowLength {
      get { return windowLength_; }
      set {
        windowLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfSpecMetricsQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfSpecMetricsQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfSpecId, other.WfSpecId)) return false;
      if (!object.Equals(WindowStart, other.WindowStart)) return false;
      if (WindowLength != other.WindowLength) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfSpecId_ != null) hash ^= WfSpecId.GetHashCode();
      if (windowStart_ != null) hash ^= WindowStart.GetHashCode();
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= WindowLength.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfSpecId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfSpecId);
      }
      if (windowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowLength);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfSpecMetricsQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfSpecId_ != null) {
        if (wfSpecId_ == null) {
          WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        WfSpecId.MergeFrom(other.WfSpecId);
      }
      if (other.windowStart_ != null) {
        if (windowStart_ == null) {
          WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WindowStart.MergeFrom(other.WindowStart);
      }
      if (other.WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        WindowLength = other.WindowLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Query to retrieve WfSpec Metrics over a period of time.
  /// </summary>
  public sealed partial class ListWfMetricsRequest : pb::IMessage<ListWfMetricsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListWfMetricsRequest> _parser = new pb::MessageParser<ListWfMetricsRequest>(() => new ListWfMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListWfMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsRequest(ListWfMetricsRequest other) : this() {
      wfSpecId_ = other.wfSpecId_ != null ? other.wfSpecId_.Clone() : null;
      lastWindowStart_ = other.lastWindowStart_ != null ? other.lastWindowStart_.Clone() : null;
      windowLength_ = other.windowLength_;
      numWindows_ = other.numWindows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsRequest Clone() {
      return new ListWfMetricsRequest(this);
    }

    /// <summary>Field number for the "wf_spec_id" field.</summary>
    public const int WfSpecIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId wfSpecId_;
    /// <summary>
    /// WfSpecId of metrics to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId WfSpecId {
      get { return wfSpecId_; }
      set {
        wfSpecId_ = value;
      }
    }

    /// <summary>Field number for the "last_window_start" field.</summary>
    public const int LastWindowStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastWindowStart_;
    /// <summary>
    /// This parameter is a timestamp that is used to determine the *last* window returned. The
    /// server will then return `num_windows` worth of data from before this timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastWindowStart {
      get { return lastWindowStart_; }
      set {
        lastWindowStart_ = value;
      }
    }

    /// <summary>Field number for the "window_length" field.</summary>
    public const int WindowLengthFieldNumber = 3;
    private global::LittleHorse.Common.Proto.MetricsWindowLength windowLength_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// The window size
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength WindowLength {
      get { return windowLength_; }
      set {
        windowLength_ = value;
      }
    }

    /// <summary>Field number for the "num_windows" field.</summary>
    public const int NumWindowsFieldNumber = 4;
    private int numWindows_;
    /// <summary>
    /// Number of windows to retrieve
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NumWindows {
      get { return numWindows_; }
      set {
        numWindows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListWfMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListWfMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfSpecId, other.WfSpecId)) return false;
      if (!object.Equals(LastWindowStart, other.LastWindowStart)) return false;
      if (WindowLength != other.WindowLength) return false;
      if (NumWindows != other.NumWindows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfSpecId_ != null) hash ^= WfSpecId.GetHashCode();
      if (lastWindowStart_ != null) hash ^= LastWindowStart.GetHashCode();
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= WindowLength.GetHashCode();
      if (NumWindows != 0) hash ^= NumWindows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (lastWindowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (NumWindows != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumWindows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (lastWindowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) WindowLength);
      }
      if (NumWindows != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumWindows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfSpecId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfSpecId);
      }
      if (lastWindowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastWindowStart);
      }
      if (WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WindowLength);
      }
      if (NumWindows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumWindows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListWfMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfSpecId_ != null) {
        if (wfSpecId_ == null) {
          WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        WfSpecId.MergeFrom(other.WfSpecId);
      }
      if (other.lastWindowStart_ != null) {
        if (lastWindowStart_ == null) {
          LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastWindowStart.MergeFrom(other.LastWindowStart);
      }
      if (other.WindowLength != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        WindowLength = other.WindowLength;
      }
      if (other.NumWindows != 0) {
        NumWindows = other.NumWindows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (lastWindowStart_ == null) {
              LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastWindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            NumWindows = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (lastWindowStart_ == null) {
              LastWindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastWindowStart);
            break;
          }
          case 24: {
            WindowLength = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            NumWindows = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of WfSpec Metrics Windows
  /// </summary>
  public sealed partial class ListWfMetricsResponse : pb::IMessage<ListWfMetricsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListWfMetricsResponse> _parser = new pb::MessageParser<ListWfMetricsResponse>(() => new ListWfMetricsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListWfMetricsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsResponse(ListWfMetricsResponse other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListWfMetricsResponse Clone() {
      return new ListWfMetricsResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.WfSpecMetrics> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.WfSpecMetrics.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecMetrics> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecMetrics>();
    /// <summary>
    /// List of WfSpec Metrics Windows
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.WfSpecMetrics> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListWfMetricsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListWfMetricsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListWfMetricsResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metrics for a TaskDef in a certain time period.
  /// </summary>
  public sealed partial class TaskDefMetrics : pb::IMessage<TaskDefMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskDefMetrics> _parser = new pb::MessageParser<TaskDefMetrics>(() => new TaskDefMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskDefMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetrics(TaskDefMetrics other) : this() {
      taskDefId_ = other.taskDefId_ != null ? other.taskDefId_.Clone() : null;
      windowStart_ = other.windowStart_ != null ? other.windowStart_.Clone() : null;
      type_ = other.type_;
      scheduleToStartMax_ = other.scheduleToStartMax_;
      scheduleToStartAvg_ = other.scheduleToStartAvg_;
      startToCompleteMax_ = other.startToCompleteMax_;
      startToCompleteAvg_ = other.startToCompleteAvg_;
      totalCompleted_ = other.totalCompleted_;
      totalErrored_ = other.totalErrored_;
      totalStarted_ = other.totalStarted_;
      totalScheduled_ = other.totalScheduled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskDefMetrics Clone() {
      return new TaskDefMetrics(this);
    }

    /// <summary>Field number for the "task_def_id" field.</summary>
    public const int TaskDefIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskDefId taskDefId_;
    /// <summary>
    /// TaskDef that the metrics apply to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskDefId TaskDefId {
      get { return taskDefId_; }
      set {
        taskDefId_ = value;
      }
    }

    /// <summary>Field number for the "window_start" field.</summary>
    public const int WindowStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp windowStart_;
    /// <summary>
    /// When the window started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WindowStart {
      get { return windowStart_; }
      set {
        windowStart_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::LittleHorse.Common.Proto.MetricsWindowLength type_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// Length of the window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "schedule_to_start_max" field.</summary>
    public const int ScheduleToStartMaxFieldNumber = 4;
    private long scheduleToStartMax_;
    /// <summary>
    /// Longest time that a TaskRun was in the TASK_SCHEDULED state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScheduleToStartMax {
      get { return scheduleToStartMax_; }
      set {
        scheduleToStartMax_ = value;
      }
    }

    /// <summary>Field number for the "schedule_to_start_avg" field.</summary>
    public const int ScheduleToStartAvgFieldNumber = 5;
    private long scheduleToStartAvg_;
    /// <summary>
    /// Average time that a TaskRun was in the TASK_SCHEDULED state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ScheduleToStartAvg {
      get { return scheduleToStartAvg_; }
      set {
        scheduleToStartAvg_ = value;
      }
    }

    /// <summary>Field number for the "start_to_complete_max" field.</summary>
    public const int StartToCompleteMaxFieldNumber = 6;
    private long startToCompleteMax_;
    /// <summary>
    /// Longest time between a TaskRun being started and completed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartToCompleteMax {
      get { return startToCompleteMax_; }
      set {
        startToCompleteMax_ = value;
      }
    }

    /// <summary>Field number for the "start_to_complete_avg" field.</summary>
    public const int StartToCompleteAvgFieldNumber = 7;
    private long startToCompleteAvg_;
    /// <summary>
    /// Average time between a TaskRun being started and completed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartToCompleteAvg {
      get { return startToCompleteAvg_; }
      set {
        startToCompleteAvg_ = value;
      }
    }

    /// <summary>Field number for the "total_completed" field.</summary>
    public const int TotalCompletedFieldNumber = 8;
    private long totalCompleted_;
    /// <summary>
    /// Total number of TaskRun's that reached the TASK_SUCCESS state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCompleted {
      get { return totalCompleted_; }
      set {
        totalCompleted_ = value;
      }
    }

    /// <summary>Field number for the "total_errored" field.</summary>
    public const int TotalErroredFieldNumber = 9;
    private long totalErrored_;
    /// <summary>
    /// Total number of TaskRun's that reached the TASK_ERROR state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalErrored {
      get { return totalErrored_; }
      set {
        totalErrored_ = value;
      }
    }

    /// <summary>Field number for the "total_started" field.</summary>
    public const int TotalStartedFieldNumber = 10;
    private long totalStarted_;
    /// <summary>
    /// Total number of TaskRun's that transitioned to the TASK_RUNNING state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalStarted {
      get { return totalStarted_; }
      set {
        totalStarted_ = value;
      }
    }

    /// <summary>Field number for the "total_scheduled" field.</summary>
    public const int TotalScheduledFieldNumber = 11;
    private long totalScheduled_;
    /// <summary>
    /// Total number of TaskRun's that were scheduled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalScheduled {
      get { return totalScheduled_; }
      set {
        totalScheduled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskDefMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskDefMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TaskDefId, other.TaskDefId)) return false;
      if (!object.Equals(WindowStart, other.WindowStart)) return false;
      if (Type != other.Type) return false;
      if (ScheduleToStartMax != other.ScheduleToStartMax) return false;
      if (ScheduleToStartAvg != other.ScheduleToStartAvg) return false;
      if (StartToCompleteMax != other.StartToCompleteMax) return false;
      if (StartToCompleteAvg != other.StartToCompleteAvg) return false;
      if (TotalCompleted != other.TotalCompleted) return false;
      if (TotalErrored != other.TotalErrored) return false;
      if (TotalStarted != other.TotalStarted) return false;
      if (TotalScheduled != other.TotalScheduled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (taskDefId_ != null) hash ^= TaskDefId.GetHashCode();
      if (windowStart_ != null) hash ^= WindowStart.GetHashCode();
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= Type.GetHashCode();
      if (ScheduleToStartMax != 0L) hash ^= ScheduleToStartMax.GetHashCode();
      if (ScheduleToStartAvg != 0L) hash ^= ScheduleToStartAvg.GetHashCode();
      if (StartToCompleteMax != 0L) hash ^= StartToCompleteMax.GetHashCode();
      if (StartToCompleteAvg != 0L) hash ^= StartToCompleteAvg.GetHashCode();
      if (TotalCompleted != 0L) hash ^= TotalCompleted.GetHashCode();
      if (TotalErrored != 0L) hash ^= TotalErrored.GetHashCode();
      if (TotalStarted != 0L) hash ^= TotalStarted.GetHashCode();
      if (TotalScheduled != 0L) hash ^= TotalScheduled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ScheduleToStartMax != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ScheduleToStartMax);
      }
      if (ScheduleToStartAvg != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ScheduleToStartAvg);
      }
      if (StartToCompleteMax != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(StartToCompleteAvg);
      }
      if (TotalCompleted != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalErrored);
      }
      if (TotalStarted != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TotalStarted);
      }
      if (TotalScheduled != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalScheduled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (taskDefId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TaskDefId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (ScheduleToStartMax != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ScheduleToStartMax);
      }
      if (ScheduleToStartAvg != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ScheduleToStartAvg);
      }
      if (StartToCompleteMax != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(StartToCompleteAvg);
      }
      if (TotalCompleted != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalErrored);
      }
      if (TotalStarted != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TotalStarted);
      }
      if (TotalScheduled != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(TotalScheduled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (taskDefId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskDefId);
      }
      if (windowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ScheduleToStartMax != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScheduleToStartMax);
      }
      if (ScheduleToStartAvg != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScheduleToStartAvg);
      }
      if (StartToCompleteMax != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartToCompleteAvg);
      }
      if (TotalCompleted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalErrored);
      }
      if (TotalStarted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalStarted);
      }
      if (TotalScheduled != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalScheduled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskDefMetrics other) {
      if (other == null) {
        return;
      }
      if (other.taskDefId_ != null) {
        if (taskDefId_ == null) {
          TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
        }
        TaskDefId.MergeFrom(other.TaskDefId);
      }
      if (other.windowStart_ != null) {
        if (windowStart_ == null) {
          WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WindowStart.MergeFrom(other.WindowStart);
      }
      if (other.Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        Type = other.Type;
      }
      if (other.ScheduleToStartMax != 0L) {
        ScheduleToStartMax = other.ScheduleToStartMax;
      }
      if (other.ScheduleToStartAvg != 0L) {
        ScheduleToStartAvg = other.ScheduleToStartAvg;
      }
      if (other.StartToCompleteMax != 0L) {
        StartToCompleteMax = other.StartToCompleteMax;
      }
      if (other.StartToCompleteAvg != 0L) {
        StartToCompleteAvg = other.StartToCompleteAvg;
      }
      if (other.TotalCompleted != 0L) {
        TotalCompleted = other.TotalCompleted;
      }
      if (other.TotalErrored != 0L) {
        TotalErrored = other.TotalErrored;
      }
      if (other.TotalStarted != 0L) {
        TotalStarted = other.TotalStarted;
      }
      if (other.TotalScheduled != 0L) {
        TotalScheduled = other.TotalScheduled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            Type = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            ScheduleToStartMax = input.ReadInt64();
            break;
          }
          case 40: {
            ScheduleToStartAvg = input.ReadInt64();
            break;
          }
          case 48: {
            StartToCompleteMax = input.ReadInt64();
            break;
          }
          case 56: {
            StartToCompleteAvg = input.ReadInt64();
            break;
          }
          case 64: {
            TotalCompleted = input.ReadInt64();
            break;
          }
          case 72: {
            TotalErrored = input.ReadInt64();
            break;
          }
          case 80: {
            TotalStarted = input.ReadInt64();
            break;
          }
          case 88: {
            TotalScheduled = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (taskDefId_ == null) {
              TaskDefId = new global::LittleHorse.Common.Proto.TaskDefId();
            }
            input.ReadMessage(TaskDefId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            Type = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            ScheduleToStartMax = input.ReadInt64();
            break;
          }
          case 40: {
            ScheduleToStartAvg = input.ReadInt64();
            break;
          }
          case 48: {
            StartToCompleteMax = input.ReadInt64();
            break;
          }
          case 56: {
            StartToCompleteAvg = input.ReadInt64();
            break;
          }
          case 64: {
            TotalCompleted = input.ReadInt64();
            break;
          }
          case 72: {
            TotalErrored = input.ReadInt64();
            break;
          }
          case 80: {
            TotalStarted = input.ReadInt64();
            break;
          }
          case 88: {
            TotalScheduled = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metrics for a WfSpec in a specific time window
  /// </summary>
  public sealed partial class WfSpecMetrics : pb::IMessage<WfSpecMetrics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WfSpecMetrics> _parser = new pb::MessageParser<WfSpecMetrics>(() => new WfSpecMetrics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WfSpecMetrics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetrics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetrics(WfSpecMetrics other) : this() {
      wfSpecId_ = other.wfSpecId_ != null ? other.wfSpecId_.Clone() : null;
      windowStart_ = other.windowStart_ != null ? other.windowStart_.Clone() : null;
      type_ = other.type_;
      totalStarted_ = other.totalStarted_;
      totalCompleted_ = other.totalCompleted_;
      totalErrored_ = other.totalErrored_;
      startToCompleteMax_ = other.startToCompleteMax_;
      startToCompleteAvg_ = other.startToCompleteAvg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WfSpecMetrics Clone() {
      return new WfSpecMetrics(this);
    }

    /// <summary>Field number for the "wf_spec_id" field.</summary>
    public const int WfSpecIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId wfSpecId_;
    /// <summary>
    /// The WfSpecId that these metrics analyze
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId WfSpecId {
      get { return wfSpecId_; }
      set {
        wfSpecId_ = value;
      }
    }

    /// <summary>Field number for the "window_start" field.</summary>
    public const int WindowStartFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp windowStart_;
    /// <summary>
    /// The time that the window started
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp WindowStart {
      get { return windowStart_; }
      set {
        windowStart_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::LittleHorse.Common.Proto.MetricsWindowLength type_ = global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5;
    /// <summary>
    /// The length of the window
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.MetricsWindowLength Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "total_started" field.</summary>
    public const int TotalStartedFieldNumber = 4;
    private long totalStarted_;
    /// <summary>
    /// Total number of WfRun's created for this WfSpec
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalStarted {
      get { return totalStarted_; }
      set {
        totalStarted_ = value;
      }
    }

    /// <summary>Field number for the "total_completed" field.</summary>
    public const int TotalCompletedFieldNumber = 5;
    private long totalCompleted_;
    /// <summary>
    /// Total number of WfRun's that reached the COMPLETED state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCompleted {
      get { return totalCompleted_; }
      set {
        totalCompleted_ = value;
      }
    }

    /// <summary>Field number for the "total_errored" field.</summary>
    public const int TotalErroredFieldNumber = 6;
    private long totalErrored_;
    /// <summary>
    /// Total number of WfRun's that reached the ERROR state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalErrored {
      get { return totalErrored_; }
      set {
        totalErrored_ = value;
      }
    }

    /// <summary>Field number for the "start_to_complete_max" field.</summary>
    public const int StartToCompleteMaxFieldNumber = 7;
    private long startToCompleteMax_;
    /// <summary>
    /// Longest time between a WfRun being started and reaching the COMPLETED state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartToCompleteMax {
      get { return startToCompleteMax_; }
      set {
        startToCompleteMax_ = value;
      }
    }

    /// <summary>Field number for the "start_to_complete_avg" field.</summary>
    public const int StartToCompleteAvgFieldNumber = 8;
    private long startToCompleteAvg_;
    /// <summary>
    /// Average time that a WfRun took to reach the COMPLETED state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartToCompleteAvg {
      get { return startToCompleteAvg_; }
      set {
        startToCompleteAvg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WfSpecMetrics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WfSpecMetrics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfSpecId, other.WfSpecId)) return false;
      if (!object.Equals(WindowStart, other.WindowStart)) return false;
      if (Type != other.Type) return false;
      if (TotalStarted != other.TotalStarted) return false;
      if (TotalCompleted != other.TotalCompleted) return false;
      if (TotalErrored != other.TotalErrored) return false;
      if (StartToCompleteMax != other.StartToCompleteMax) return false;
      if (StartToCompleteAvg != other.StartToCompleteAvg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfSpecId_ != null) hash ^= WfSpecId.GetHashCode();
      if (windowStart_ != null) hash ^= WindowStart.GetHashCode();
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) hash ^= Type.GetHashCode();
      if (TotalStarted != 0L) hash ^= TotalStarted.GetHashCode();
      if (TotalCompleted != 0L) hash ^= TotalCompleted.GetHashCode();
      if (TotalErrored != 0L) hash ^= TotalErrored.GetHashCode();
      if (StartToCompleteMax != 0L) hash ^= StartToCompleteMax.GetHashCode();
      if (StartToCompleteAvg != 0L) hash ^= StartToCompleteAvg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (TotalStarted != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStarted);
      }
      if (TotalCompleted != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalErrored);
      }
      if (StartToCompleteMax != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StartToCompleteAvg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfSpecId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfSpecId);
      }
      if (windowStart_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (TotalStarted != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalStarted);
      }
      if (TotalCompleted != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalErrored);
      }
      if (StartToCompleteMax != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(StartToCompleteAvg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfSpecId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfSpecId);
      }
      if (windowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WindowStart);
      }
      if (Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (TotalStarted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalStarted);
      }
      if (TotalCompleted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCompleted);
      }
      if (TotalErrored != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalErrored);
      }
      if (StartToCompleteMax != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartToCompleteMax);
      }
      if (StartToCompleteAvg != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartToCompleteAvg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WfSpecMetrics other) {
      if (other == null) {
        return;
      }
      if (other.wfSpecId_ != null) {
        if (wfSpecId_ == null) {
          WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        WfSpecId.MergeFrom(other.WfSpecId);
      }
      if (other.windowStart_ != null) {
        if (windowStart_ == null) {
          WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        WindowStart.MergeFrom(other.WindowStart);
      }
      if (other.Type != global::LittleHorse.Common.Proto.MetricsWindowLength.Minutes5) {
        Type = other.Type;
      }
      if (other.TotalStarted != 0L) {
        TotalStarted = other.TotalStarted;
      }
      if (other.TotalCompleted != 0L) {
        TotalCompleted = other.TotalCompleted;
      }
      if (other.TotalErrored != 0L) {
        TotalErrored = other.TotalErrored;
      }
      if (other.StartToCompleteMax != 0L) {
        StartToCompleteMax = other.StartToCompleteMax;
      }
      if (other.StartToCompleteAvg != 0L) {
        StartToCompleteAvg = other.StartToCompleteAvg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            Type = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            TotalStarted = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCompleted = input.ReadInt64();
            break;
          }
          case 48: {
            TotalErrored = input.ReadInt64();
            break;
          }
          case 56: {
            StartToCompleteMax = input.ReadInt64();
            break;
          }
          case 64: {
            StartToCompleteAvg = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfSpecId_ == null) {
              WfSpecId = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(WfSpecId);
            break;
          }
          case 18: {
            if (windowStart_ == null) {
              WindowStart = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(WindowStart);
            break;
          }
          case 24: {
            Type = (global::LittleHorse.Common.Proto.MetricsWindowLength) input.ReadEnum();
            break;
          }
          case 32: {
            TotalStarted = input.ReadInt64();
            break;
          }
          case 40: {
            TotalCompleted = input.ReadInt64();
            break;
          }
          case 48: {
            TotalErrored = input.ReadInt64();
            break;
          }
          case 56: {
            StartToCompleteMax = input.ReadInt64();
            break;
          }
          case 64: {
            StartToCompleteAvg = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List UserTaskRun's for a specific WfRun
  /// </summary>
  public sealed partial class ListUserTaskRunRequest : pb::IMessage<ListUserTaskRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListUserTaskRunRequest> _parser = new pb::MessageParser<ListUserTaskRunRequest>(() => new ListUserTaskRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListUserTaskRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListUserTaskRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListUserTaskRunRequest(ListUserTaskRunRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListUserTaskRunRequest Clone() {
      return new ListUserTaskRunRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The WfRun for which to list UserTaskRuns
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListUserTaskRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListUserTaskRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListUserTaskRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of UserTaskRuns
  /// </summary>
  public sealed partial class UserTaskRunList : pb::IMessage<UserTaskRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTaskRunList> _parser = new pb::MessageParser<UserTaskRunList>(() => new UserTaskRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserTaskRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunList(UserTaskRunList other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserTaskRunList Clone() {
      return new UserTaskRunList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.UserTaskRun> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.UserTaskRun.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRun> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRun>();
    /// <summary>
    /// A list of UserTaskRun Objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.UserTaskRun> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserTaskRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserTaskRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserTaskRunList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List of ScheduledWfRun
  /// </summary>
  public sealed partial class ScheduledWfRunIdList : pb::IMessage<ScheduledWfRunIdList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScheduledWfRunIdList> _parser = new pb::MessageParser<ScheduledWfRunIdList>(() => new ScheduledWfRunIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScheduledWfRunIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledWfRunIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledWfRunIdList(ScheduledWfRunIdList other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScheduledWfRunIdList Clone() {
      return new ScheduledWfRunIdList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.ScheduledWfRunId> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.ScheduledWfRunId.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.ScheduledWfRunId> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.ScheduledWfRunId>();
    /// <summary>
    /// A list of ScheduledWfRun Objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.ScheduledWfRunId> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScheduledWfRunIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScheduledWfRunIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScheduledWfRunIdList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Search filters for ScheduledWfRun's
  /// </summary>
  public sealed partial class SearchScheduledWfRunRequest : pb::IMessage<SearchScheduledWfRunRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SearchScheduledWfRunRequest> _parser = new pb::MessageParser<SearchScheduledWfRunRequest>(() => new SearchScheduledWfRunRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SearchScheduledWfRunRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchScheduledWfRunRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchScheduledWfRunRequest(SearchScheduledWfRunRequest other) : this() {
      _hasBits0 = other._hasBits0;
      wfSpecName_ = other.wfSpecName_;
      majorVersion_ = other.majorVersion_;
      revision_ = other.revision_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SearchScheduledWfRunRequest Clone() {
      return new SearchScheduledWfRunRequest(this);
    }

    /// <summary>Field number for the "wf_spec_name" field.</summary>
    public const int WfSpecNameFieldNumber = 1;
    private string wfSpecName_ = "";
    /// <summary>
    /// The name of the WfSpec to filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WfSpecName {
      get { return wfSpecName_; }
      set {
        wfSpecName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private readonly static int MajorVersionDefaultValue = 0;

    private int majorVersion_;
    /// <summary>
    /// The major version of the WfSpec to filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { if ((_hasBits0 & 1) != 0) { return majorVersion_; } else { return MajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "revision" field.</summary>
    public const int RevisionFieldNumber = 3;
    private readonly static int RevisionDefaultValue = 0;

    private int revision_;
    /// <summary>
    /// The revision number of the WfSpec to filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Revision {
      get { if ((_hasBits0 & 2) != 0) { return revision_; } else { return RevisionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        revision_ = value;
      }
    }
    /// <summary>Gets whether the "revision" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRevision {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "revision" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRevision() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SearchScheduledWfRunRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SearchScheduledWfRunRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WfSpecName != other.WfSpecName) return false;
      if (MajorVersion != other.MajorVersion) return false;
      if (Revision != other.Revision) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WfSpecName.Length != 0) hash ^= WfSpecName.GetHashCode();
      if (HasMajorVersion) hash ^= MajorVersion.GetHashCode();
      if (HasRevision) hash ^= Revision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(24);
        output.WriteInt32(Revision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WfSpecName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WfSpecName);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (HasRevision) {
        output.WriteRawTag(24);
        output.WriteInt32(Revision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WfSpecName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WfSpecName);
      }
      if (HasMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (HasRevision) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Revision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SearchScheduledWfRunRequest other) {
      if (other == null) {
        return;
      }
      if (other.WfSpecName.Length != 0) {
        WfSpecName = other.WfSpecName;
      }
      if (other.HasMajorVersion) {
        MajorVersion = other.MajorVersion;
      }
      if (other.HasRevision) {
        Revision = other.Revision;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WfSpecName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            Revision = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WfSpecName = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            Revision = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a specific task worker
  /// </summary>
  public sealed partial class TaskWorkerMetadata : pb::IMessage<TaskWorkerMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskWorkerMetadata> _parser = new pb::MessageParser<TaskWorkerMetadata>(() => new TaskWorkerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskWorkerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerMetadata(TaskWorkerMetadata other) : this() {
      taskWorkerId_ = other.taskWorkerId_;
      latestHeartbeat_ = other.latestHeartbeat_ != null ? other.latestHeartbeat_.Clone() : null;
      hosts_ = other.hosts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerMetadata Clone() {
      return new TaskWorkerMetadata(this);
    }

    /// <summary>Field number for the "task_worker_id" field.</summary>
    public const int TaskWorkerIdFieldNumber = 1;
    private string taskWorkerId_ = "";
    /// <summary>
    /// User-defined identifier for the worker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TaskWorkerId {
      get { return taskWorkerId_; }
      set {
        taskWorkerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latest_heartbeat" field.</summary>
    public const int LatestHeartbeatFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp latestHeartbeat_;
    /// <summary>
    /// Timestamp indicating the last heartbeat sent by the worker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LatestHeartbeat {
      get { return latestHeartbeat_; }
      set {
        latestHeartbeat_ = value;
      }
    }

    /// <summary>Field number for the "hosts" field.</summary>
    public const int HostsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.LHHostInfo> _repeated_hosts_codec
        = pb::FieldCodec.ForMessage(26, global::LittleHorse.Common.Proto.LHHostInfo.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo> hosts_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo>();
    /// <summary>
    /// The host(s) where the worker is polling tasks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.LHHostInfo> Hosts {
      get { return hosts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskWorkerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskWorkerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskWorkerId != other.TaskWorkerId) return false;
      if (!object.Equals(LatestHeartbeat, other.LatestHeartbeat)) return false;
      if(!hosts_.Equals(other.hosts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskWorkerId.Length != 0) hash ^= TaskWorkerId.GetHashCode();
      if (latestHeartbeat_ != null) hash ^= LatestHeartbeat.GetHashCode();
      hash ^= hosts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskWorkerId);
      }
      if (latestHeartbeat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LatestHeartbeat);
      }
      hosts_.WriteTo(output, _repeated_hosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskWorkerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskWorkerId);
      }
      if (latestHeartbeat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LatestHeartbeat);
      }
      hosts_.WriteTo(ref output, _repeated_hosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TaskWorkerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskWorkerId);
      }
      if (latestHeartbeat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LatestHeartbeat);
      }
      size += hosts_.CalculateSize(_repeated_hosts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskWorkerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.TaskWorkerId.Length != 0) {
        TaskWorkerId = other.TaskWorkerId;
      }
      if (other.latestHeartbeat_ != null) {
        if (latestHeartbeat_ == null) {
          LatestHeartbeat = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LatestHeartbeat.MergeFrom(other.LatestHeartbeat);
      }
      hosts_.Add(other.hosts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 18: {
            if (latestHeartbeat_ == null) {
              LatestHeartbeat = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestHeartbeat);
            break;
          }
          case 26: {
            hosts_.AddEntriesFrom(input, _repeated_hosts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TaskWorkerId = input.ReadString();
            break;
          }
          case 18: {
            if (latestHeartbeat_ == null) {
              LatestHeartbeat = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LatestHeartbeat);
            break;
          }
          case 26: {
            hosts_.AddEntriesFrom(ref input, _repeated_hosts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes all workers registered for a specific TaskDef.
  /// </summary>
  public sealed partial class TaskWorkerGroup : pb::IMessage<TaskWorkerGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskWorkerGroup> _parser = new pb::MessageParser<TaskWorkerGroup>(() => new TaskWorkerGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskWorkerGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerGroup(TaskWorkerGroup other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      taskWorkers_ = other.taskWorkers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskWorkerGroup Clone() {
      return new TaskWorkerGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.TaskWorkerGroupId id_;
    /// <summary>
    /// Identifier for the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.TaskWorkerGroupId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Timestamp indicating when the worker group was initially registered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "task_workers" field.</summary>
    public const int TaskWorkersFieldNumber = 3;
    private static readonly pbc::MapField<string, global::LittleHorse.Common.Proto.TaskWorkerMetadata>.Codec _map_taskWorkers_codec
        = new pbc::MapField<string, global::LittleHorse.Common.Proto.TaskWorkerMetadata>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::LittleHorse.Common.Proto.TaskWorkerMetadata.Parser), 26);
    private readonly pbc::MapField<string, global::LittleHorse.Common.Proto.TaskWorkerMetadata> taskWorkers_ = new pbc::MapField<string, global::LittleHorse.Common.Proto.TaskWorkerMetadata>();
    /// <summary>
    /// Metadata grouped by ClientId string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, global::LittleHorse.Common.Proto.TaskWorkerMetadata> TaskWorkers {
      get { return taskWorkers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskWorkerGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskWorkerGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!TaskWorkers.Equals(other.TaskWorkers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      hash ^= TaskWorkers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      taskWorkers_.WriteTo(output, _map_taskWorkers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreatedAt);
      }
      taskWorkers_.WriteTo(ref output, _map_taskWorkers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      size += taskWorkers_.CalculateSize(_map_taskWorkers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskWorkerGroup other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LittleHorse.Common.Proto.TaskWorkerGroupId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      taskWorkers_.MergeFrom(other.taskWorkers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskWorkerGroupId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            taskWorkers_.AddEntriesFrom(input, _map_taskWorkers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LittleHorse.Common.Proto.TaskWorkerGroupId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 26: {
            taskWorkers_.AddEntriesFrom(ref input, _map_taskWorkers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// List TaskRun's for a specific WfRun
  /// </summary>
  public sealed partial class ListTaskRunsRequest : pb::IMessage<ListTaskRunsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListTaskRunsRequest> _parser = new pb::MessageParser<ListTaskRunsRequest>(() => new ListTaskRunsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ListTaskRunsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskRunsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskRunsRequest(ListTaskRunsRequest other) : this() {
      wfRunId_ = other.wfRunId_ != null ? other.wfRunId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ListTaskRunsRequest Clone() {
      return new ListTaskRunsRequest(this);
    }

    /// <summary>Field number for the "wf_run_id" field.</summary>
    public const int WfRunIdFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfRunId wfRunId_;
    /// <summary>
    /// The WfRun for which to list TaskRun's
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfRunId WfRunId {
      get { return wfRunId_; }
      set {
        wfRunId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ListTaskRunsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ListTaskRunsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WfRunId, other.WfRunId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (wfRunId_ != null) hash ^= WfRunId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (wfRunId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(WfRunId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (wfRunId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WfRunId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ListTaskRunsRequest other) {
      if (other == null) {
        return;
      }
      if (other.wfRunId_ != null) {
        if (wfRunId_ == null) {
          WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
        }
        WfRunId.MergeFrom(other.WfRunId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (wfRunId_ == null) {
              WfRunId = new global::LittleHorse.Common.Proto.WfRunId();
            }
            input.ReadMessage(WfRunId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A list of TaskRun's
  /// </summary>
  public sealed partial class TaskRunList : pb::IMessage<TaskRunList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRunList> _parser = new pb::MessageParser<TaskRunList>(() => new TaskRunList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskRunList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunList(TaskRunList other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskRunList Clone() {
      return new TaskRunList(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LittleHorse.Common.Proto.TaskRun> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::LittleHorse.Common.Proto.TaskRun.Parser);
    private readonly pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRun> results_ = new pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRun>();
    /// <summary>
    /// A list of TaskRun Objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::LittleHorse.Common.Proto.TaskRun> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskRunList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskRunList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskRunList other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// EXPERIMENTAL: migrate live WfRun's from one version of a WfSpec to another.
  /// </summary>
  public sealed partial class MigrateWfSpecRequest : pb::IMessage<MigrateWfSpecRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MigrateWfSpecRequest> _parser = new pb::MessageParser<MigrateWfSpecRequest>(() => new MigrateWfSpecRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MigrateWfSpecRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MigrateWfSpecRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MigrateWfSpecRequest(MigrateWfSpecRequest other) : this() {
      oldWfSpec_ = other.oldWfSpec_ != null ? other.oldWfSpec_.Clone() : null;
      migration_ = other.migration_ != null ? other.migration_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MigrateWfSpecRequest Clone() {
      return new MigrateWfSpecRequest(this);
    }

    /// <summary>Field number for the "old_wf_spec" field.</summary>
    public const int OldWfSpecFieldNumber = 1;
    private global::LittleHorse.Common.Proto.WfSpecId oldWfSpec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecId OldWfSpec {
      get { return oldWfSpec_; }
      set {
        oldWfSpec_ = value;
      }
    }

    /// <summary>Field number for the "migration" field.</summary>
    public const int MigrationFieldNumber = 2;
    private global::LittleHorse.Common.Proto.WfSpecVersionMigration migration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::LittleHorse.Common.Proto.WfSpecVersionMigration Migration {
      get { return migration_; }
      set {
        migration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MigrateWfSpecRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MigrateWfSpecRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OldWfSpec, other.OldWfSpec)) return false;
      if (!object.Equals(Migration, other.Migration)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (oldWfSpec_ != null) hash ^= OldWfSpec.GetHashCode();
      if (migration_ != null) hash ^= Migration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (oldWfSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldWfSpec);
      }
      if (migration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Migration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (oldWfSpec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OldWfSpec);
      }
      if (migration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Migration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (oldWfSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OldWfSpec);
      }
      if (migration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Migration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MigrateWfSpecRequest other) {
      if (other == null) {
        return;
      }
      if (other.oldWfSpec_ != null) {
        if (oldWfSpec_ == null) {
          OldWfSpec = new global::LittleHorse.Common.Proto.WfSpecId();
        }
        OldWfSpec.MergeFrom(other.OldWfSpec);
      }
      if (other.migration_ != null) {
        if (migration_ == null) {
          Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
        }
        Migration.MergeFrom(other.Migration);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (oldWfSpec_ == null) {
              OldWfSpec = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(OldWfSpec);
            break;
          }
          case 18: {
            if (migration_ == null) {
              Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
            }
            input.ReadMessage(Migration);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (oldWfSpec_ == null) {
              OldWfSpec = new global::LittleHorse.Common.Proto.WfSpecId();
            }
            input.ReadMessage(OldWfSpec);
            break;
          }
          case 18: {
            if (migration_ == null) {
              Migration = new global::LittleHorse.Common.Proto.WfSpecVersionMigration();
            }
            input.ReadMessage(Migration);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get the latest WfSpec with a given name and optionally majorVersion
  /// </summary>
  public sealed partial class GetLatestWfSpecRequest : pb::IMessage<GetLatestWfSpecRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLatestWfSpecRequest> _parser = new pb::MessageParser<GetLatestWfSpecRequest>(() => new GetLatestWfSpecRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLatestWfSpecRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestWfSpecRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestWfSpecRequest(GetLatestWfSpecRequest other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      majorVersion_ = other.majorVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLatestWfSpecRequest Clone() {
      return new GetLatestWfSpecRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the WfSpec to get. This is required.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 2;
    private readonly static int MajorVersionDefaultValue = 0;

    private int majorVersion_;
    /// <summary>
    /// Optionally get only WfSpec's that have the same major version. This can be useful
    /// if you want to guarantee that there have been no breaking changes to the API of the
    /// WfSpec, for example, to ensure that there have been no changes to searchable variables
    /// or required input variables.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { if ((_hasBits0 & 1) != 0) { return majorVersion_; } else { return MajorVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        majorVersion_ = value;
      }
    }
    /// <summary>Gets whether the "major_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMajorVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "major_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMajorVersion() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLatestWfSpecRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLatestWfSpecRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (MajorVersion != other.MajorVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (HasMajorVersion) hash ^= MajorVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasMajorVersion) {
        output.WriteRawTag(16);
        output.WriteInt32(MajorVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasMajorVersion) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLatestWfSpecRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.HasMajorVersion) {
        MajorVersion = other.MajorVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            MajorVersion = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The version of the LH Server according to Semantic Versioning
  /// </summary>
  public sealed partial class ServerVersionResponse : pb::IMessage<ServerVersionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerVersionResponse> _parser = new pb::MessageParser<ServerVersionResponse>(() => new ServerVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LittleHorse.Common.Proto.ServiceReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerVersionResponse(ServerVersionResponse other) : this() {
      majorVersion_ = other.majorVersion_;
      minorVersion_ = other.minorVersion_;
      patchVersion_ = other.patchVersion_;
      preReleaseIdentifier_ = other.preReleaseIdentifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerVersionResponse Clone() {
      return new ServerVersionResponse(this);
    }

    /// <summary>Field number for the "major_version" field.</summary>
    public const int MajorVersionFieldNumber = 1;
    private int majorVersion_;
    /// <summary>
    /// Server Major Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MajorVersion {
      get { return majorVersion_; }
      set {
        majorVersion_ = value;
      }
    }

    /// <summary>Field number for the "minor_version" field.</summary>
    public const int MinorVersionFieldNumber = 2;
    private int minorVersion_;
    /// <summary>
    /// Server Minor Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MinorVersion {
      get { return minorVersion_; }
      set {
        minorVersion_ = value;
      }
    }

    /// <summary>Field number for the "patch_version" field.</summary>
    public const int PatchVersionFieldNumber = 3;
    private int patchVersion_;
    /// <summary>
    /// Server Patch Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PatchVersion {
      get { return patchVersion_; }
      set {
        patchVersion_ = value;
      }
    }

    /// <summary>Field number for the "pre_release_identifier" field.</summary>
    public const int PreReleaseIdentifierFieldNumber = 4;
    private readonly static string PreReleaseIdentifierDefaultValue = "";

    private string preReleaseIdentifier_;
    /// <summary>
    /// Prerelease Identifier. If this is set, then the server is NOT a production release
    /// but rather a release candidate or experimental pre-release.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PreReleaseIdentifier {
      get { return preReleaseIdentifier_ ?? PreReleaseIdentifierDefaultValue; }
      set {
        preReleaseIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pre_release_identifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreReleaseIdentifier {
      get { return preReleaseIdentifier_ != null; }
    }
    /// <summary>Clears the value of the "pre_release_identifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreReleaseIdentifier() {
      preReleaseIdentifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MajorVersion != other.MajorVersion) return false;
      if (MinorVersion != other.MinorVersion) return false;
      if (PatchVersion != other.PatchVersion) return false;
      if (PreReleaseIdentifier != other.PreReleaseIdentifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MajorVersion != 0) hash ^= MajorVersion.GetHashCode();
      if (MinorVersion != 0) hash ^= MinorVersion.GetHashCode();
      if (PatchVersion != 0) hash ^= PatchVersion.GetHashCode();
      if (HasPreReleaseIdentifier) hash ^= PreReleaseIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MajorVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinorVersion);
      }
      if (PatchVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PatchVersion);
      }
      if (HasPreReleaseIdentifier) {
        output.WriteRawTag(34);
        output.WriteString(PreReleaseIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MajorVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MajorVersion);
      }
      if (MinorVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinorVersion);
      }
      if (PatchVersion != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PatchVersion);
      }
      if (HasPreReleaseIdentifier) {
        output.WriteRawTag(34);
        output.WriteString(PreReleaseIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorVersion);
      }
      if (MinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorVersion);
      }
      if (PatchVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PatchVersion);
      }
      if (HasPreReleaseIdentifier) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreReleaseIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.MajorVersion != 0) {
        MajorVersion = other.MajorVersion;
      }
      if (other.MinorVersion != 0) {
        MinorVersion = other.MinorVersion;
      }
      if (other.PatchVersion != 0) {
        PatchVersion = other.PatchVersion;
      }
      if (other.HasPreReleaseIdentifier) {
        PreReleaseIdentifier = other.PreReleaseIdentifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 16: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            PatchVersion = input.ReadInt32();
            break;
          }
          case 34: {
            PreReleaseIdentifier = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MajorVersion = input.ReadInt32();
            break;
          }
          case 16: {
            MinorVersion = input.ReadInt32();
            break;
          }
          case 24: {
            PatchVersion = input.ReadInt32();
            break;
          }
          case 34: {
            PreReleaseIdentifier = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
