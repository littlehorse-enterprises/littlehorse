// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: acls.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ACLResource int32

const (
	ACLResource_ACL_WF_SPEC            ACLResource = 0
	ACLResource_ACL_TASK_DEF           ACLResource = 1
	ACLResource_ACL_EXTERNAL_EVENT_DEF ACLResource = 2
	ACLResource_ACL_USER_TASK_DEF      ACLResource = 3
	ACLResource_ACL_PRINCIPAL          ACLResource = 4
	ACLResource_ACL_TENANT             ACLResource = 5
	ACLResource_ACL_ALL_RESOURCE_TYPES ACLResource = 6
)

// Enum value maps for ACLResource.
var (
	ACLResource_name = map[int32]string{
		0: "ACL_WF_SPEC",
		1: "ACL_TASK_DEF",
		2: "ACL_EXTERNAL_EVENT_DEF",
		3: "ACL_USER_TASK_DEF",
		4: "ACL_PRINCIPAL",
		5: "ACL_TENANT",
		6: "ACL_ALL_RESOURCE_TYPES",
	}
	ACLResource_value = map[string]int32{
		"ACL_WF_SPEC":            0,
		"ACL_TASK_DEF":           1,
		"ACL_EXTERNAL_EVENT_DEF": 2,
		"ACL_USER_TASK_DEF":      3,
		"ACL_PRINCIPAL":          4,
		"ACL_TENANT":             5,
		"ACL_ALL_RESOURCE_TYPES": 6,
	}
)

func (x ACLResource) Enum() *ACLResource {
	p := new(ACLResource)
	*p = x
	return p
}

func (x ACLResource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACLResource) Descriptor() protoreflect.EnumDescriptor {
	return file_acls_proto_enumTypes[0].Descriptor()
}

func (ACLResource) Type() protoreflect.EnumType {
	return &file_acls_proto_enumTypes[0]
}

func (x ACLResource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACLResource.Descriptor instead.
func (ACLResource) EnumDescriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{0}
}

type ACLAction int32

const (
	ACLAction_READ           ACLAction = 0
	ACLAction_EXECUTE        ACLAction = 1
	ACLAction_WRITE_METADATA ACLAction = 2
	ACLAction_ALL_ACTIONS    ACLAction = 3
)

// Enum value maps for ACLAction.
var (
	ACLAction_name = map[int32]string{
		0: "READ",
		1: "EXECUTE",
		2: "WRITE_METADATA",
		3: "ALL_ACTIONS",
	}
	ACLAction_value = map[string]int32{
		"READ":           0,
		"EXECUTE":        1,
		"WRITE_METADATA": 2,
		"ALL_ACTIONS":    3,
	}
)

func (x ACLAction) Enum() *ACLAction {
	p := new(ACLAction)
	*p = x
	return p
}

func (x ACLAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ACLAction) Descriptor() protoreflect.EnumDescriptor {
	return file_acls_proto_enumTypes[1].Descriptor()
}

func (ACLAction) Type() protoreflect.EnumType {
	return &file_acls_proto_enumTypes[1]
}

func (x ACLAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ACLAction.Descriptor instead.
func (ACLAction) EnumDescriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{1}
}

// This is a GlobalGetable.
type Principal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Principals are agnostic of the Authentication protocol that you use. In OAuth,
	// the id is retrieved by looking at the claims on the request. In mTLS, the
	// id is retrived by looking at the Subject Name of the client certificate.
	Id   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Acls []*ServerACL `protobuf:"bytes,2,rep,name=acls,proto3" json:"acls,omitempty"`
	// Used for multi-tenancy of the LittleHorse Server.
	//
	// NOTE: the principal id (field 1) MUST be unique across all tenants. The
	// way multi-tenancy works is that the
	TenantIds       []string `protobuf:"bytes,3,rep,name=tenant_ids,json=tenantIds,proto3" json:"tenant_ids,omitempty"`
	DefaultTenantId string   `protobuf:"bytes,4,opt,name=default_tenant_id,json=defaultTenantId,proto3" json:"default_tenant_id,omitempty"`
}

func (x *Principal) Reset() {
	*x = Principal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Principal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Principal) ProtoMessage() {}

func (x *Principal) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Principal.ProtoReflect.Descriptor instead.
func (*Principal) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{0}
}

func (x *Principal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Principal) GetAcls() []*ServerACL {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *Principal) GetTenantIds() []string {
	if x != nil {
		return x.TenantIds
	}
	return nil
}

func (x *Principal) GetDefaultTenantId() string {
	if x != nil {
		return x.DefaultTenantId
	}
	return ""
}

// This is a GlobalGetable.
type Tenant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Future versions will include quotas on a per-Tenant basis.
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{1}
}

func (x *Tenant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ServerACL struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources      []ACLResource `protobuf:"varint,1,rep,packed,name=resources,proto3,enum=littlehorse.ACLResource" json:"resources,omitempty"`
	AllowedActions []ACLAction   `protobuf:"varint,2,rep,packed,name=allowed_actions,json=allowedActions,proto3,enum=littlehorse.ACLAction" json:"allowed_actions,omitempty"`
	// Types that are assignable to ResourceFilter:
	//	*ServerACL_Name
	//	*ServerACL_Prefix
	ResourceFilter isServerACL_ResourceFilter `protobuf_oneof:"resource_filter"`
}

func (x *ServerACL) Reset() {
	*x = ServerACL{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerACL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerACL) ProtoMessage() {}

func (x *ServerACL) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerACL.ProtoReflect.Descriptor instead.
func (*ServerACL) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{2}
}

func (x *ServerACL) GetResources() []ACLResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ServerACL) GetAllowedActions() []ACLAction {
	if x != nil {
		return x.AllowedActions
	}
	return nil
}

func (m *ServerACL) GetResourceFilter() isServerACL_ResourceFilter {
	if m != nil {
		return m.ResourceFilter
	}
	return nil
}

func (x *ServerACL) GetName() string {
	if x, ok := x.GetResourceFilter().(*ServerACL_Name); ok {
		return x.Name
	}
	return ""
}

func (x *ServerACL) GetPrefix() string {
	if x, ok := x.GetResourceFilter().(*ServerACL_Prefix); ok {
		return x.Prefix
	}
	return ""
}

type isServerACL_ResourceFilter interface {
	isServerACL_ResourceFilter()
}

type ServerACL_Name struct {
	Name string `protobuf:"bytes,3,opt,name=name,proto3,oneof"`
}

type ServerACL_Prefix struct {
	Prefix string `protobuf:"bytes,4,opt,name=prefix,proto3,oneof"`
}

func (*ServerACL_Name) isServerACL_ResourceFilter() {}

func (*ServerACL_Prefix) isServerACL_ResourceFilter() {}

type PutPrincipalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Acls            []*ServerACL `protobuf:"bytes,2,rep,name=acls,proto3" json:"acls,omitempty"`
	TenantId        []string     `protobuf:"bytes,3,rep,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	DefaultTenantId string       `protobuf:"bytes,4,opt,name=default_tenant_id,json=defaultTenantId,proto3" json:"default_tenant_id,omitempty"`
}

func (x *PutPrincipalRequest) Reset() {
	*x = PutPrincipalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutPrincipalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutPrincipalRequest) ProtoMessage() {}

func (x *PutPrincipalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutPrincipalRequest.ProtoReflect.Descriptor instead.
func (*PutPrincipalRequest) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{3}
}

func (x *PutPrincipalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutPrincipalRequest) GetAcls() []*ServerACL {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *PutPrincipalRequest) GetTenantId() []string {
	if x != nil {
		return x.TenantId
	}
	return nil
}

func (x *PutPrincipalRequest) GetDefaultTenantId() string {
	if x != nil {
		return x.DefaultTenantId
	}
	return ""
}

type DeletePrincipalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePrincipalRequest) Reset() {
	*x = DeletePrincipalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePrincipalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePrincipalRequest) ProtoMessage() {}

func (x *DeletePrincipalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePrincipalRequest.ProtoReflect.Descriptor instead.
func (*DeletePrincipalRequest) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{4}
}

func (x *DeletePrincipalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PutTenantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PutTenantRequest) Reset() {
	*x = PutTenantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_acls_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutTenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutTenantRequest) ProtoMessage() {}

func (x *PutTenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_acls_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutTenantRequest.ProtoReflect.Descriptor instead.
func (*PutTenantRequest) Descriptor() ([]byte, []int) {
	return file_acls_proto_rawDescGZIP(), []int{5}
}

func (x *PutTenantRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_acls_proto protoreflect.FileDescriptor

var file_acls_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x61, 0x63, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x50, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x43, 0x4c, 0x52, 0x04, 0x61,
	0x63, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x18,
	0x0a, 0x06, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x41, 0x43, 0x4c, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x3f,
	0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x41, 0x43, 0x4c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x14, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x42,
	0x11, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69,
	0x70, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x61, 0x63,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x43, 0x4c,
	0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x50, 0x75, 0x74,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0xa2, 0x01,
	0x0a, 0x0b, 0x41, 0x43, 0x4c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x41, 0x43, 0x4c, 0x5f, 0x57, 0x46, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x41, 0x43, 0x4c, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x4c, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x43, 0x4c, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x44, 0x45,
	0x46, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x4c, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x43,
	0x49, 0x50, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x4c, 0x5f, 0x54, 0x45,
	0x4e, 0x41, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x4c, 0x5f, 0x41, 0x4c,
	0x4c, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x53,
	0x10, 0x06, 0x2a, 0x47, 0x0a, 0x09, 0x41, 0x43, 0x4c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x45,
	0x43, 0x55, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f,
	0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x4c,
	0x4c, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x42, 0x28, 0x0a, 0x1b, 0x69,
	0x6f, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x07, 0x2e, 0x3b,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_acls_proto_rawDescOnce sync.Once
	file_acls_proto_rawDescData = file_acls_proto_rawDesc
)

func file_acls_proto_rawDescGZIP() []byte {
	file_acls_proto_rawDescOnce.Do(func() {
		file_acls_proto_rawDescData = protoimpl.X.CompressGZIP(file_acls_proto_rawDescData)
	})
	return file_acls_proto_rawDescData
}

var file_acls_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_acls_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_acls_proto_goTypes = []interface{}{
	(ACLResource)(0),               // 0: littlehorse.ACLResource
	(ACLAction)(0),                 // 1: littlehorse.ACLAction
	(*Principal)(nil),              // 2: littlehorse.Principal
	(*Tenant)(nil),                 // 3: littlehorse.Tenant
	(*ServerACL)(nil),              // 4: littlehorse.ServerACL
	(*PutPrincipalRequest)(nil),    // 5: littlehorse.PutPrincipalRequest
	(*DeletePrincipalRequest)(nil), // 6: littlehorse.DeletePrincipalRequest
	(*PutTenantRequest)(nil),       // 7: littlehorse.PutTenantRequest
}
var file_acls_proto_depIdxs = []int32{
	4, // 0: littlehorse.Principal.acls:type_name -> littlehorse.ServerACL
	0, // 1: littlehorse.ServerACL.resources:type_name -> littlehorse.ACLResource
	1, // 2: littlehorse.ServerACL.allowed_actions:type_name -> littlehorse.ACLAction
	4, // 3: littlehorse.PutPrincipalRequest.acls:type_name -> littlehorse.ServerACL
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_acls_proto_init() }
func file_acls_proto_init() {
	if File_acls_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_acls_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Principal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acls_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tenant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acls_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerACL); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acls_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutPrincipalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acls_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePrincipalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_acls_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutTenantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_acls_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ServerACL_Name)(nil),
		(*ServerACL_Prefix)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_acls_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acls_proto_goTypes,
		DependencyIndexes: file_acls_proto_depIdxs,
		EnumInfos:         file_acls_proto_enumTypes,
		MessageInfos:      file_acls_proto_msgTypes,
	}.Build()
	File_acls_proto = out.File
	file_acls_proto_rawDesc = nil
	file_acls_proto_goTypes = nil
	file_acls_proto_depIdxs = nil
}
