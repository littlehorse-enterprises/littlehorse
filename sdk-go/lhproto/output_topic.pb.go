// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: output_topic.proto

package lhproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An OutputTopicRecord is a single record in the output topic, which can
// denote one of several different types of events.
type OutputTopicRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The time at which the event occurred.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Payload:
	//	*OutputTopicRecord_TaskRunExecuted
	//	*OutputTopicRecord_WorkflowEvent
	//	*OutputTopicRecord_WfRun
	//	*OutputTopicRecord_UserTaskRun
	//	*OutputTopicRecord_VariableUpdate
	//	*OutputTopicRecord_ExternalEvent
	Payload isOutputTopicRecord_Payload `protobuf_oneof:"payload"`
}

func (x *OutputTopicRecord) Reset() {
	*x = OutputTopicRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputTopicRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputTopicRecord) ProtoMessage() {}

func (x *OutputTopicRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputTopicRecord.ProtoReflect.Descriptor instead.
func (*OutputTopicRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{0}
}

func (x *OutputTopicRecord) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *OutputTopicRecord) GetPayload() isOutputTopicRecord_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *OutputTopicRecord) GetTaskRunExecuted() *TaskRunExecutedRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_TaskRunExecuted); ok {
		return x.TaskRunExecuted
	}
	return nil
}

func (x *OutputTopicRecord) GetWorkflowEvent() *WorkflowEventUpdateRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_WorkflowEvent); ok {
		return x.WorkflowEvent
	}
	return nil
}

func (x *OutputTopicRecord) GetWfRun() *WfRunUpdateRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_WfRun); ok {
		return x.WfRun
	}
	return nil
}

func (x *OutputTopicRecord) GetUserTaskRun() *UserTaskRunUpdateRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_UserTaskRun); ok {
		return x.UserTaskRun
	}
	return nil
}

func (x *OutputTopicRecord) GetVariableUpdate() *VariableUpdateRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_VariableUpdate); ok {
		return x.VariableUpdate
	}
	return nil
}

func (x *OutputTopicRecord) GetExternalEvent() *ExternalEventUpdateRecord {
	if x, ok := x.GetPayload().(*OutputTopicRecord_ExternalEvent); ok {
		return x.ExternalEvent
	}
	return nil
}

type isOutputTopicRecord_Payload interface {
	isOutputTopicRecord_Payload()
}

type OutputTopicRecord_TaskRunExecuted struct {
	// Records the results of a TaskRun in the Output Topic.
	TaskRunExecuted *TaskRunExecutedRecord `protobuf:"bytes,2,opt,name=task_run_executed,json=taskRunExecuted,proto3,oneof"`
}

type OutputTopicRecord_WorkflowEvent struct {
	// Records a WorkflowEvent that was thrown into the Output Topic.
	WorkflowEvent *WorkflowEventUpdateRecord `protobuf:"bytes,3,opt,name=workflow_event,json=workflowEvent,proto3,oneof"`
}

type OutputTopicRecord_WfRun struct {
	// Records an update to a WfRun, triggered by a change to the status of a
	// `ThreadRun`.
	WfRun *WfRunUpdateRecord `protobuf:"bytes,4,opt,name=wf_run,json=wfRun,proto3,oneof"`
}

type OutputTopicRecord_UserTaskRun struct {
	// Updates about a user task run.
	UserTaskRun *UserTaskRunUpdateRecord `protobuf:"bytes,5,opt,name=user_task_run,json=userTaskRun,proto3,oneof"`
}

type OutputTopicRecord_VariableUpdate struct {
	// Updates about a specific Variable changing.
	VariableUpdate *VariableUpdateRecord `protobuf:"bytes,6,opt,name=variable_update,json=variableUpdate,proto3,oneof"`
}

type OutputTopicRecord_ExternalEvent struct {
	// Updates about an `ExternalEvent` changing.
	ExternalEvent *ExternalEventUpdateRecord `protobuf:"bytes,7,opt,name=external_event,json=externalEvent,proto3,oneof"`
}

func (*OutputTopicRecord_TaskRunExecuted) isOutputTopicRecord_Payload() {}

func (*OutputTopicRecord_WorkflowEvent) isOutputTopicRecord_Payload() {}

func (*OutputTopicRecord_WfRun) isOutputTopicRecord_Payload() {}

func (*OutputTopicRecord_UserTaskRun) isOutputTopicRecord_Payload() {}

func (*OutputTopicRecord_VariableUpdate) isOutputTopicRecord_Payload() {}

func (*OutputTopicRecord_ExternalEvent) isOutputTopicRecord_Payload() {}

// Record to state that a TaskRun was executed (`TASK_SUCCESS`,
// `TASK_ERROR`, or `TASK_EXCEPTION`).
type TaskRunExecutedRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The TaskRun that was executed. All information about TaskAttempts,
	// input variables, start times, failures, etc is included in the
	// TaskRun itself.
	//
	// Not sent until the `TaskRun` is in a terminal state.
	TaskRun *TaskRun `protobuf:"bytes,1,opt,name=task_run,json=taskRun,proto3" json:"task_run,omitempty"`
}

func (x *TaskRunExecutedRecord) Reset() {
	*x = TaskRunExecutedRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRunExecutedRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRunExecutedRecord) ProtoMessage() {}

func (x *TaskRunExecutedRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRunExecutedRecord.ProtoReflect.Descriptor instead.
func (*TaskRunExecutedRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{1}
}

func (x *TaskRunExecutedRecord) GetTaskRun() *TaskRun {
	if x != nil {
		return x.TaskRun
	}
	return nil
}

// Record in the Output Topic to denote that a WorkflowEvent was thrown
// by a WfRun.
type WorkflowEventUpdateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The WorkflowEvent that was thrown.
	WorkflowEvent *WorkflowEvent `protobuf:"bytes,1,opt,name=workflow_event,json=workflowEvent,proto3" json:"workflow_event,omitempty"`
	// The WfSpecId for the WfRun that threw the WorkflowEvent.
	WfSpecId *WfSpecId `protobuf:"bytes,2,opt,name=wf_spec_id,json=wfSpecId,proto3" json:"wf_spec_id,omitempty"`
}

func (x *WorkflowEventUpdateRecord) Reset() {
	*x = WorkflowEventUpdateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowEventUpdateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowEventUpdateRecord) ProtoMessage() {}

func (x *WorkflowEventUpdateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowEventUpdateRecord.ProtoReflect.Descriptor instead.
func (*WorkflowEventUpdateRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{2}
}

func (x *WorkflowEventUpdateRecord) GetWorkflowEvent() *WorkflowEvent {
	if x != nil {
		return x.WorkflowEvent
	}
	return nil
}

func (x *WorkflowEventUpdateRecord) GetWfSpecId() *WfSpecId {
	if x != nil {
		return x.WfSpecId
	}
	return nil
}

// Represents a snapshot of a WfRun as an entity. Used in the Output Topic
// to allow exporting a WfRun's public variables into external systems. This
// only includes Variables that are of type `PUBLIC_VAR` and in the entrypoint
// ThreadRun.
type WfRunUpdateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current snapshot of the `WfRun` Getable.
	WfRun *WfRun `protobuf:"bytes,1,opt,name=wf_run,json=wfRun,proto3" json:"wf_run,omitempty"`
}

func (x *WfRunUpdateRecord) Reset() {
	*x = WfRunUpdateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WfRunUpdateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WfRunUpdateRecord) ProtoMessage() {}

func (x *WfRunUpdateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WfRunUpdateRecord.ProtoReflect.Descriptor instead.
func (*WfRunUpdateRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{3}
}

func (x *WfRunUpdateRecord) GetWfRun() *WfRun {
	if x != nil {
		return x.WfRun
	}
	return nil
}

type ExternalEventUpdateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current snapshot of the `WfRun` Getable.
	ExternalEvent *ExternalEvent `protobuf:"bytes,1,opt,name=external_event,json=externalEvent,proto3" json:"external_event,omitempty"`
}

func (x *ExternalEventUpdateRecord) Reset() {
	*x = ExternalEventUpdateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalEventUpdateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalEventUpdateRecord) ProtoMessage() {}

func (x *ExternalEventUpdateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalEventUpdateRecord.ProtoReflect.Descriptor instead.
func (*ExternalEventUpdateRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{4}
}

func (x *ExternalEventUpdateRecord) GetExternalEvent() *ExternalEvent {
	if x != nil {
		return x.ExternalEvent
	}
	return nil
}

// Represents a snapshot of a UserTaskRun being updated. Used in the Output Topic
// to allow exporting information about User Tasks into external systems.
type UserTaskRunUpdateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current snapshot of the UserTaskRun.
	UserTaskRun *UserTaskRun `protobuf:"bytes,1,opt,name=user_task_run,json=userTaskRun,proto3" json:"user_task_run,omitempty"`
}

func (x *UserTaskRunUpdateRecord) Reset() {
	*x = UserTaskRunUpdateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskRunUpdateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskRunUpdateRecord) ProtoMessage() {}

func (x *UserTaskRunUpdateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskRunUpdateRecord.ProtoReflect.Descriptor instead.
func (*UserTaskRunUpdateRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{5}
}

func (x *UserTaskRunUpdateRecord) GetUserTaskRun() *UserTaskRun {
	if x != nil {
		return x.UserTaskRun
	}
	return nil
}

// Represents a snapshot of an individual Variable being updated. Used in the Output
// Topic to allow exporting information for specific Variables to external systems.
type VariableUpdateRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cuurrent snapshot of the Variable in question.
	Variable *Variable `protobuf:"bytes,1,opt,name=variable,proto3" json:"variable,omitempty"`
}

func (x *VariableUpdateRecord) Reset() {
	*x = VariableUpdateRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableUpdateRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableUpdateRecord) ProtoMessage() {}

func (x *VariableUpdateRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableUpdateRecord.ProtoReflect.Descriptor instead.
func (*VariableUpdateRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{6}
}

func (x *VariableUpdateRecord) GetVariable() *Variable {
	if x != nil {
		return x.Variable
	}
	return nil
}

// Message to configure data sent to the Metadata Output Topic
type MetadataOutputTopicRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data that was sent
	//
	// Types that are assignable to MetadataRecord:
	//	*MetadataOutputTopicRecord_WfSpec
	//	*MetadataOutputTopicRecord_TaskDef
	//	*MetadataOutputTopicRecord_ExternalEventDef
	//	*MetadataOutputTopicRecord_WorkflowEventDef
	//	*MetadataOutputTopicRecord_UserTaskDef
	MetadataRecord isMetadataOutputTopicRecord_MetadataRecord `protobuf_oneof:"metadata_record"`
}

func (x *MetadataOutputTopicRecord) Reset() {
	*x = MetadataOutputTopicRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_output_topic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataOutputTopicRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataOutputTopicRecord) ProtoMessage() {}

func (x *MetadataOutputTopicRecord) ProtoReflect() protoreflect.Message {
	mi := &file_output_topic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataOutputTopicRecord.ProtoReflect.Descriptor instead.
func (*MetadataOutputTopicRecord) Descriptor() ([]byte, []int) {
	return file_output_topic_proto_rawDescGZIP(), []int{7}
}

func (m *MetadataOutputTopicRecord) GetMetadataRecord() isMetadataOutputTopicRecord_MetadataRecord {
	if m != nil {
		return m.MetadataRecord
	}
	return nil
}

func (x *MetadataOutputTopicRecord) GetWfSpec() *WfSpec {
	if x, ok := x.GetMetadataRecord().(*MetadataOutputTopicRecord_WfSpec); ok {
		return x.WfSpec
	}
	return nil
}

func (x *MetadataOutputTopicRecord) GetTaskDef() *TaskDef {
	if x, ok := x.GetMetadataRecord().(*MetadataOutputTopicRecord_TaskDef); ok {
		return x.TaskDef
	}
	return nil
}

func (x *MetadataOutputTopicRecord) GetExternalEventDef() *ExternalEventDef {
	if x, ok := x.GetMetadataRecord().(*MetadataOutputTopicRecord_ExternalEventDef); ok {
		return x.ExternalEventDef
	}
	return nil
}

func (x *MetadataOutputTopicRecord) GetWorkflowEventDef() *WorkflowEventDef {
	if x, ok := x.GetMetadataRecord().(*MetadataOutputTopicRecord_WorkflowEventDef); ok {
		return x.WorkflowEventDef
	}
	return nil
}

func (x *MetadataOutputTopicRecord) GetUserTaskDef() *UserTaskDef {
	if x, ok := x.GetMetadataRecord().(*MetadataOutputTopicRecord_UserTaskDef); ok {
		return x.UserTaskDef
	}
	return nil
}

type isMetadataOutputTopicRecord_MetadataRecord interface {
	isMetadataOutputTopicRecord_MetadataRecord()
}

type MetadataOutputTopicRecord_WfSpec struct {
	// A WfSpec update
	WfSpec *WfSpec `protobuf:"bytes,1,opt,name=wf_spec,json=wfSpec,proto3,oneof"`
}

type MetadataOutputTopicRecord_TaskDef struct {
	// A TaskDef update
	TaskDef *TaskDef `protobuf:"bytes,2,opt,name=task_def,json=taskDef,proto3,oneof"`
}

type MetadataOutputTopicRecord_ExternalEventDef struct {
	// An ExternalEventDef Update
	ExternalEventDef *ExternalEventDef `protobuf:"bytes,3,opt,name=external_event_def,json=externalEventDef,proto3,oneof"`
}

type MetadataOutputTopicRecord_WorkflowEventDef struct {
	// A WorkflowEventDef update
	WorkflowEventDef *WorkflowEventDef `protobuf:"bytes,4,opt,name=workflow_event_def,json=workflowEventDef,proto3,oneof"`
}

type MetadataOutputTopicRecord_UserTaskDef struct {
	// A UserTaskDef update
	UserTaskDef *UserTaskDef `protobuf:"bytes,5,opt,name=user_task_def,json=userTaskDef,proto3,oneof"`
}

func (*MetadataOutputTopicRecord_WfSpec) isMetadataOutputTopicRecord_MetadataRecord() {}

func (*MetadataOutputTopicRecord_TaskDef) isMetadataOutputTopicRecord_MetadataRecord() {}

func (*MetadataOutputTopicRecord_ExternalEventDef) isMetadataOutputTopicRecord_MetadataRecord() {}

func (*MetadataOutputTopicRecord_WorkflowEventDef) isMetadataOutputTopicRecord_MetadataRecord() {}

func (*MetadataOutputTopicRecord_UserTaskDef) isMetadataOutputTopicRecord_MetadataRecord() {}

var File_output_topic_proto protoreflect.FileDescriptor

var file_output_topic_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x77, 0x66, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x77, 0x66, 0x5f, 0x72,
	0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f,
	0x04, 0x0a, 0x11, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x50,
	0x0a, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x69, 0x74, 0x74,
	0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0f, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64,
	0x12, 0x4f, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c,
	0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x37, 0x0a, 0x06, 0x77, 0x66, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e,
	0x57, 0x66, 0x52, 0x75, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x05, 0x77, 0x66, 0x52, 0x75, 0x6e, 0x12, 0x4a, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x4c, 0x0a, 0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c,
	0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x48, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69,
	0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75,
	0x6e, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x77,
	0x66, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x57, 0x66,
	0x53, 0x70, 0x65, 0x63, 0x49, 0x64, 0x52, 0x08, 0x77, 0x66, 0x53, 0x70, 0x65, 0x63, 0x49, 0x64,
	0x22, 0x3e, 0x0a, 0x11, 0x57, 0x66, 0x52, 0x75, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x77, 0x66, 0x5f, 0x72, 0x75, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x57, 0x66, 0x52, 0x75, 0x6e, 0x52, 0x05, 0x77, 0x66, 0x52, 0x75, 0x6e,
	0x22, 0x5e, 0x0a, 0x19, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f,
	0x72, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x57, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x75, 0x6e, 0x22, 0x49, 0x0a, 0x14, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x31, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x19, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x12, 0x2e, 0x0a, 0x07, 0x77, 0x66, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73,
	0x65, 0x2e, 0x57, 0x66, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x06, 0x77, 0x66, 0x53, 0x70,
	0x65, 0x63, 0x12, 0x31, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72,
	0x73, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x44, 0x65, 0x66, 0x12, 0x4d, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66,
	0x48, 0x00, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x12, 0x4d, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x48,
	0x00, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x66, 0x12, 0x3e, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x64, 0x65, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73,
	0x6b, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x65, 0x66, 0x42, 0x11, 0x0a, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x4d, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x6c, 0x69, 0x74,
	0x74, 0x6c, 0x65, 0x68, 0x6f, 0x72, 0x73, 0x65, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x09, 0x2e, 0x3b, 0x6c,
	0x68, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa, 0x02, 0x1c, 0x4c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x48,
	0x6f, 0x72, 0x73, 0x65, 0x2e, 0x53, 0x64, 0x6b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_output_topic_proto_rawDescOnce sync.Once
	file_output_topic_proto_rawDescData = file_output_topic_proto_rawDesc
)

func file_output_topic_proto_rawDescGZIP() []byte {
	file_output_topic_proto_rawDescOnce.Do(func() {
		file_output_topic_proto_rawDescData = protoimpl.X.CompressGZIP(file_output_topic_proto_rawDescData)
	})
	return file_output_topic_proto_rawDescData
}

var file_output_topic_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_output_topic_proto_goTypes = []interface{}{
	(*OutputTopicRecord)(nil),         // 0: littlehorse.OutputTopicRecord
	(*TaskRunExecutedRecord)(nil),     // 1: littlehorse.TaskRunExecutedRecord
	(*WorkflowEventUpdateRecord)(nil), // 2: littlehorse.WorkflowEventUpdateRecord
	(*WfRunUpdateRecord)(nil),         // 3: littlehorse.WfRunUpdateRecord
	(*ExternalEventUpdateRecord)(nil), // 4: littlehorse.ExternalEventUpdateRecord
	(*UserTaskRunUpdateRecord)(nil),   // 5: littlehorse.UserTaskRunUpdateRecord
	(*VariableUpdateRecord)(nil),      // 6: littlehorse.VariableUpdateRecord
	(*MetadataOutputTopicRecord)(nil), // 7: littlehorse.MetadataOutputTopicRecord
	(*timestamppb.Timestamp)(nil),     // 8: google.protobuf.Timestamp
	(*TaskRun)(nil),                   // 9: littlehorse.TaskRun
	(*WorkflowEvent)(nil),             // 10: littlehorse.WorkflowEvent
	(*WfSpecId)(nil),                  // 11: littlehorse.WfSpecId
	(*WfRun)(nil),                     // 12: littlehorse.WfRun
	(*ExternalEvent)(nil),             // 13: littlehorse.ExternalEvent
	(*UserTaskRun)(nil),               // 14: littlehorse.UserTaskRun
	(*Variable)(nil),                  // 15: littlehorse.Variable
	(*WfSpec)(nil),                    // 16: littlehorse.WfSpec
	(*TaskDef)(nil),                   // 17: littlehorse.TaskDef
	(*ExternalEventDef)(nil),          // 18: littlehorse.ExternalEventDef
	(*WorkflowEventDef)(nil),          // 19: littlehorse.WorkflowEventDef
	(*UserTaskDef)(nil),               // 20: littlehorse.UserTaskDef
}
var file_output_topic_proto_depIdxs = []int32{
	8,  // 0: littlehorse.OutputTopicRecord.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 1: littlehorse.OutputTopicRecord.task_run_executed:type_name -> littlehorse.TaskRunExecutedRecord
	2,  // 2: littlehorse.OutputTopicRecord.workflow_event:type_name -> littlehorse.WorkflowEventUpdateRecord
	3,  // 3: littlehorse.OutputTopicRecord.wf_run:type_name -> littlehorse.WfRunUpdateRecord
	5,  // 4: littlehorse.OutputTopicRecord.user_task_run:type_name -> littlehorse.UserTaskRunUpdateRecord
	6,  // 5: littlehorse.OutputTopicRecord.variable_update:type_name -> littlehorse.VariableUpdateRecord
	4,  // 6: littlehorse.OutputTopicRecord.external_event:type_name -> littlehorse.ExternalEventUpdateRecord
	9,  // 7: littlehorse.TaskRunExecutedRecord.task_run:type_name -> littlehorse.TaskRun
	10, // 8: littlehorse.WorkflowEventUpdateRecord.workflow_event:type_name -> littlehorse.WorkflowEvent
	11, // 9: littlehorse.WorkflowEventUpdateRecord.wf_spec_id:type_name -> littlehorse.WfSpecId
	12, // 10: littlehorse.WfRunUpdateRecord.wf_run:type_name -> littlehorse.WfRun
	13, // 11: littlehorse.ExternalEventUpdateRecord.external_event:type_name -> littlehorse.ExternalEvent
	14, // 12: littlehorse.UserTaskRunUpdateRecord.user_task_run:type_name -> littlehorse.UserTaskRun
	15, // 13: littlehorse.VariableUpdateRecord.variable:type_name -> littlehorse.Variable
	16, // 14: littlehorse.MetadataOutputTopicRecord.wf_spec:type_name -> littlehorse.WfSpec
	17, // 15: littlehorse.MetadataOutputTopicRecord.task_def:type_name -> littlehorse.TaskDef
	18, // 16: littlehorse.MetadataOutputTopicRecord.external_event_def:type_name -> littlehorse.ExternalEventDef
	19, // 17: littlehorse.MetadataOutputTopicRecord.workflow_event_def:type_name -> littlehorse.WorkflowEventDef
	20, // 18: littlehorse.MetadataOutputTopicRecord.user_task_def:type_name -> littlehorse.UserTaskDef
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_output_topic_proto_init() }
func file_output_topic_proto_init() {
	if File_output_topic_proto != nil {
		return
	}
	file_object_id_proto_init()
	file_workflow_event_proto_init()
	file_user_tasks_proto_init()
	file_task_run_proto_init()
	file_task_def_proto_init()
	file_wf_spec_proto_init()
	file_wf_run_proto_init()
	file_variable_proto_init()
	file_external_event_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_output_topic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputTopicRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRunExecutedRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowEventUpdateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WfRunUpdateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalEventUpdateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskRunUpdateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableUpdateRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_output_topic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataOutputTopicRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_output_topic_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*OutputTopicRecord_TaskRunExecuted)(nil),
		(*OutputTopicRecord_WorkflowEvent)(nil),
		(*OutputTopicRecord_WfRun)(nil),
		(*OutputTopicRecord_UserTaskRun)(nil),
		(*OutputTopicRecord_VariableUpdate)(nil),
		(*OutputTopicRecord_ExternalEvent)(nil),
	}
	file_output_topic_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*MetadataOutputTopicRecord_WfSpec)(nil),
		(*MetadataOutputTopicRecord_TaskDef)(nil),
		(*MetadataOutputTopicRecord_ExternalEventDef)(nil),
		(*MetadataOutputTopicRecord_WorkflowEventDef)(nil),
		(*MetadataOutputTopicRecord_UserTaskDef)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_output_topic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_output_topic_proto_goTypes,
		DependencyIndexes: file_output_topic_proto_depIdxs,
		MessageInfos:      file_output_topic_proto_msgTypes,
	}.Build()
	File_output_topic_proto = out.File
	file_output_topic_proto_rawDesc = nil
	file_output_topic_proto_goTypes = nil
	file_output_topic_proto_depIdxs = nil
}
