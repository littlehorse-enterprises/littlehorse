# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import littlehorse.model.acls_pb2 as acls__pb2
import littlehorse.model.external_event_pb2 as external__event__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import littlehorse.model.node_run_pb2 as node__run__pb2
import littlehorse.model.object_id_pb2 as object__id__pb2
import littlehorse.model.service_pb2 as service__pb2
import littlehorse.model.task_def_pb2 as task__def__pb2
import littlehorse.model.task_run_pb2 as task__run__pb2
import littlehorse.model.user_tasks_pb2 as user__tasks__pb2
import littlehorse.model.variable_pb2 as variable__pb2
import littlehorse.model.wf_run_pb2 as wf__run__pb2
import littlehorse.model.wf_spec_pb2 as wf__spec__pb2


class LittleHorseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/PutTaskDef',
                request_serializer=service__pb2.PutTaskDefRequest.SerializeToString,
                response_deserializer=task__def__pb2.TaskDef.FromString,
                )
        self.GetTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/GetTaskDef',
                request_serializer=object__id__pb2.TaskDefId.SerializeToString,
                response_deserializer=task__def__pb2.TaskDef.FromString,
                )
        self.PutExternalEventDef = channel.unary_unary(
                '/littlehorse.LittleHorse/PutExternalEventDef',
                request_serializer=service__pb2.PutExternalEventDefRequest.SerializeToString,
                response_deserializer=external__event__pb2.ExternalEventDef.FromString,
                )
        self.GetExternalEventDef = channel.unary_unary(
                '/littlehorse.LittleHorse/GetExternalEventDef',
                request_serializer=object__id__pb2.ExternalEventDefId.SerializeToString,
                response_deserializer=external__event__pb2.ExternalEventDef.FromString,
                )
        self.PutWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/PutWfSpec',
                request_serializer=service__pb2.PutWfSpecRequest.SerializeToString,
                response_deserializer=wf__spec__pb2.WfSpec.FromString,
                )
        self.GetWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/GetWfSpec',
                request_serializer=object__id__pb2.WfSpecId.SerializeToString,
                response_deserializer=wf__spec__pb2.WfSpec.FromString,
                )
        self.GetLatestWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/GetLatestWfSpec',
                request_serializer=service__pb2.GetLatestWfSpecRequest.SerializeToString,
                response_deserializer=wf__spec__pb2.WfSpec.FromString,
                )
        self.MigrateWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/MigrateWfSpec',
                request_serializer=service__pb2.MigrateWfSpecRequest.SerializeToString,
                response_deserializer=wf__spec__pb2.WfSpec.FromString,
                )
        self.PutUserTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/PutUserTaskDef',
                request_serializer=service__pb2.PutUserTaskDefRequest.SerializeToString,
                response_deserializer=user__tasks__pb2.UserTaskDef.FromString,
                )
        self.GetUserTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/GetUserTaskDef',
                request_serializer=object__id__pb2.UserTaskDefId.SerializeToString,
                response_deserializer=user__tasks__pb2.UserTaskDef.FromString,
                )
        self.GetLatestUserTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/GetLatestUserTaskDef',
                request_serializer=service__pb2.GetLatestUserTaskDefRequest.SerializeToString,
                response_deserializer=user__tasks__pb2.UserTaskDef.FromString,
                )
        self.RunWf = channel.unary_unary(
                '/littlehorse.LittleHorse/RunWf',
                request_serializer=service__pb2.RunWfRequest.SerializeToString,
                response_deserializer=wf__run__pb2.WfRun.FromString,
                )
        self.GetWfRun = channel.unary_unary(
                '/littlehorse.LittleHorse/GetWfRun',
                request_serializer=object__id__pb2.WfRunId.SerializeToString,
                response_deserializer=wf__run__pb2.WfRun.FromString,
                )
        self.GetUserTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/GetUserTaskRun',
                request_serializer=object__id__pb2.UserTaskRunId.SerializeToString,
                response_deserializer=user__tasks__pb2.UserTaskRun.FromString,
                )
        self.AssignUserTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/AssignUserTaskRun',
                request_serializer=user__tasks__pb2.AssignUserTaskRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CompleteUserTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/CompleteUserTaskRun',
                request_serializer=user__tasks__pb2.CompleteUserTaskRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CancelUserTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/CancelUserTaskRun',
                request_serializer=user__tasks__pb2.CancelUserTaskRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListUserTaskRuns = channel.unary_unary(
                '/littlehorse.LittleHorse/ListUserTaskRuns',
                request_serializer=service__pb2.ListUserTaskRunRequest.SerializeToString,
                response_deserializer=service__pb2.UserTaskRunList.FromString,
                )
        self.GetNodeRun = channel.unary_unary(
                '/littlehorse.LittleHorse/GetNodeRun',
                request_serializer=object__id__pb2.NodeRunId.SerializeToString,
                response_deserializer=node__run__pb2.NodeRun.FromString,
                )
        self.ListNodeRuns = channel.unary_unary(
                '/littlehorse.LittleHorse/ListNodeRuns',
                request_serializer=service__pb2.ListNodeRunsRequest.SerializeToString,
                response_deserializer=service__pb2.NodeRunList.FromString,
                )
        self.GetTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/GetTaskRun',
                request_serializer=object__id__pb2.TaskRunId.SerializeToString,
                response_deserializer=task__run__pb2.TaskRun.FromString,
                )
        self.ListTaskRuns = channel.unary_unary(
                '/littlehorse.LittleHorse/ListTaskRuns',
                request_serializer=service__pb2.ListTaskRunsRequest.SerializeToString,
                response_deserializer=service__pb2.TaskRunList.FromString,
                )
        self.GetVariable = channel.unary_unary(
                '/littlehorse.LittleHorse/GetVariable',
                request_serializer=object__id__pb2.VariableId.SerializeToString,
                response_deserializer=variable__pb2.Variable.FromString,
                )
        self.ListVariables = channel.unary_unary(
                '/littlehorse.LittleHorse/ListVariables',
                request_serializer=service__pb2.ListVariablesRequest.SerializeToString,
                response_deserializer=service__pb2.VariableList.FromString,
                )
        self.PutExternalEvent = channel.unary_unary(
                '/littlehorse.LittleHorse/PutExternalEvent',
                request_serializer=service__pb2.PutExternalEventRequest.SerializeToString,
                response_deserializer=external__event__pb2.ExternalEvent.FromString,
                )
        self.GetExternalEvent = channel.unary_unary(
                '/littlehorse.LittleHorse/GetExternalEvent',
                request_serializer=object__id__pb2.ExternalEventId.SerializeToString,
                response_deserializer=external__event__pb2.ExternalEvent.FromString,
                )
        self.ListExternalEvents = channel.unary_unary(
                '/littlehorse.LittleHorse/ListExternalEvents',
                request_serializer=service__pb2.ListExternalEventsRequest.SerializeToString,
                response_deserializer=service__pb2.ExternalEventList.FromString,
                )
        self.SearchWfRun = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchWfRun',
                request_serializer=service__pb2.SearchWfRunRequest.SerializeToString,
                response_deserializer=service__pb2.WfRunIdList.FromString,
                )
        self.SearchNodeRun = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchNodeRun',
                request_serializer=service__pb2.SearchNodeRunRequest.SerializeToString,
                response_deserializer=service__pb2.NodeRunIdList.FromString,
                )
        self.SearchTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchTaskRun',
                request_serializer=service__pb2.SearchTaskRunRequest.SerializeToString,
                response_deserializer=service__pb2.TaskRunIdList.FromString,
                )
        self.SearchUserTaskRun = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchUserTaskRun',
                request_serializer=service__pb2.SearchUserTaskRunRequest.SerializeToString,
                response_deserializer=service__pb2.UserTaskRunIdList.FromString,
                )
        self.SearchVariable = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchVariable',
                request_serializer=service__pb2.SearchVariableRequest.SerializeToString,
                response_deserializer=service__pb2.VariableIdList.FromString,
                )
        self.SearchExternalEvent = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchExternalEvent',
                request_serializer=service__pb2.SearchExternalEventRequest.SerializeToString,
                response_deserializer=service__pb2.ExternalEventIdList.FromString,
                )
        self.SearchTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchTaskDef',
                request_serializer=service__pb2.SearchTaskDefRequest.SerializeToString,
                response_deserializer=service__pb2.TaskDefIdList.FromString,
                )
        self.SearchUserTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchUserTaskDef',
                request_serializer=service__pb2.SearchUserTaskDefRequest.SerializeToString,
                response_deserializer=service__pb2.UserTaskDefIdList.FromString,
                )
        self.SearchWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchWfSpec',
                request_serializer=service__pb2.SearchWfSpecRequest.SerializeToString,
                response_deserializer=service__pb2.WfSpecIdList.FromString,
                )
        self.SearchExternalEventDef = channel.unary_unary(
                '/littlehorse.LittleHorse/SearchExternalEventDef',
                request_serializer=service__pb2.SearchExternalEventDefRequest.SerializeToString,
                response_deserializer=service__pb2.ExternalEventDefIdList.FromString,
                )
        self.RegisterTaskWorker = channel.unary_unary(
                '/littlehorse.LittleHorse/RegisterTaskWorker',
                request_serializer=service__pb2.RegisterTaskWorkerRequest.SerializeToString,
                response_deserializer=service__pb2.RegisterTaskWorkerResponse.FromString,
                )
        self.PollTask = channel.stream_stream(
                '/littlehorse.LittleHorse/PollTask',
                request_serializer=service__pb2.PollTaskRequest.SerializeToString,
                response_deserializer=service__pb2.PollTaskResponse.FromString,
                )
        self.ReportTask = channel.unary_unary(
                '/littlehorse.LittleHorse/ReportTask',
                request_serializer=service__pb2.ReportTaskRun.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopWfRun = channel.unary_unary(
                '/littlehorse.LittleHorse/StopWfRun',
                request_serializer=service__pb2.StopWfRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ResumeWfRun = channel.unary_unary(
                '/littlehorse.LittleHorse/ResumeWfRun',
                request_serializer=service__pb2.ResumeWfRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteWfRun = channel.unary_unary(
                '/littlehorse.LittleHorse/DeleteWfRun',
                request_serializer=service__pb2.DeleteWfRunRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/DeleteTaskDef',
                request_serializer=service__pb2.DeleteTaskDefRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteWfSpec = channel.unary_unary(
                '/littlehorse.LittleHorse/DeleteWfSpec',
                request_serializer=service__pb2.DeleteWfSpecRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteUserTaskDef = channel.unary_unary(
                '/littlehorse.LittleHorse/DeleteUserTaskDef',
                request_serializer=service__pb2.DeleteUserTaskDefRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteExternalEventDef = channel.unary_unary(
                '/littlehorse.LittleHorse/DeleteExternalEventDef',
                request_serializer=service__pb2.DeleteExternalEventDefRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetTaskDefMetricsWindow = channel.unary_unary(
                '/littlehorse.LittleHorse/GetTaskDefMetricsWindow',
                request_serializer=service__pb2.TaskDefMetricsQueryRequest.SerializeToString,
                response_deserializer=service__pb2.TaskDefMetrics.FromString,
                )
        self.GetWfSpecMetricsWindow = channel.unary_unary(
                '/littlehorse.LittleHorse/GetWfSpecMetricsWindow',
                request_serializer=service__pb2.WfSpecMetricsQueryRequest.SerializeToString,
                response_deserializer=service__pb2.WfSpecMetrics.FromString,
                )
        self.ListTaskDefMetrics = channel.unary_unary(
                '/littlehorse.LittleHorse/ListTaskDefMetrics',
                request_serializer=service__pb2.ListTaskMetricsRequest.SerializeToString,
                response_deserializer=service__pb2.ListTaskMetricsResponse.FromString,
                )
        self.ListWfSpecMetrics = channel.unary_unary(
                '/littlehorse.LittleHorse/ListWfSpecMetrics',
                request_serializer=service__pb2.ListWfMetricsRequest.SerializeToString,
                response_deserializer=service__pb2.ListWfMetricsResponse.FromString,
                )
        self.PutTenant = channel.unary_unary(
                '/littlehorse.LittleHorse/PutTenant',
                request_serializer=acls__pb2.PutTenantRequest.SerializeToString,
                response_deserializer=acls__pb2.Tenant.FromString,
                )
        self.PutPrincipal = channel.unary_unary(
                '/littlehorse.LittleHorse/PutPrincipal',
                request_serializer=acls__pb2.PutPrincipalRequest.SerializeToString,
                response_deserializer=acls__pb2.Principal.FromString,
                )
        self.Whoami = channel.unary_unary(
                '/littlehorse.LittleHorse/Whoami',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=acls__pb2.Principal.FromString,
                )
        self.GetServerVersion = channel.unary_unary(
                '/littlehorse.LittleHorse/GetServerVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.ServerVersionResponse.FromString,
                )


class LittleHorseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PutTaskDef(self, request, context):
        """Creates a TaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskDef(self, request, context):
        """Gets a TaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutExternalEventDef(self, request, context):
        """Creates an ExternalEventDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExternalEventDef(self, request, context):
        """Gets an ExternalEventDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutWfSpec(self, request, context):
        """Creates a WfSpec.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWfSpec(self, request, context):
        """Gets a WfSpec.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestWfSpec(self, request, context):
        """Returns the latest WfSpec with a specified name (and optionally a specified Major Version).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MigrateWfSpec(self, request, context):
        """EXPERIMENTAL: Migrates all WfRun's from one version of a WfSpec onto a newer version of the
        same WfSpec. This is useful for long-running WfRun's (eg. a 60-day marketing campaign) where
        you must update WfRun's that are in the RUNNING state rather than allowing them to run to
        completion.

        As of 0.7.0, this feature is only partially implemented.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutUserTaskDef(self, request, context):
        """Creates a UserTaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserTaskDef(self, request, context):
        """Gets a specific UserTaskDef.

        This RPC is highly useful for applications built around
        User Tasks. For example, a UI that dynamically displays form fields based on the User Task
        might first receive a UserTaskRun, then use that UserTaskRun to look up the UserTaskDef.
        The frontend would inspect the UserTaskDef and display a form field on the browser page
        for each field in the UserTaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestUserTaskDef(self, request, context):
        """Returns the most recent UserTaskDef with a specific name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunWf(self, request, context):
        """Runs a WfSpec to create a WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWfRun(self, request, context):
        """Gets a WfRun. Although useful for development and debugging, this RPC is not often
        used by applications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserTaskRun(self, request, context):
        """Loads a specific UserTaskRun. It includes information about to whom the UserTask is
        currently assigned, history of assignments and reassignments, and any context for that
        UserTaskRun which is specific to the WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignUserTaskRun(self, request, context):
        """Change the ownership of a UserTaskRun to a new userId, userGroup, or both. The
        action will be reflected in your next call to SearchUserTaskRun. This RPC is useful for
        applications that are using User Tasks to build an internal task-list and wish to
        administer the tasks.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteUserTaskRun(self, request, context):
        """Completes a UserTaskRun. Includes the results of the UserTaskRun, the UserTaskRun Id, and
        the userId of the user who completes the UserTaskRun. Results in the UserTask NodeRun being
        completed, and unblocks the associated ThreadRun in the WfRun.

        This RPC is highly useful for applications built around a WfSpec that uses USER_TASK nodes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelUserTaskRun(self, request, context):
        """Cancels a UserTaskRun. This will result in an EXCEPTION being propagated to the WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserTaskRuns(self, request, context):
        """Lists all UserTaskRun's for a specific WfRun. Can be useful when using a WfRun
        to model an entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeRun(self, request, context):
        """Gets a specific NodeRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNodeRuns(self, request, context):
        """Lists all NodeRun's for a specific WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskRun(self, request, context):
        """Gets a specific TaskRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTaskRuns(self, request, context):
        """Lists all TaskRun's for a specific WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVariable(self, request, context):
        """Get the value of a specific Variable. When using a WfRun to model an entity, this
        RPC is useful for retrieving information. It is equivalent to looking up the value of a
        column for a specific row in a SQL table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVariables(self, request, context):
        """List all Variables from a WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutExternalEvent(self, request, context):
        """Post an ExternalEvent. This RPC is highly useful for
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExternalEvent(self, request, context):
        """Get a specific ExternalEvent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListExternalEvents(self, request, context):
        """List ExternalEvent's for a specific WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchWfRun(self, request, context):
        """Search for WfRun's. This RPC is highly useful for applications that store data
        in LittleHorse and need to find a specific WfRun based on certain indexed fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchNodeRun(self, request, context):
        """Search for NodeRun's. This RPC is useful for monitoring and finding bugs in
        your workflows or Task Workers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTaskRun(self, request, context):
        """Search for TaskRun's. This RPC is useful for finding bugs in your Task Workers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUserTaskRun(self, request, context):
        """Search for UserTaskRun's. This RPC is highly useful for applications that connect
        human end-users to LittleHorse: it enables you to find all tasks assigned to a specific
        person or group of people.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchVariable(self, request, context):
        """Search for Variable's. This RPC is highly useful for applications that store data
        in LittleHorse and need to find a specific WfRun based on certain indexed fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchExternalEvent(self, request, context):
        """Search for ExternalEvent's.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTaskDef(self, request, context):
        """Search for TaskDef's.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchUserTaskDef(self, request, context):
        """Search for UserTaskDef's.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchWfSpec(self, request, context):
        """Search for WfSpec's.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchExternalEventDef(self, request, context):
        """Search for ExteranlEventDef's.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterTaskWorker(self, request, context):
        """Used by the Task Worker to:
        1. Tell the LH Server that the Task Worker has joined the Task Worker Group.
        2. Receive the assignemnt of LH Server's to poll from.
        Generally, you won't use this request manually.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PollTask(self, request_iterator, context):
        """Used by Task Workers to listen for TaskRuns on the Task Queue. Generally, you won't
        use this RPC manually.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportTask(self, request, context):
        """Used by Task Workers to report the result of a TaskRun. Generally, you won't use
        this rpc manually.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopWfRun(self, request, context):
        """Move a WfRun or a specific ThreadRun in that WfRun to the HALTED state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeWfRun(self, request, context):
        """Resumes a WfRun or a specific ThreadRun of a WfRun.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWfRun(self, request, context):
        """Deletes a WfRun. The WfRun cannot be in the RUNNING state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTaskDef(self, request, context):
        """Deletes a TaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteWfSpec(self, request, context):
        """Deletes a WfSpec.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserTaskDef(self, request, context):
        """Deletes a UserTaskDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExternalEventDef(self, request, context):
        """Deletes an ExternalEventDef.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskDefMetricsWindow(self, request, context):
        """Returns TaskDef Metrics for a specific TaskDef and a specific time window.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWfSpecMetricsWindow(self, request, context):
        """Returns WfSpec Metrics for a specific WfSpec and a specific time window.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTaskDefMetrics(self, request, context):
        """Returns a list of TaskDef Metrics Windows.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListWfSpecMetrics(self, request, context):
        """Returns a list of WfSpec Metrics Windows.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutTenant(self, request, context):
        """EXPERIMENTAL: Creates another Tenant in the LH Server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutPrincipal(self, request, context):
        """EXPERIMENTAL: Creates an Principal.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Whoami(self, request, context):
        """Returns the Principal of the caller.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerVersion(self, request, context):
        """Gets the version of the LH Server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LittleHorseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.PutTaskDef,
                    request_deserializer=service__pb2.PutTaskDefRequest.FromString,
                    response_serializer=task__def__pb2.TaskDef.SerializeToString,
            ),
            'GetTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskDef,
                    request_deserializer=object__id__pb2.TaskDefId.FromString,
                    response_serializer=task__def__pb2.TaskDef.SerializeToString,
            ),
            'PutExternalEventDef': grpc.unary_unary_rpc_method_handler(
                    servicer.PutExternalEventDef,
                    request_deserializer=service__pb2.PutExternalEventDefRequest.FromString,
                    response_serializer=external__event__pb2.ExternalEventDef.SerializeToString,
            ),
            'GetExternalEventDef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExternalEventDef,
                    request_deserializer=object__id__pb2.ExternalEventDefId.FromString,
                    response_serializer=external__event__pb2.ExternalEventDef.SerializeToString,
            ),
            'PutWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.PutWfSpec,
                    request_deserializer=service__pb2.PutWfSpecRequest.FromString,
                    response_serializer=wf__spec__pb2.WfSpec.SerializeToString,
            ),
            'GetWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWfSpec,
                    request_deserializer=object__id__pb2.WfSpecId.FromString,
                    response_serializer=wf__spec__pb2.WfSpec.SerializeToString,
            ),
            'GetLatestWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestWfSpec,
                    request_deserializer=service__pb2.GetLatestWfSpecRequest.FromString,
                    response_serializer=wf__spec__pb2.WfSpec.SerializeToString,
            ),
            'MigrateWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.MigrateWfSpec,
                    request_deserializer=service__pb2.MigrateWfSpecRequest.FromString,
                    response_serializer=wf__spec__pb2.WfSpec.SerializeToString,
            ),
            'PutUserTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.PutUserTaskDef,
                    request_deserializer=service__pb2.PutUserTaskDefRequest.FromString,
                    response_serializer=user__tasks__pb2.UserTaskDef.SerializeToString,
            ),
            'GetUserTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserTaskDef,
                    request_deserializer=object__id__pb2.UserTaskDefId.FromString,
                    response_serializer=user__tasks__pb2.UserTaskDef.SerializeToString,
            ),
            'GetLatestUserTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestUserTaskDef,
                    request_deserializer=service__pb2.GetLatestUserTaskDefRequest.FromString,
                    response_serializer=user__tasks__pb2.UserTaskDef.SerializeToString,
            ),
            'RunWf': grpc.unary_unary_rpc_method_handler(
                    servicer.RunWf,
                    request_deserializer=service__pb2.RunWfRequest.FromString,
                    response_serializer=wf__run__pb2.WfRun.SerializeToString,
            ),
            'GetWfRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWfRun,
                    request_deserializer=object__id__pb2.WfRunId.FromString,
                    response_serializer=wf__run__pb2.WfRun.SerializeToString,
            ),
            'GetUserTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserTaskRun,
                    request_deserializer=object__id__pb2.UserTaskRunId.FromString,
                    response_serializer=user__tasks__pb2.UserTaskRun.SerializeToString,
            ),
            'AssignUserTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignUserTaskRun,
                    request_deserializer=user__tasks__pb2.AssignUserTaskRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CompleteUserTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteUserTaskRun,
                    request_deserializer=user__tasks__pb2.CompleteUserTaskRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CancelUserTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelUserTaskRun,
                    request_deserializer=user__tasks__pb2.CancelUserTaskRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListUserTaskRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserTaskRuns,
                    request_deserializer=service__pb2.ListUserTaskRunRequest.FromString,
                    response_serializer=service__pb2.UserTaskRunList.SerializeToString,
            ),
            'GetNodeRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeRun,
                    request_deserializer=object__id__pb2.NodeRunId.FromString,
                    response_serializer=node__run__pb2.NodeRun.SerializeToString,
            ),
            'ListNodeRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNodeRuns,
                    request_deserializer=service__pb2.ListNodeRunsRequest.FromString,
                    response_serializer=service__pb2.NodeRunList.SerializeToString,
            ),
            'GetTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskRun,
                    request_deserializer=object__id__pb2.TaskRunId.FromString,
                    response_serializer=task__run__pb2.TaskRun.SerializeToString,
            ),
            'ListTaskRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTaskRuns,
                    request_deserializer=service__pb2.ListTaskRunsRequest.FromString,
                    response_serializer=service__pb2.TaskRunList.SerializeToString,
            ),
            'GetVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVariable,
                    request_deserializer=object__id__pb2.VariableId.FromString,
                    response_serializer=variable__pb2.Variable.SerializeToString,
            ),
            'ListVariables': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVariables,
                    request_deserializer=service__pb2.ListVariablesRequest.FromString,
                    response_serializer=service__pb2.VariableList.SerializeToString,
            ),
            'PutExternalEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.PutExternalEvent,
                    request_deserializer=service__pb2.PutExternalEventRequest.FromString,
                    response_serializer=external__event__pb2.ExternalEvent.SerializeToString,
            ),
            'GetExternalEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExternalEvent,
                    request_deserializer=object__id__pb2.ExternalEventId.FromString,
                    response_serializer=external__event__pb2.ExternalEvent.SerializeToString,
            ),
            'ListExternalEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListExternalEvents,
                    request_deserializer=service__pb2.ListExternalEventsRequest.FromString,
                    response_serializer=service__pb2.ExternalEventList.SerializeToString,
            ),
            'SearchWfRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchWfRun,
                    request_deserializer=service__pb2.SearchWfRunRequest.FromString,
                    response_serializer=service__pb2.WfRunIdList.SerializeToString,
            ),
            'SearchNodeRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchNodeRun,
                    request_deserializer=service__pb2.SearchNodeRunRequest.FromString,
                    response_serializer=service__pb2.NodeRunIdList.SerializeToString,
            ),
            'SearchTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTaskRun,
                    request_deserializer=service__pb2.SearchTaskRunRequest.FromString,
                    response_serializer=service__pb2.TaskRunIdList.SerializeToString,
            ),
            'SearchUserTaskRun': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUserTaskRun,
                    request_deserializer=service__pb2.SearchUserTaskRunRequest.FromString,
                    response_serializer=service__pb2.UserTaskRunIdList.SerializeToString,
            ),
            'SearchVariable': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchVariable,
                    request_deserializer=service__pb2.SearchVariableRequest.FromString,
                    response_serializer=service__pb2.VariableIdList.SerializeToString,
            ),
            'SearchExternalEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchExternalEvent,
                    request_deserializer=service__pb2.SearchExternalEventRequest.FromString,
                    response_serializer=service__pb2.ExternalEventIdList.SerializeToString,
            ),
            'SearchTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTaskDef,
                    request_deserializer=service__pb2.SearchTaskDefRequest.FromString,
                    response_serializer=service__pb2.TaskDefIdList.SerializeToString,
            ),
            'SearchUserTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchUserTaskDef,
                    request_deserializer=service__pb2.SearchUserTaskDefRequest.FromString,
                    response_serializer=service__pb2.UserTaskDefIdList.SerializeToString,
            ),
            'SearchWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchWfSpec,
                    request_deserializer=service__pb2.SearchWfSpecRequest.FromString,
                    response_serializer=service__pb2.WfSpecIdList.SerializeToString,
            ),
            'SearchExternalEventDef': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchExternalEventDef,
                    request_deserializer=service__pb2.SearchExternalEventDefRequest.FromString,
                    response_serializer=service__pb2.ExternalEventDefIdList.SerializeToString,
            ),
            'RegisterTaskWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTaskWorker,
                    request_deserializer=service__pb2.RegisterTaskWorkerRequest.FromString,
                    response_serializer=service__pb2.RegisterTaskWorkerResponse.SerializeToString,
            ),
            'PollTask': grpc.stream_stream_rpc_method_handler(
                    servicer.PollTask,
                    request_deserializer=service__pb2.PollTaskRequest.FromString,
                    response_serializer=service__pb2.PollTaskResponse.SerializeToString,
            ),
            'ReportTask': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportTask,
                    request_deserializer=service__pb2.ReportTaskRun.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopWfRun': grpc.unary_unary_rpc_method_handler(
                    servicer.StopWfRun,
                    request_deserializer=service__pb2.StopWfRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ResumeWfRun': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeWfRun,
                    request_deserializer=service__pb2.ResumeWfRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteWfRun': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWfRun,
                    request_deserializer=service__pb2.DeleteWfRunRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTaskDef,
                    request_deserializer=service__pb2.DeleteTaskDefRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteWfSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteWfSpec,
                    request_deserializer=service__pb2.DeleteWfSpecRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteUserTaskDef': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserTaskDef,
                    request_deserializer=service__pb2.DeleteUserTaskDefRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteExternalEventDef': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExternalEventDef,
                    request_deserializer=service__pb2.DeleteExternalEventDefRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetTaskDefMetricsWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskDefMetricsWindow,
                    request_deserializer=service__pb2.TaskDefMetricsQueryRequest.FromString,
                    response_serializer=service__pb2.TaskDefMetrics.SerializeToString,
            ),
            'GetWfSpecMetricsWindow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWfSpecMetricsWindow,
                    request_deserializer=service__pb2.WfSpecMetricsQueryRequest.FromString,
                    response_serializer=service__pb2.WfSpecMetrics.SerializeToString,
            ),
            'ListTaskDefMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTaskDefMetrics,
                    request_deserializer=service__pb2.ListTaskMetricsRequest.FromString,
                    response_serializer=service__pb2.ListTaskMetricsResponse.SerializeToString,
            ),
            'ListWfSpecMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ListWfSpecMetrics,
                    request_deserializer=service__pb2.ListWfMetricsRequest.FromString,
                    response_serializer=service__pb2.ListWfMetricsResponse.SerializeToString,
            ),
            'PutTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.PutTenant,
                    request_deserializer=acls__pb2.PutTenantRequest.FromString,
                    response_serializer=acls__pb2.Tenant.SerializeToString,
            ),
            'PutPrincipal': grpc.unary_unary_rpc_method_handler(
                    servicer.PutPrincipal,
                    request_deserializer=acls__pb2.PutPrincipalRequest.FromString,
                    response_serializer=acls__pb2.Principal.SerializeToString,
            ),
            'Whoami': grpc.unary_unary_rpc_method_handler(
                    servicer.Whoami,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=acls__pb2.Principal.SerializeToString,
            ),
            'GetServerVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.ServerVersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'littlehorse.LittleHorse', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LittleHorse(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PutTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutTaskDef',
            service__pb2.PutTaskDefRequest.SerializeToString,
            task__def__pb2.TaskDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetTaskDef',
            object__id__pb2.TaskDefId.SerializeToString,
            task__def__pb2.TaskDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutExternalEventDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutExternalEventDef',
            service__pb2.PutExternalEventDefRequest.SerializeToString,
            external__event__pb2.ExternalEventDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExternalEventDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetExternalEventDef',
            object__id__pb2.ExternalEventDefId.SerializeToString,
            external__event__pb2.ExternalEventDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutWfSpec',
            service__pb2.PutWfSpecRequest.SerializeToString,
            wf__spec__pb2.WfSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetWfSpec',
            object__id__pb2.WfSpecId.SerializeToString,
            wf__spec__pb2.WfSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetLatestWfSpec',
            service__pb2.GetLatestWfSpecRequest.SerializeToString,
            wf__spec__pb2.WfSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MigrateWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/MigrateWfSpec',
            service__pb2.MigrateWfSpecRequest.SerializeToString,
            wf__spec__pb2.WfSpec.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutUserTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutUserTaskDef',
            service__pb2.PutUserTaskDefRequest.SerializeToString,
            user__tasks__pb2.UserTaskDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetUserTaskDef',
            object__id__pb2.UserTaskDefId.SerializeToString,
            user__tasks__pb2.UserTaskDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestUserTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetLatestUserTaskDef',
            service__pb2.GetLatestUserTaskDefRequest.SerializeToString,
            user__tasks__pb2.UserTaskDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunWf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/RunWf',
            service__pb2.RunWfRequest.SerializeToString,
            wf__run__pb2.WfRun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWfRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetWfRun',
            object__id__pb2.WfRunId.SerializeToString,
            wf__run__pb2.WfRun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetUserTaskRun',
            object__id__pb2.UserTaskRunId.SerializeToString,
            user__tasks__pb2.UserTaskRun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignUserTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/AssignUserTaskRun',
            user__tasks__pb2.AssignUserTaskRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteUserTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/CompleteUserTaskRun',
            user__tasks__pb2.CompleteUserTaskRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelUserTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/CancelUserTaskRun',
            user__tasks__pb2.CancelUserTaskRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserTaskRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListUserTaskRuns',
            service__pb2.ListUserTaskRunRequest.SerializeToString,
            service__pb2.UserTaskRunList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetNodeRun',
            object__id__pb2.NodeRunId.SerializeToString,
            node__run__pb2.NodeRun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNodeRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListNodeRuns',
            service__pb2.ListNodeRunsRequest.SerializeToString,
            service__pb2.NodeRunList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetTaskRun',
            object__id__pb2.TaskRunId.SerializeToString,
            task__run__pb2.TaskRun.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTaskRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListTaskRuns',
            service__pb2.ListTaskRunsRequest.SerializeToString,
            service__pb2.TaskRunList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetVariable',
            object__id__pb2.VariableId.SerializeToString,
            variable__pb2.Variable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVariables(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListVariables',
            service__pb2.ListVariablesRequest.SerializeToString,
            service__pb2.VariableList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutExternalEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutExternalEvent',
            service__pb2.PutExternalEventRequest.SerializeToString,
            external__event__pb2.ExternalEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExternalEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetExternalEvent',
            object__id__pb2.ExternalEventId.SerializeToString,
            external__event__pb2.ExternalEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListExternalEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListExternalEvents',
            service__pb2.ListExternalEventsRequest.SerializeToString,
            service__pb2.ExternalEventList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchWfRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchWfRun',
            service__pb2.SearchWfRunRequest.SerializeToString,
            service__pb2.WfRunIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchNodeRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchNodeRun',
            service__pb2.SearchNodeRunRequest.SerializeToString,
            service__pb2.NodeRunIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchTaskRun',
            service__pb2.SearchTaskRunRequest.SerializeToString,
            service__pb2.TaskRunIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUserTaskRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchUserTaskRun',
            service__pb2.SearchUserTaskRunRequest.SerializeToString,
            service__pb2.UserTaskRunIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchVariable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchVariable',
            service__pb2.SearchVariableRequest.SerializeToString,
            service__pb2.VariableIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchExternalEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchExternalEvent',
            service__pb2.SearchExternalEventRequest.SerializeToString,
            service__pb2.ExternalEventIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchTaskDef',
            service__pb2.SearchTaskDefRequest.SerializeToString,
            service__pb2.TaskDefIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchUserTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchUserTaskDef',
            service__pb2.SearchUserTaskDefRequest.SerializeToString,
            service__pb2.UserTaskDefIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchWfSpec',
            service__pb2.SearchWfSpecRequest.SerializeToString,
            service__pb2.WfSpecIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchExternalEventDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/SearchExternalEventDef',
            service__pb2.SearchExternalEventDefRequest.SerializeToString,
            service__pb2.ExternalEventDefIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterTaskWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/RegisterTaskWorker',
            service__pb2.RegisterTaskWorkerRequest.SerializeToString,
            service__pb2.RegisterTaskWorkerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PollTask(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/littlehorse.LittleHorse/PollTask',
            service__pb2.PollTaskRequest.SerializeToString,
            service__pb2.PollTaskResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ReportTask',
            service__pb2.ReportTaskRun.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopWfRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/StopWfRun',
            service__pb2.StopWfRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeWfRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ResumeWfRun',
            service__pb2.ResumeWfRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWfRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/DeleteWfRun',
            service__pb2.DeleteWfRunRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/DeleteTaskDef',
            service__pb2.DeleteTaskDefRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteWfSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/DeleteWfSpec',
            service__pb2.DeleteWfSpecRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUserTaskDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/DeleteUserTaskDef',
            service__pb2.DeleteUserTaskDefRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExternalEventDef(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/DeleteExternalEventDef',
            service__pb2.DeleteExternalEventDefRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskDefMetricsWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetTaskDefMetricsWindow',
            service__pb2.TaskDefMetricsQueryRequest.SerializeToString,
            service__pb2.TaskDefMetrics.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWfSpecMetricsWindow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetWfSpecMetricsWindow',
            service__pb2.WfSpecMetricsQueryRequest.SerializeToString,
            service__pb2.WfSpecMetrics.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTaskDefMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListTaskDefMetrics',
            service__pb2.ListTaskMetricsRequest.SerializeToString,
            service__pb2.ListTaskMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListWfSpecMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/ListWfSpecMetrics',
            service__pb2.ListWfMetricsRequest.SerializeToString,
            service__pb2.ListWfMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutTenant',
            acls__pb2.PutTenantRequest.SerializeToString,
            acls__pb2.Tenant.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutPrincipal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/PutPrincipal',
            acls__pb2.PutPrincipalRequest.SerializeToString,
            acls__pb2.Principal.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Whoami(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/Whoami',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            acls__pb2.Principal.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/littlehorse.LittleHorse/GetServerVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.ServerVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
