plugins {
    id 'application'
    id 'java-library'
    id 'com.diffplug.spotless' version '6.20.0'
}

sourceCompatibility=17
targetCompatibility=17

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":sdk-java")
    implementation project(":server")
    implementation "org.apache.kafka:kafka-clients:${kafkaVersion}"
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0'
    implementation 'org.reflections:reflections:0.10.2' // This reflection API isNOT under active development or maintenance, look for an alternative
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'org.testcontainers:kafka:1.18.3'
    implementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
    testImplementation project(':test-utils')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

application {
    mainClass = 'io.littlehorse.driver.Main'
}

// This is provided so that we can use the Reflection API to determine the names
// of parameters for Task Functions and match them to the TaskDef param names.
// Otherwise, the names just become the position in the order of args, which is
// less descriptive.
compileJava {
    options.compilerArgs << '-parameters'
}

test {
    useJUnitPlatform()
    maxParallelForks = Runtime.runtime.availableProcessors()
    testLogging {
        events 'passed', 'skipped', 'failed'
        exceptionFormat = 'full'
    }
}

spotless {
    java {
        target('**/*.java')
        targetExclude('**/proto/*.java')
        palantirJavaFormat()
    }
}
