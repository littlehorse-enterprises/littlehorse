syntax = "proto3";

package littlehorse;

import "google/protobuf/timestamp.proto";
import "object_id.proto";

option go_package = ".;lhproto";
option java_multiple_files = true;
option java_package = "io.littlehorse.sdk.common.proto";
option csharp_namespace = "LittleHorse.Sdk.Common.Proto";

// VariableValue is a structure containing a value in LittleHorse. It can be
// used to pass input variables into a WfRun/ThreadRun/TaskRun/etc, as output
// from a TaskRun, as the value of a WfRun's Variable, etc.
message VariableValue {
  reserved 1;

  // The value held in this VariableValue. If this is unset, treat it as
  // a NULL.
  oneof value {
    // A String representing a serialized json object.
    string json_obj = 2;

    // A String representing a serialized json list.
    string json_arr = 3;

    // A 64-bit floating point number.
    double double = 4;

    // A boolean.
    bool bool = 5;

    // A string.
    string str = 6;

    // The `INT` variable type is stored as a 64-bit integer. The
    // `INT` can be cast to a `DOUBLE`.
    int64 int = 7;

    // An arbitrary String of bytes.
    bytes bytes = 8;

    // Reference to a WfRunId
    WfRunId wf_run_id = 9;

    // A Struct object.
    Struct struct = 10;

    // An Array object.
    // Array array = 11;
  }
}

// A Variable is an instance of a variable assigned to a WfRun.
message Variable {
  // ID of this Variable. Note that the VariableId contains the relevant
  // WfRunId inside it, the threadRunNumber, and the name of the Variabe.
  VariableId id = 1;

  // The value of this Variable.
  VariableValue value = 2;

  // When the Variable was created.
  google.protobuf.Timestamp created_at = 3;

  // The ID of the WfSpec that this Variable belongs to.
  WfSpecId wf_spec_id = 4;

  // Marks a variable to show masked values
  bool masked = 5;
}

// A Struct is a strongly-typed structure containing fields. The Struct is defined
// according to the `Schema` object.
message Struct {
  // The id of the schema.
  StructDefId struct_def_id = 1;
  // The content of the Struct
  InlineStruct struct = 2;
}

// An Array is a repeated list of values
// message Array {
//   oneof value {
//     // A String representing a serialized json object.
//     repeated string json_obj = 2;

//     // A String representing a serialized json list.
//     repeated string json_arr = 3;

//     // A 64-bit floating point number.
//     repeated double double = 4;

//     // A boolean.
//     repeated bool bool = 5;

//     // A string.
//     repeated string str = 6;

//     // The `INT` variable type is stored as a 64-bit integer. The
//     // `INT` can be cast to a `DOUBLE`.
//     repeated int64 int = 7;

//     // An arbitrary String of bytes.
//     repeated bytes bytes = 8;

//     // Reference to a WfRunId
//     repeated WfRunId wf_run_id = 9;

//     // A Struct object.
//     repeated Struct struct = 10;

//     // An Array object.
//     repeated Array array = 11;
//   }
// }

// An `InlineStruct` is a pre-validated set of fields that are part of a `Struct`.
message InlineStruct {
  // The fields in the inline struct.
  map<string, StructField> fields = 1;
}

// A StructField represents the value for a single field in a struct.
message StructField {
  // The value, which can be primitive or complex.
  oneof struct_value {
    // The `value` of the field is an untyped primitive `VariableValue`.
    VariableValue primitive = 1;
    // The `value` of the field is a complex `Struct`.
    InlineStruct struct = 2;
    // The `value` of the field is a list of fields.
    FieldList list = 3;
  }
  // A FieldList is a sub-structure of a `Struct`
  message FieldList {
    repeated StructField fields = 1;
  }
}