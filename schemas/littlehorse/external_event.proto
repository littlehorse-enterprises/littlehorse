syntax = "proto3";

package littlehorse;

import "google/protobuf/timestamp.proto";
import "variable.proto";
import "object_id.proto";
import "common_wfspec.proto";

option go_package = ".;lhproto";
option java_multiple_files = true;
option java_package = "io.littlehorse.sdk.common.proto";
option csharp_namespace = "LittleHorse.Sdk.Common.Proto";

// An ExternalEvent represents A Thing That Happened outside the context of a WfRun.
// Generally, an ExternalEvent is used to represent a document getting signed, an incident
// being resolved, an order being fulfilled, etc.
//
// ExternalEvent's are created via the 'rpc PutExternalEvent'
//
// For more context on ExternalEvents, check our documentation here:
// https://littlehorse.io/docs/server/concepts/external-events
message ExternalEvent {
  // The ID of the ExternalEvent. This contains WfRunId, ExternalEventDefId,
  // and a unique guid which can be used for idempotency of the `PutExternalEvent`
  // rpc call.
  ExternalEventId id = 1;

  // The time the ExternalEvent was registered with LittleHorse.
  google.protobuf.Timestamp created_at = 2;

  // The payload of this ExternalEvent.
  VariableValue content = 3;

  // If the ExternalEvent was claimed by a specific ThreadRun (via Interrupt or
  // EXTERNAL_EVENT Node), this is set to the number of the relevant ThreadRun.
  optional int32 thread_run_number = 4;

  // If the ExternalEvent was claimed by a specific ThreadRun (via EXTERNAL_EVENT
  // Node; note that in the case of an Interrupt the node_run_position will never
  // be set), this is set to the number of the relevant NodeRun.
  optional int32 node_run_position = 5;

  // Whether the ExternalEvent has been claimed by a WfRun.
  bool claimed = 6;
}

// The ExternalEventDef defines the blueprint for an ExternalEvent.
message ExternalEventDef {
  // The id of the ExternalEventDef.
  ExternalEventDefId id = 1;

  // When the ExternalEventDef was created.
  google.protobuf.Timestamp created_at = 2;

  // The retention policy for ExternalEvent's of this ExternalEventDef. This applies to the
  // ExternalEvent **only before** it is matched with a WfRun.
  ExternalEventRetentionPolicy retention_policy = 3;

  // Schema that validates the content of any ExternalEvent's posted for this ExternalEventDef.
  //
  // It is _optional_ for compatibility purposes: ExternalEventDef's that were created
  // before 0.13.2 will not have a schema. For those `ExternalEventDef`s that do not have
  // a specified type_information, we do not validate the WfSpec's usage of the ExternalEvent
  // nor do we validate the type of `content` in the `rpc PutExternalEvent`.
  optional ReturnType type_information = 4;

  // If not set, then the users cannot use the `rpc PutCorrelatedEvent` to post externalEvents of this
  // type.
  optional CorrelatedEventConfig correlated_event_config = 5;
}

// Configures behavior of `CorrelatedEvent`s created for a specific `ExternalEventDef`.
message CorrelatedEventConfig {
  // If ttl_seconds is set, then `CorrelatedEvent`s will be automatically
  // cleaned up based on the provided ttl.
  optional int64 ttl_seconds = 1;

  // If true, delete the `CorrelatedEvent` after the first `ExternalEvent` is created.
  bool delete_after_first_correlation = 2;
}

// A CorrelatedEvent is a piece of data that has been posted into LittleHorse but is not
// yet associated with any specific `WfRun`. This allows users to indirectly create
// `ExternalEvent`s without knowing the `WfRunId` that they are posting the
// `ExternalEvent` to by taking advantage of the correlation id feature of a
// `CorrelatedEvent`.
//
// CorrelatedEvents also serve as a way to simply store data in LittleHorse.
message CorrelatedEvent {
  // The ID of the CorrelatedEvent
  CorrelatedEventId id = 1;

  // The time at which the `CorrelatedEvent` was created.
  google.protobuf.Timestamp created_at = 2;

  // The content of the `CorrelatedEvent`.
  VariableValue content = 3;

  // List of `ExternalEvent`s that have been created for this `CorrelatedEvent`.
  repeated ExternalEventId external_events = 4;
}

// Policy to determine how long an ExternalEvent is retained after creation if it
// is not yet claimed by a WfRun. Note that once a WfRun has been matched with the
// ExternalEvent, the ExternalEvent is deleted if/when that WfRun is deleted.
// If not set, then ExternalEvent's are not deleted if they are not matched with
// a WfRun.
//
// A future version of LittleHorse will allow changing the retention_policy, which
// will trigger a cleanup of old `ExternalEvent`s.
message ExternalEventRetentionPolicy {
  // The retention policy choice. If not set, then the ExternalEvent is not cleaned up
  // until matched with a WfRun (which may mean it is never cleaned up).
  oneof ext_evt_gc_policy {

    // Delete such an ExternalEvent X seconds after it has been registered if it
    // has not yet been claimed by a WfRun.
    int64 seconds_after_put = 1;
  }
}
