syntax = "proto3";
package littlehorse;

option java_multiple_files = true;
option java_package = "io.littlehorse.common.proto";

import "google/protobuf/timestamp.proto";
import "object_id.proto";


enum LHStoreType {
    CORE = 0;
    METADATA = 1;
    REPARTITION = 2;
}

enum StoreableType {
    STORED_GETABLE = 0;
    SCHEDULED_TASK = 1;
    WF_METRIC_UPDATE = 2;
    TASK_METRIC_UPDATE = 3;
    LH_TIMER = 4;
    TAG = 5;
    PARTITION_METRICS = 6;
    METRIC_WINDOW = 7;
    INITIALIZATION_LOG = 8;
    WFRUN_STORED_INVENTORY = 9;
}

enum GetableClassEnum {
    TASK_DEF = 0;
    EXTERNAL_EVENT_DEF = 1;
    WF_SPEC = 2;
    WF_RUN = 3;
    NODE_RUN = 4;
    VARIABLE = 5;
    EXTERNAL_EVENT = 6;
    TASK_DEF_METRICS = 7;
    WF_SPEC_METRICS = 8;
    TASK_WORKER_GROUP = 9;
    USER_TASK_DEF = 10;
    TASK_RUN = 11;
    USER_TASK_RUN = 12;
    PRINCIPAL = 13;
    TENANT = 14;
    WORKFLOW_EVENT_DEF = 15;
    WORKFLOW_EVENT = 16;
    SCHEDULED_WF_RUN = 17;
}

message AttributePb {
    string key = 1;
    string val = 2;
}

enum TagStorageType {
    LOCAL = 0;
}

message TagPb {
    // The following info is also stored in the key of the Tag in the store.
    GetableClassEnum object_type = 1;
    repeated AttributePb attributes = 2;
    string described_object_id = 3;
    google.protobuf.Timestamp created = 4;

    // The following is not stored in the key.
    TagStorageType tag_type = 5;

    string store_key = 7;

    // Observation: it's possible that we could optimize by removing fields 1-4
    // and only relying upon the store key. However, that would complicate
    // the code a bit and may just be premature optimization.
}

// This is a hack to remove the need for doing range scans during the WfRun Deletion
// process. We can iterate through nodeRun's just by knowing their id's; however, it
// turns out that we can't guess all of the External Event Id's without journalling
// them somewhere.
message WfRunStoredInventory {
    WfRunId wf_run_id = 1;
    repeated ExternalEventId external_events = 3;

    // Don't need to store NodeRunId's because we can get them from the WfRun
    // Don't need to store TaskRunid's because we can get them from the NodeRun
    // Don't need to store Variable's because we can get them from the WfSpec
    // Don't need to store UserTaskRun's because we can get them from the NodeRun
    // Don't need to store WorkflowEvent's because we can get them from the NodeRun's
}

message TagsCachePb {
    message CachedTagPb {
        string id = 1;
        bool is_remote = 2;
    }
    repeated CachedTagPb cached_tags = 1;
}

message StoredGetablePb {
    TagsCachePb index_cache = 1;
    bytes getable_payload = 2;
    GetableClassEnum type = 3;
}
