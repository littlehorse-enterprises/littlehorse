// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acls.proto

package io.littlehorse.common.proto;

public interface PrincipalOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.Principal)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Principals are agnostic of the Authentication protocol that you use. In OAuth,
   * the id is retrieved by looking at the claims on the request. In mTLS, the
   * id is retrived by looking at the Subject Name of the client certificate.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <pre>
   * Principals are agnostic of the Authentication protocol that you use. In OAuth,
   * the id is retrieved by looking at the claims on the request. In mTLS, the
   * id is retrived by looking at the Subject Name of the client certificate.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>repeated .littlehorse.ServerACL acls = 2;</code>
   */
  java.util.List<io.littlehorse.common.proto.ServerACL>
      getAclsList();
  /**
   * <code>repeated .littlehorse.ServerACL acls = 2;</code>
   */
  io.littlehorse.common.proto.ServerACL getAcls(int index);
  /**
   * <code>repeated .littlehorse.ServerACL acls = 2;</code>
   */
  int getAclsCount();
  /**
   * <code>repeated .littlehorse.ServerACL acls = 2;</code>
   */
  java.util.List<? extends io.littlehorse.common.proto.ServerACLOrBuilder>
      getAclsOrBuilderList();
  /**
   * <code>repeated .littlehorse.ServerACL acls = 2;</code>
   */
  io.littlehorse.common.proto.ServerACLOrBuilder getAclsOrBuilder(
      int index);

  /**
   * <pre>
   * Used for multi-tenancy of the LittleHorse Server.
   *
   * NOTE: the principal id (field 1) MUST be unique across all tenants. The
   * way multi-tenancy works is that the
   * </pre>
   *
   * <code>string tenant_id = 3;</code>
   * @return The tenantId.
   */
  java.lang.String getTenantId();
  /**
   * <pre>
   * Used for multi-tenancy of the LittleHorse Server.
   *
   * NOTE: the principal id (field 1) MUST be unique across all tenants. The
   * way multi-tenancy works is that the
   * </pre>
   *
   * <code>string tenant_id = 3;</code>
   * @return The bytes for tenantId.
   */
  com.google.protobuf.ByteString
      getTenantIdBytes();
}
