// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.sdk.common.proto;

public interface ServerVersionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.ServerVersion)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Server Major Version
   * </pre>
   *
   * <code>int32 major_version = 1;</code>
   * @return The majorVersion.
   */
  int getMajorVersion();

  /**
   * <pre>
   * Server Minor Version
   * </pre>
   *
   * <code>int32 minor_version = 2;</code>
   * @return The minorVersion.
   */
  int getMinorVersion();

  /**
   * <pre>
   * Server Patch Version
   * </pre>
   *
   * <code>int32 patch_version = 3;</code>
   * @return The patchVersion.
   */
  int getPatchVersion();

  /**
   * <pre>
   * Prerelease Identifier. If this is set, then the server is NOT a production release
   * but rather a release candidate or experimental pre-release.
   * </pre>
   *
   * <code>optional string pre_release_identifier = 4;</code>
   * @return Whether the preReleaseIdentifier field is set.
   */
  boolean hasPreReleaseIdentifier();
  /**
   * <pre>
   * Prerelease Identifier. If this is set, then the server is NOT a production release
   * but rather a release candidate or experimental pre-release.
   * </pre>
   *
   * <code>optional string pre_release_identifier = 4;</code>
   * @return The preReleaseIdentifier.
   */
  java.lang.String getPreReleaseIdentifier();
  /**
   * <pre>
   * Prerelease Identifier. If this is set, then the server is NOT a production release
   * but rather a release candidate or experimental pre-release.
   * </pre>
   *
   * <code>optional string pre_release_identifier = 4;</code>
   * @return The bytes for preReleaseIdentifier.
   */
  com.google.protobuf.ByteString
      getPreReleaseIdentifierBytes();
}
