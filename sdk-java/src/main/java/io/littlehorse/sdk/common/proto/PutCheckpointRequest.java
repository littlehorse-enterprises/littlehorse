// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service.proto
// Protobuf Java Version: 4.32.1

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Message to create a Checkpoint.
 * </pre>
 *
 * Protobuf type {@code littlehorse.PutCheckpointRequest}
 */
@com.google.protobuf.Generated
public final class PutCheckpointRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:littlehorse.PutCheckpointRequest)
    PutCheckpointRequestOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 1,
      /* suffix= */ "",
      PutCheckpointRequest.class.getName());
  }
  // Use PutCheckpointRequest.newBuilder() to construct.
  private PutCheckpointRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private PutCheckpointRequest() {
    logs_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_PutCheckpointRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_PutCheckpointRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.PutCheckpointRequest.class, io.littlehorse.sdk.common.proto.PutCheckpointRequest.Builder.class);
  }

  private int bitField0_;
  public static final int TASK_RUN_ID_FIELD_NUMBER = 1;
  private io.littlehorse.sdk.common.proto.TaskRunId taskRunId_;
  /**
   * <pre>
   * The id of the `TaskRun` that this `Checkpoint` is associated with.
   * </pre>
   *
   * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
   * @return Whether the taskRunId field is set.
   */
  @java.lang.Override
  public boolean hasTaskRunId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The id of the `TaskRun` that this `Checkpoint` is associated with.
   * </pre>
   *
   * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
   * @return The taskRunId.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TaskRunId getTaskRunId() {
    return taskRunId_ == null ? io.littlehorse.sdk.common.proto.TaskRunId.getDefaultInstance() : taskRunId_;
  }
  /**
   * <pre>
   * The id of the `TaskRun` that this `Checkpoint` is associated with.
   * </pre>
   *
   * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TaskRunIdOrBuilder getTaskRunIdOrBuilder() {
    return taskRunId_ == null ? io.littlehorse.sdk.common.proto.TaskRunId.getDefaultInstance() : taskRunId_;
  }

  public static final int TASK_ATTEMPT_FIELD_NUMBER = 2;
  private int taskAttempt_ = 0;
  /**
   * <pre>
   * The `TaskAttempt` that this checkpoint originates from. This is used to fence
   * zombies. If the checkpointed `TaskAttempt` is not `TASK_RUNNING`, the RPC will
   * return a `STOP_TASK` response.
   * </pre>
   *
   * <code>int32 task_attempt = 2;</code>
   * @return The taskAttempt.
   */
  @java.lang.Override
  public int getTaskAttempt() {
    return taskAttempt_;
  }

  public static final int VALUE_FIELD_NUMBER = 3;
  private io.littlehorse.sdk.common.proto.VariableValue value_;
  /**
   * <pre>
   * The value of the checkpoint.
   * </pre>
   *
   * <code>.littlehorse.VariableValue value = 3;</code>
   * @return Whether the value field is set.
   */
  @java.lang.Override
  public boolean hasValue() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The value of the checkpoint.
   * </pre>
   *
   * <code>.littlehorse.VariableValue value = 3;</code>
   * @return The value.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableValue getValue() {
    return value_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : value_;
  }
  /**
   * <pre>
   * The value of the checkpoint.
   * </pre>
   *
   * <code>.littlehorse.VariableValue value = 3;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableValueOrBuilder getValueOrBuilder() {
    return value_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : value_;
  }

  public static final int LOGS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object logs_ = "";
  /**
   * <pre>
   * Any user-friendly logs which can be used for debugging.
   * </pre>
   *
   * <code>optional string logs = 4;</code>
   * @return Whether the logs field is set.
   */
  @java.lang.Override
  public boolean hasLogs() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Any user-friendly logs which can be used for debugging.
   * </pre>
   *
   * <code>optional string logs = 4;</code>
   * @return The logs.
   */
  @java.lang.Override
  public java.lang.String getLogs() {
    java.lang.Object ref = logs_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      logs_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Any user-friendly logs which can be used for debugging.
   * </pre>
   *
   * <code>optional string logs = 4;</code>
   * @return The bytes for logs.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogsBytes() {
    java.lang.Object ref = logs_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      logs_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getTaskRunId());
    }
    if (taskAttempt_ != 0) {
      output.writeInt32(2, taskAttempt_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getValue());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, logs_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTaskRunId());
    }
    if (taskAttempt_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, taskAttempt_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getValue());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, logs_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.PutCheckpointRequest)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.PutCheckpointRequest other = (io.littlehorse.sdk.common.proto.PutCheckpointRequest) obj;

    if (hasTaskRunId() != other.hasTaskRunId()) return false;
    if (hasTaskRunId()) {
      if (!getTaskRunId()
          .equals(other.getTaskRunId())) return false;
    }
    if (getTaskAttempt()
        != other.getTaskAttempt()) return false;
    if (hasValue() != other.hasValue()) return false;
    if (hasValue()) {
      if (!getValue()
          .equals(other.getValue())) return false;
    }
    if (hasLogs() != other.hasLogs()) return false;
    if (hasLogs()) {
      if (!getLogs()
          .equals(other.getLogs())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasTaskRunId()) {
      hash = (37 * hash) + TASK_RUN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTaskRunId().hashCode();
    }
    hash = (37 * hash) + TASK_ATTEMPT_FIELD_NUMBER;
    hash = (53 * hash) + getTaskAttempt();
    if (hasValue()) {
      hash = (37 * hash) + VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getValue().hashCode();
    }
    if (hasLogs()) {
      hash = (37 * hash) + LOGS_FIELD_NUMBER;
      hash = (53 * hash) + getLogs().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.PutCheckpointRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Message to create a Checkpoint.
   * </pre>
   *
   * Protobuf type {@code littlehorse.PutCheckpointRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.PutCheckpointRequest)
      io.littlehorse.sdk.common.proto.PutCheckpointRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_PutCheckpointRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_PutCheckpointRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.PutCheckpointRequest.class, io.littlehorse.sdk.common.proto.PutCheckpointRequest.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.PutCheckpointRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        internalGetTaskRunIdFieldBuilder();
        internalGetValueFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      taskRunId_ = null;
      if (taskRunIdBuilder_ != null) {
        taskRunIdBuilder_.dispose();
        taskRunIdBuilder_ = null;
      }
      taskAttempt_ = 0;
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      logs_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_PutCheckpointRequest_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutCheckpointRequest getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.PutCheckpointRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutCheckpointRequest build() {
      io.littlehorse.sdk.common.proto.PutCheckpointRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutCheckpointRequest buildPartial() {
      io.littlehorse.sdk.common.proto.PutCheckpointRequest result = new io.littlehorse.sdk.common.proto.PutCheckpointRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.PutCheckpointRequest result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.taskRunId_ = taskRunIdBuilder_ == null
            ? taskRunId_
            : taskRunIdBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.taskAttempt_ = taskAttempt_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.value_ = valueBuilder_ == null
            ? value_
            : valueBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.logs_ = logs_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.PutCheckpointRequest) {
        return mergeFrom((io.littlehorse.sdk.common.proto.PutCheckpointRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.PutCheckpointRequest other) {
      if (other == io.littlehorse.sdk.common.proto.PutCheckpointRequest.getDefaultInstance()) return this;
      if (other.hasTaskRunId()) {
        mergeTaskRunId(other.getTaskRunId());
      }
      if (other.getTaskAttempt() != 0) {
        setTaskAttempt(other.getTaskAttempt());
      }
      if (other.hasValue()) {
        mergeValue(other.getValue());
      }
      if (other.hasLogs()) {
        logs_ = other.logs_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  internalGetTaskRunIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              taskAttempt_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              input.readMessage(
                  internalGetValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              logs_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.littlehorse.sdk.common.proto.TaskRunId taskRunId_;
    private com.google.protobuf.SingleFieldBuilder<
        io.littlehorse.sdk.common.proto.TaskRunId, io.littlehorse.sdk.common.proto.TaskRunId.Builder, io.littlehorse.sdk.common.proto.TaskRunIdOrBuilder> taskRunIdBuilder_;
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     * @return Whether the taskRunId field is set.
     */
    public boolean hasTaskRunId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     * @return The taskRunId.
     */
    public io.littlehorse.sdk.common.proto.TaskRunId getTaskRunId() {
      if (taskRunIdBuilder_ == null) {
        return taskRunId_ == null ? io.littlehorse.sdk.common.proto.TaskRunId.getDefaultInstance() : taskRunId_;
      } else {
        return taskRunIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public Builder setTaskRunId(io.littlehorse.sdk.common.proto.TaskRunId value) {
      if (taskRunIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskRunId_ = value;
      } else {
        taskRunIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public Builder setTaskRunId(
        io.littlehorse.sdk.common.proto.TaskRunId.Builder builderForValue) {
      if (taskRunIdBuilder_ == null) {
        taskRunId_ = builderForValue.build();
      } else {
        taskRunIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public Builder mergeTaskRunId(io.littlehorse.sdk.common.proto.TaskRunId value) {
      if (taskRunIdBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          taskRunId_ != null &&
          taskRunId_ != io.littlehorse.sdk.common.proto.TaskRunId.getDefaultInstance()) {
          getTaskRunIdBuilder().mergeFrom(value);
        } else {
          taskRunId_ = value;
        }
      } else {
        taskRunIdBuilder_.mergeFrom(value);
      }
      if (taskRunId_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public Builder clearTaskRunId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      taskRunId_ = null;
      if (taskRunIdBuilder_ != null) {
        taskRunIdBuilder_.dispose();
        taskRunIdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.TaskRunId.Builder getTaskRunIdBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return internalGetTaskRunIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.TaskRunIdOrBuilder getTaskRunIdOrBuilder() {
      if (taskRunIdBuilder_ != null) {
        return taskRunIdBuilder_.getMessageOrBuilder();
      } else {
        return taskRunId_ == null ?
            io.littlehorse.sdk.common.proto.TaskRunId.getDefaultInstance() : taskRunId_;
      }
    }
    /**
     * <pre>
     * The id of the `TaskRun` that this `Checkpoint` is associated with.
     * </pre>
     *
     * <code>.littlehorse.TaskRunId task_run_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.littlehorse.sdk.common.proto.TaskRunId, io.littlehorse.sdk.common.proto.TaskRunId.Builder, io.littlehorse.sdk.common.proto.TaskRunIdOrBuilder> 
        internalGetTaskRunIdFieldBuilder() {
      if (taskRunIdBuilder_ == null) {
        taskRunIdBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.littlehorse.sdk.common.proto.TaskRunId, io.littlehorse.sdk.common.proto.TaskRunId.Builder, io.littlehorse.sdk.common.proto.TaskRunIdOrBuilder>(
                getTaskRunId(),
                getParentForChildren(),
                isClean());
        taskRunId_ = null;
      }
      return taskRunIdBuilder_;
    }

    private int taskAttempt_ ;
    /**
     * <pre>
     * The `TaskAttempt` that this checkpoint originates from. This is used to fence
     * zombies. If the checkpointed `TaskAttempt` is not `TASK_RUNNING`, the RPC will
     * return a `STOP_TASK` response.
     * </pre>
     *
     * <code>int32 task_attempt = 2;</code>
     * @return The taskAttempt.
     */
    @java.lang.Override
    public int getTaskAttempt() {
      return taskAttempt_;
    }
    /**
     * <pre>
     * The `TaskAttempt` that this checkpoint originates from. This is used to fence
     * zombies. If the checkpointed `TaskAttempt` is not `TASK_RUNNING`, the RPC will
     * return a `STOP_TASK` response.
     * </pre>
     *
     * <code>int32 task_attempt = 2;</code>
     * @param value The taskAttempt to set.
     * @return This builder for chaining.
     */
    public Builder setTaskAttempt(int value) {

      taskAttempt_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The `TaskAttempt` that this checkpoint originates from. This is used to fence
     * zombies. If the checkpointed `TaskAttempt` is not `TASK_RUNNING`, the RPC will
     * return a `STOP_TASK` response.
     * </pre>
     *
     * <code>int32 task_attempt = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTaskAttempt() {
      bitField0_ = (bitField0_ & ~0x00000002);
      taskAttempt_ = 0;
      onChanged();
      return this;
    }

    private io.littlehorse.sdk.common.proto.VariableValue value_;
    private com.google.protobuf.SingleFieldBuilder<
        io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder> valueBuilder_;
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     * @return Whether the value field is set.
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     * @return The value.
     */
    public io.littlehorse.sdk.common.proto.VariableValue getValue() {
      if (valueBuilder_ == null) {
        return value_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : value_;
      } else {
        return valueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public Builder setValue(io.littlehorse.sdk.common.proto.VariableValue value) {
      if (valueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        value_ = value;
      } else {
        valueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public Builder setValue(
        io.littlehorse.sdk.common.proto.VariableValue.Builder builderForValue) {
      if (valueBuilder_ == null) {
        value_ = builderForValue.build();
      } else {
        valueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public Builder mergeValue(io.littlehorse.sdk.common.proto.VariableValue value) {
      if (valueBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          value_ != null &&
          value_ != io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance()) {
          getValueBuilder().mergeFrom(value);
        } else {
          value_ = value;
        }
      } else {
        valueBuilder_.mergeFrom(value);
      }
      if (value_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public Builder clearValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      value_ = null;
      if (valueBuilder_ != null) {
        valueBuilder_.dispose();
        valueBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableValue.Builder getValueBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return internalGetValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableValueOrBuilder getValueOrBuilder() {
      if (valueBuilder_ != null) {
        return valueBuilder_.getMessageOrBuilder();
      } else {
        return value_ == null ?
            io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : value_;
      }
    }
    /**
     * <pre>
     * The value of the checkpoint.
     * </pre>
     *
     * <code>.littlehorse.VariableValue value = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder> 
        internalGetValueFieldBuilder() {
      if (valueBuilder_ == null) {
        valueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder>(
                getValue(),
                getParentForChildren(),
                isClean());
        value_ = null;
      }
      return valueBuilder_;
    }

    private java.lang.Object logs_ = "";
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @return Whether the logs field is set.
     */
    public boolean hasLogs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @return The logs.
     */
    public java.lang.String getLogs() {
      java.lang.Object ref = logs_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        logs_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @return The bytes for logs.
     */
    public com.google.protobuf.ByteString
        getLogsBytes() {
      java.lang.Object ref = logs_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        logs_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @param value The logs to set.
     * @return This builder for chaining.
     */
    public Builder setLogs(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      logs_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogs() {
      logs_ = getDefaultInstance().getLogs();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Any user-friendly logs which can be used for debugging.
     * </pre>
     *
     * <code>optional string logs = 4;</code>
     * @param value The bytes for logs to set.
     * @return This builder for chaining.
     */
    public Builder setLogsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      logs_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:littlehorse.PutCheckpointRequest)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.PutCheckpointRequest)
  private static final io.littlehorse.sdk.common.proto.PutCheckpointRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.PutCheckpointRequest();
  }

  public static io.littlehorse.sdk.common.proto.PutCheckpointRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PutCheckpointRequest>
      PARSER = new com.google.protobuf.AbstractParser<PutCheckpointRequest>() {
    @java.lang.Override
    public PutCheckpointRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PutCheckpointRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PutCheckpointRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.PutCheckpointRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

