// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wf_run.proto

package io.littlehorse.sdk.common.proto;

public interface PendingInterruptOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.PendingInterrupt)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The ID of the ExternalEvent triggering the Interrupt.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventId external_event_id = 1;</code>
   * @return Whether the externalEventId field is set.
   */
  boolean hasExternalEventId();
  /**
   * <pre>
   * The ID of the ExternalEvent triggering the Interrupt.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventId external_event_id = 1;</code>
   * @return The externalEventId.
   */
  io.littlehorse.sdk.common.proto.ExternalEventId getExternalEventId();
  /**
   * <pre>
   * The ID of the ExternalEvent triggering the Interrupt.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventId external_event_id = 1;</code>
   */
  io.littlehorse.sdk.common.proto.ExternalEventIdOrBuilder getExternalEventIdOrBuilder();

  /**
   * <pre>
   * The name of the ThreadSpec to run to handle the Interrupt.
   * </pre>
   *
   * <code>string handler_spec_name = 2;</code>
   * @return The handlerSpecName.
   */
  java.lang.String getHandlerSpecName();
  /**
   * <pre>
   * The name of the ThreadSpec to run to handle the Interrupt.
   * </pre>
   *
   * <code>string handler_spec_name = 2;</code>
   * @return The bytes for handlerSpecName.
   */
  com.google.protobuf.ByteString
      getHandlerSpecNameBytes();

  /**
   * <pre>
   * The ID of the ThreadRun to interrupt. Must wait for this ThreadRun to be
   * HALTED before running the Interrupt Handler.
   * </pre>
   *
   * <code>int32 interrupted_thread_id = 3;</code>
   * @return The interruptedThreadId.
   */
  int getInterruptedThreadId();
}
