// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wf_spec.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Sleep Node causes the WfRun to wait a specified time and then resume.
 *
 * There is no output.
 * </pre>
 *
 * Protobuf type {@code littlehorse.SleepNode}
 */
public final class SleepNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.SleepNode)
    SleepNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SleepNode.newBuilder() to construct.
  private SleepNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SleepNode() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SleepNode();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.WfSpecOuterClass.internal_static_littlehorse_SleepNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.WfSpecOuterClass.internal_static_littlehorse_SleepNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.SleepNode.class, io.littlehorse.sdk.common.proto.SleepNode.Builder.class);
  }

  private int sleepLengthCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object sleepLength_;
  public enum SleepLengthCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RAW_SECONDS(1),
    TIMESTAMP(2),
    ISO_DATE(3),
    SLEEPLENGTH_NOT_SET(0);
    private final int value;
    private SleepLengthCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SleepLengthCase valueOf(int value) {
      return forNumber(value);
    }

    public static SleepLengthCase forNumber(int value) {
      switch (value) {
        case 1: return RAW_SECONDS;
        case 2: return TIMESTAMP;
        case 3: return ISO_DATE;
        case 0: return SLEEPLENGTH_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public SleepLengthCase
  getSleepLengthCase() {
    return SleepLengthCase.forNumber(
        sleepLengthCase_);
  }

  public static final int RAW_SECONDS_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Sleeps the specified number of seconds.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
   * @return Whether the rawSeconds field is set.
   */
  @java.lang.Override
  public boolean hasRawSeconds() {
    return sleepLengthCase_ == 1;
  }
  /**
   * <pre>
   * Sleeps the specified number of seconds.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
   * @return The rawSeconds.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignment getRawSeconds() {
    if (sleepLengthCase_ == 1) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }
  /**
   * <pre>
   * Sleeps the specified number of seconds.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getRawSecondsOrBuilder() {
    if (sleepLengthCase_ == 1) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Sleeps until the `long` timestamp (epoch millis) specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
   * @return Whether the timestamp field is set.
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return sleepLengthCase_ == 2;
  }
  /**
   * <pre>
   * Sleeps until the `long` timestamp (epoch millis) specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignment getTimestamp() {
    if (sleepLengthCase_ == 2) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }
  /**
   * <pre>
   * Sleeps until the `long` timestamp (epoch millis) specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getTimestampOrBuilder() {
    if (sleepLengthCase_ == 2) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }

  public static final int ISO_DATE_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Sleeps until the ISO-formatted date specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
   * @return Whether the isoDate field is set.
   */
  @java.lang.Override
  public boolean hasIsoDate() {
    return sleepLengthCase_ == 3;
  }
  /**
   * <pre>
   * Sleeps until the ISO-formatted date specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
   * @return The isoDate.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignment getIsoDate() {
    if (sleepLengthCase_ == 3) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }
  /**
   * <pre>
   * Sleeps until the ISO-formatted date specified here.
   * </pre>
   *
   * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getIsoDateOrBuilder() {
    if (sleepLengthCase_ == 3) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (sleepLengthCase_ == 1) {
      output.writeMessage(1, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    if (sleepLengthCase_ == 2) {
      output.writeMessage(2, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    if (sleepLengthCase_ == 3) {
      output.writeMessage(3, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sleepLengthCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    if (sleepLengthCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    if (sleepLengthCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.SleepNode)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.SleepNode other = (io.littlehorse.sdk.common.proto.SleepNode) obj;

    if (!getSleepLengthCase().equals(other.getSleepLengthCase())) return false;
    switch (sleepLengthCase_) {
      case 1:
        if (!getRawSeconds()
            .equals(other.getRawSeconds())) return false;
        break;
      case 2:
        if (!getTimestamp()
            .equals(other.getTimestamp())) return false;
        break;
      case 3:
        if (!getIsoDate()
            .equals(other.getIsoDate())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (sleepLengthCase_) {
      case 1:
        hash = (37 * hash) + RAW_SECONDS_FIELD_NUMBER;
        hash = (53 * hash) + getRawSeconds().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getTimestamp().hashCode();
        break;
      case 3:
        hash = (37 * hash) + ISO_DATE_FIELD_NUMBER;
        hash = (53 * hash) + getIsoDate().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.SleepNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.SleepNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.SleepNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.SleepNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Sleep Node causes the WfRun to wait a specified time and then resume.
   *
   * There is no output.
   * </pre>
   *
   * Protobuf type {@code littlehorse.SleepNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.SleepNode)
      io.littlehorse.sdk.common.proto.SleepNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.WfSpecOuterClass.internal_static_littlehorse_SleepNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.WfSpecOuterClass.internal_static_littlehorse_SleepNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.SleepNode.class, io.littlehorse.sdk.common.proto.SleepNode.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.SleepNode.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (rawSecondsBuilder_ != null) {
        rawSecondsBuilder_.clear();
      }
      if (timestampBuilder_ != null) {
        timestampBuilder_.clear();
      }
      if (isoDateBuilder_ != null) {
        isoDateBuilder_.clear();
      }
      sleepLengthCase_ = 0;
      sleepLength_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.WfSpecOuterClass.internal_static_littlehorse_SleepNode_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SleepNode getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.SleepNode.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SleepNode build() {
      io.littlehorse.sdk.common.proto.SleepNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.SleepNode buildPartial() {
      io.littlehorse.sdk.common.proto.SleepNode result = new io.littlehorse.sdk.common.proto.SleepNode(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.SleepNode result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(io.littlehorse.sdk.common.proto.SleepNode result) {
      result.sleepLengthCase_ = sleepLengthCase_;
      result.sleepLength_ = this.sleepLength_;
      if (sleepLengthCase_ == 1 &&
          rawSecondsBuilder_ != null) {
        result.sleepLength_ = rawSecondsBuilder_.build();
      }
      if (sleepLengthCase_ == 2 &&
          timestampBuilder_ != null) {
        result.sleepLength_ = timestampBuilder_.build();
      }
      if (sleepLengthCase_ == 3 &&
          isoDateBuilder_ != null) {
        result.sleepLength_ = isoDateBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.SleepNode) {
        return mergeFrom((io.littlehorse.sdk.common.proto.SleepNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.SleepNode other) {
      if (other == io.littlehorse.sdk.common.proto.SleepNode.getDefaultInstance()) return this;
      switch (other.getSleepLengthCase()) {
        case RAW_SECONDS: {
          mergeRawSeconds(other.getRawSeconds());
          break;
        }
        case TIMESTAMP: {
          mergeTimestamp(other.getTimestamp());
          break;
        }
        case ISO_DATE: {
          mergeIsoDate(other.getIsoDate());
          break;
        }
        case SLEEPLENGTH_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getRawSecondsFieldBuilder().getBuilder(),
                  extensionRegistry);
              sleepLengthCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getTimestampFieldBuilder().getBuilder(),
                  extensionRegistry);
              sleepLengthCase_ = 2;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getIsoDateFieldBuilder().getBuilder(),
                  extensionRegistry);
              sleepLengthCase_ = 3;
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int sleepLengthCase_ = 0;
    private java.lang.Object sleepLength_;
    public SleepLengthCase
        getSleepLengthCase() {
      return SleepLengthCase.forNumber(
          sleepLengthCase_);
    }

    public Builder clearSleepLength() {
      sleepLengthCase_ = 0;
      sleepLength_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> rawSecondsBuilder_;
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     * @return Whether the rawSeconds field is set.
     */
    @java.lang.Override
    public boolean hasRawSeconds() {
      return sleepLengthCase_ == 1;
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     * @return The rawSeconds.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignment getRawSeconds() {
      if (rawSecondsBuilder_ == null) {
        if (sleepLengthCase_ == 1) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      } else {
        if (sleepLengthCase_ == 1) {
          return rawSecondsBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    public Builder setRawSeconds(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (rawSecondsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sleepLength_ = value;
        onChanged();
      } else {
        rawSecondsBuilder_.setMessage(value);
      }
      sleepLengthCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    public Builder setRawSeconds(
        io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (rawSecondsBuilder_ == null) {
        sleepLength_ = builderForValue.build();
        onChanged();
      } else {
        rawSecondsBuilder_.setMessage(builderForValue.build());
      }
      sleepLengthCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    public Builder mergeRawSeconds(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (rawSecondsBuilder_ == null) {
        if (sleepLengthCase_ == 1 &&
            sleepLength_ != io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance()) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.newBuilder((io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_)
              .mergeFrom(value).buildPartial();
        } else {
          sleepLength_ = value;
        }
        onChanged();
      } else {
        if (sleepLengthCase_ == 1) {
          rawSecondsBuilder_.mergeFrom(value);
        } else {
          rawSecondsBuilder_.setMessage(value);
        }
      }
      sleepLengthCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    public Builder clearRawSeconds() {
      if (rawSecondsBuilder_ == null) {
        if (sleepLengthCase_ == 1) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
          onChanged();
        }
      } else {
        if (sleepLengthCase_ == 1) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
        }
        rawSecondsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder getRawSecondsBuilder() {
      return getRawSecondsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getRawSecondsOrBuilder() {
      if ((sleepLengthCase_ == 1) && (rawSecondsBuilder_ != null)) {
        return rawSecondsBuilder_.getMessageOrBuilder();
      } else {
        if (sleepLengthCase_ == 1) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps the specified number of seconds.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment raw_seconds = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
        getRawSecondsFieldBuilder() {
      if (rawSecondsBuilder_ == null) {
        if (!(sleepLengthCase_ == 1)) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
        }
        rawSecondsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder>(
                (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_,
                getParentForChildren(),
                isClean());
        sleepLength_ = null;
      }
      sleepLengthCase_ = 1;
      onChanged();
      return rawSecondsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> timestampBuilder_;
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return sleepLengthCase_ == 2;
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignment getTimestamp() {
      if (timestampBuilder_ == null) {
        if (sleepLengthCase_ == 2) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      } else {
        if (sleepLengthCase_ == 2) {
          return timestampBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    public Builder setTimestamp(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (timestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sleepLength_ = value;
        onChanged();
      } else {
        timestampBuilder_.setMessage(value);
      }
      sleepLengthCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    public Builder setTimestamp(
        io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (timestampBuilder_ == null) {
        sleepLength_ = builderForValue.build();
        onChanged();
      } else {
        timestampBuilder_.setMessage(builderForValue.build());
      }
      sleepLengthCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    public Builder mergeTimestamp(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (timestampBuilder_ == null) {
        if (sleepLengthCase_ == 2 &&
            sleepLength_ != io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance()) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.newBuilder((io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_)
              .mergeFrom(value).buildPartial();
        } else {
          sleepLength_ = value;
        }
        onChanged();
      } else {
        if (sleepLengthCase_ == 2) {
          timestampBuilder_.mergeFrom(value);
        } else {
          timestampBuilder_.setMessage(value);
        }
      }
      sleepLengthCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    public Builder clearTimestamp() {
      if (timestampBuilder_ == null) {
        if (sleepLengthCase_ == 2) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
          onChanged();
        }
      } else {
        if (sleepLengthCase_ == 2) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
        }
        timestampBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder getTimestampBuilder() {
      return getTimestampFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getTimestampOrBuilder() {
      if ((sleepLengthCase_ == 2) && (timestampBuilder_ != null)) {
        return timestampBuilder_.getMessageOrBuilder();
      } else {
        if (sleepLengthCase_ == 2) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps until the `long` timestamp (epoch millis) specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment timestamp = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
        getTimestampFieldBuilder() {
      if (timestampBuilder_ == null) {
        if (!(sleepLengthCase_ == 2)) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
        }
        timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder>(
                (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_,
                getParentForChildren(),
                isClean());
        sleepLength_ = null;
      }
      sleepLengthCase_ = 2;
      onChanged();
      return timestampBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> isoDateBuilder_;
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     * @return Whether the isoDate field is set.
     */
    @java.lang.Override
    public boolean hasIsoDate() {
      return sleepLengthCase_ == 3;
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     * @return The isoDate.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignment getIsoDate() {
      if (isoDateBuilder_ == null) {
        if (sleepLengthCase_ == 3) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      } else {
        if (sleepLengthCase_ == 3) {
          return isoDateBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    public Builder setIsoDate(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (isoDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sleepLength_ = value;
        onChanged();
      } else {
        isoDateBuilder_.setMessage(value);
      }
      sleepLengthCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    public Builder setIsoDate(
        io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (isoDateBuilder_ == null) {
        sleepLength_ = builderForValue.build();
        onChanged();
      } else {
        isoDateBuilder_.setMessage(builderForValue.build());
      }
      sleepLengthCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    public Builder mergeIsoDate(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (isoDateBuilder_ == null) {
        if (sleepLengthCase_ == 3 &&
            sleepLength_ != io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance()) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.newBuilder((io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_)
              .mergeFrom(value).buildPartial();
        } else {
          sleepLength_ = value;
        }
        onChanged();
      } else {
        if (sleepLengthCase_ == 3) {
          isoDateBuilder_.mergeFrom(value);
        } else {
          isoDateBuilder_.setMessage(value);
        }
      }
      sleepLengthCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    public Builder clearIsoDate() {
      if (isoDateBuilder_ == null) {
        if (sleepLengthCase_ == 3) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
          onChanged();
        }
      } else {
        if (sleepLengthCase_ == 3) {
          sleepLengthCase_ = 0;
          sleepLength_ = null;
        }
        isoDateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder getIsoDateBuilder() {
      return getIsoDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getIsoDateOrBuilder() {
      if ((sleepLengthCase_ == 3) && (isoDateBuilder_ != null)) {
        return isoDateBuilder_.getMessageOrBuilder();
      } else {
        if (sleepLengthCase_ == 3) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Sleeps until the ISO-formatted date specified here.
     * </pre>
     *
     * <code>.littlehorse.VariableAssignment iso_date = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
        getIsoDateFieldBuilder() {
      if (isoDateBuilder_ == null) {
        if (!(sleepLengthCase_ == 3)) {
          sleepLength_ = io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
        }
        isoDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder>(
                (io.littlehorse.sdk.common.proto.VariableAssignment) sleepLength_,
                getParentForChildren(),
                isClean());
        sleepLength_ = null;
      }
      sleepLengthCase_ = 3;
      onChanged();
      return isoDateBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.SleepNode)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.SleepNode)
  private static final io.littlehorse.sdk.common.proto.SleepNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.SleepNode();
  }

  public static io.littlehorse.sdk.common.proto.SleepNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SleepNode>
      PARSER = new com.google.protobuf.AbstractParser<SleepNode>() {
    @java.lang.Override
    public SleepNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SleepNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SleepNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.SleepNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

