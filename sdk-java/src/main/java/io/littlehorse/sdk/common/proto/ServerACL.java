// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acls.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Represents a specific set of permissions over a specific set of objects
 * in a Tenant. This is a *positive* permission.
 * </pre>
 *
 * Protobuf type {@code littlehorse.ServerACL}
 */
public final class ServerACL extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.ServerACL)
    ServerACLOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ServerACL.newBuilder() to construct.
  private ServerACL(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ServerACL() {
    resources_ = java.util.Collections.emptyList();
    allowedActions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ServerACL();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_ServerACL_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_ServerACL_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.ServerACL.class, io.littlehorse.sdk.common.proto.ServerACL.Builder.class);
  }

  private int resourceFilterCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object resourceFilter_;
  public enum ResourceFilterCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    NAME(3),
    PREFIX(4),
    RESOURCEFILTER_NOT_SET(0);
    private final int value;
    private ResourceFilterCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ResourceFilterCase valueOf(int value) {
      return forNumber(value);
    }

    public static ResourceFilterCase forNumber(int value) {
      switch (value) {
        case 3: return NAME;
        case 4: return PREFIX;
        case 0: return RESOURCEFILTER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ResourceFilterCase
  getResourceFilterCase() {
    return ResourceFilterCase.forNumber(
        resourceFilterCase_);
  }

  public static final int RESOURCES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> resources_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.littlehorse.sdk.common.proto.ACLResource> resources_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.littlehorse.sdk.common.proto.ACLResource>() {
            public io.littlehorse.sdk.common.proto.ACLResource convert(java.lang.Integer from) {
              io.littlehorse.sdk.common.proto.ACLResource result = io.littlehorse.sdk.common.proto.ACLResource.forNumber(from);
              return result == null ? io.littlehorse.sdk.common.proto.ACLResource.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * The resource types over which permission is granted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLResource resources = 1;</code>
   * @return A list containing the resources.
   */
  @java.lang.Override
  public java.util.List<io.littlehorse.sdk.common.proto.ACLResource> getResourcesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.littlehorse.sdk.common.proto.ACLResource>(resources_, resources_converter_);
  }
  /**
   * <pre>
   * The resource types over which permission is granted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLResource resources = 1;</code>
   * @return The count of resources.
   */
  @java.lang.Override
  public int getResourcesCount() {
    return resources_.size();
  }
  /**
   * <pre>
   * The resource types over which permission is granted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLResource resources = 1;</code>
   * @param index The index of the element to return.
   * @return The resources at the given index.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ACLResource getResources(int index) {
    return resources_converter_.convert(resources_.get(index));
  }
  /**
   * <pre>
   * The resource types over which permission is granted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLResource resources = 1;</code>
   * @return A list containing the enum numeric values on the wire for resources.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getResourcesValueList() {
    return resources_;
  }
  /**
   * <pre>
   * The resource types over which permission is granted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLResource resources = 1;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of resources at the given index.
   */
  @java.lang.Override
  public int getResourcesValue(int index) {
    return resources_.get(index);
  }
  private int resourcesMemoizedSerializedSize;

  public static final int ALLOWED_ACTIONS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> allowedActions_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.littlehorse.sdk.common.proto.ACLAction> allowedActions_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.littlehorse.sdk.common.proto.ACLAction>() {
            public io.littlehorse.sdk.common.proto.ACLAction convert(java.lang.Integer from) {
              io.littlehorse.sdk.common.proto.ACLAction result = io.littlehorse.sdk.common.proto.ACLAction.forNumber(from);
              return result == null ? io.littlehorse.sdk.common.proto.ACLAction.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * The actions that are permitted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
   * @return A list containing the allowedActions.
   */
  @java.lang.Override
  public java.util.List<io.littlehorse.sdk.common.proto.ACLAction> getAllowedActionsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.littlehorse.sdk.common.proto.ACLAction>(allowedActions_, allowedActions_converter_);
  }
  /**
   * <pre>
   * The actions that are permitted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
   * @return The count of allowedActions.
   */
  @java.lang.Override
  public int getAllowedActionsCount() {
    return allowedActions_.size();
  }
  /**
   * <pre>
   * The actions that are permitted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
   * @param index The index of the element to return.
   * @return The allowedActions at the given index.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ACLAction getAllowedActions(int index) {
    return allowedActions_converter_.convert(allowedActions_.get(index));
  }
  /**
   * <pre>
   * The actions that are permitted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
   * @return A list containing the enum numeric values on the wire for allowedActions.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getAllowedActionsValueList() {
    return allowedActions_;
  }
  /**
   * <pre>
   * The actions that are permitted.
   * </pre>
   *
   * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of allowedActions at the given index.
   */
  @java.lang.Override
  public int getAllowedActionsValue(int index) {
    return allowedActions_.get(index);
  }
  private int allowedActionsMemoizedSerializedSize;

  public static final int NAME_FIELD_NUMBER = 3;
  /**
   * <pre>
   * If set, then only the resources with this exact name are allowed. For example,
   * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
   * allows a Task Worker to only execute the `my-task` TaskDef.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return Whether the name field is set.
   */
  public boolean hasName() {
    return resourceFilterCase_ == 3;
  }
  /**
   * <pre>
   * If set, then only the resources with this exact name are allowed. For example,
   * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
   * allows a Task Worker to only execute the `my-task` TaskDef.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The name.
   */
  public java.lang.String getName() {
    java.lang.Object ref = "";
    if (resourceFilterCase_ == 3) {
      ref = resourceFilter_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (resourceFilterCase_ == 3) {
        resourceFilter_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * If set, then only the resources with this exact name are allowed. For example,
   * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
   * allows a Task Worker to only execute the `my-task` TaskDef.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string name = 3;</code>
   * @return The bytes for name.
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = "";
    if (resourceFilterCase_ == 3) {
      ref = resourceFilter_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (resourceFilterCase_ == 3) {
        resourceFilter_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PREFIX_FIELD_NUMBER = 4;
  /**
   * <pre>
   * If set, then only the resources whose names match this prefix are allowed.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string prefix = 4;</code>
   * @return Whether the prefix field is set.
   */
  public boolean hasPrefix() {
    return resourceFilterCase_ == 4;
  }
  /**
   * <pre>
   * If set, then only the resources whose names match this prefix are allowed.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string prefix = 4;</code>
   * @return The prefix.
   */
  public java.lang.String getPrefix() {
    java.lang.Object ref = "";
    if (resourceFilterCase_ == 4) {
      ref = resourceFilter_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (resourceFilterCase_ == 4) {
        resourceFilter_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * If set, then only the resources whose names match this prefix are allowed.
   *
   * If `name` and `prefix` are unset, then the ACL applies to all resources of the
   * specified types.
   * </pre>
   *
   * <code>string prefix = 4;</code>
   * @return The bytes for prefix.
   */
  public com.google.protobuf.ByteString
      getPrefixBytes() {
    java.lang.Object ref = "";
    if (resourceFilterCase_ == 4) {
      ref = resourceFilter_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (resourceFilterCase_ == 4) {
        resourceFilter_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getResourcesList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(resourcesMemoizedSerializedSize);
    }
    for (int i = 0; i < resources_.size(); i++) {
      output.writeEnumNoTag(resources_.get(i));
    }
    if (getAllowedActionsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(allowedActionsMemoizedSerializedSize);
    }
    for (int i = 0; i < allowedActions_.size(); i++) {
      output.writeEnumNoTag(allowedActions_.get(i));
    }
    if (resourceFilterCase_ == 3) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, resourceFilter_);
    }
    if (resourceFilterCase_ == 4) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, resourceFilter_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < resources_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(resources_.get(i));
      }
      size += dataSize;
      if (!getResourcesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }resourcesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < allowedActions_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(allowedActions_.get(i));
      }
      size += dataSize;
      if (!getAllowedActionsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }allowedActionsMemoizedSerializedSize = dataSize;
    }
    if (resourceFilterCase_ == 3) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, resourceFilter_);
    }
    if (resourceFilterCase_ == 4) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, resourceFilter_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.ServerACL)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.ServerACL other = (io.littlehorse.sdk.common.proto.ServerACL) obj;

    if (!resources_.equals(other.resources_)) return false;
    if (!allowedActions_.equals(other.allowedActions_)) return false;
    if (!getResourceFilterCase().equals(other.getResourceFilterCase())) return false;
    switch (resourceFilterCase_) {
      case 3:
        if (!getName()
            .equals(other.getName())) return false;
        break;
      case 4:
        if (!getPrefix()
            .equals(other.getPrefix())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getResourcesCount() > 0) {
      hash = (37 * hash) + RESOURCES_FIELD_NUMBER;
      hash = (53 * hash) + resources_.hashCode();
    }
    if (getAllowedActionsCount() > 0) {
      hash = (37 * hash) + ALLOWED_ACTIONS_FIELD_NUMBER;
      hash = (53 * hash) + allowedActions_.hashCode();
    }
    switch (resourceFilterCase_) {
      case 3:
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        break;
      case 4:
        hash = (37 * hash) + PREFIX_FIELD_NUMBER;
        hash = (53 * hash) + getPrefix().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.ServerACL parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.ServerACL parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.ServerACL parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.ServerACL prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents a specific set of permissions over a specific set of objects
   * in a Tenant. This is a *positive* permission.
   * </pre>
   *
   * Protobuf type {@code littlehorse.ServerACL}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.ServerACL)
      io.littlehorse.sdk.common.proto.ServerACLOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_ServerACL_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_ServerACL_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.ServerACL.class, io.littlehorse.sdk.common.proto.ServerACL.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.ServerACL.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      resources_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      allowedActions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      resourceFilterCase_ = 0;
      resourceFilter_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_ServerACL_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ServerACL getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.ServerACL.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ServerACL build() {
      io.littlehorse.sdk.common.proto.ServerACL result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ServerACL buildPartial() {
      io.littlehorse.sdk.common.proto.ServerACL result = new io.littlehorse.sdk.common.proto.ServerACL(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.littlehorse.sdk.common.proto.ServerACL result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        resources_ = java.util.Collections.unmodifiableList(resources_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.resources_ = resources_;
      if (((bitField0_ & 0x00000002) != 0)) {
        allowedActions_ = java.util.Collections.unmodifiableList(allowedActions_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.allowedActions_ = allowedActions_;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.ServerACL result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(io.littlehorse.sdk.common.proto.ServerACL result) {
      result.resourceFilterCase_ = resourceFilterCase_;
      result.resourceFilter_ = this.resourceFilter_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.ServerACL) {
        return mergeFrom((io.littlehorse.sdk.common.proto.ServerACL)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.ServerACL other) {
      if (other == io.littlehorse.sdk.common.proto.ServerACL.getDefaultInstance()) return this;
      if (!other.resources_.isEmpty()) {
        if (resources_.isEmpty()) {
          resources_ = other.resources_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureResourcesIsMutable();
          resources_.addAll(other.resources_);
        }
        onChanged();
      }
      if (!other.allowedActions_.isEmpty()) {
        if (allowedActions_.isEmpty()) {
          allowedActions_ = other.allowedActions_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureAllowedActionsIsMutable();
          allowedActions_.addAll(other.allowedActions_);
        }
        onChanged();
      }
      switch (other.getResourceFilterCase()) {
        case NAME: {
          resourceFilterCase_ = 3;
          resourceFilter_ = other.resourceFilter_;
          onChanged();
          break;
        }
        case PREFIX: {
          resourceFilterCase_ = 4;
          resourceFilter_ = other.resourceFilter_;
          onChanged();
          break;
        }
        case RESOURCEFILTER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int tmpRaw = input.readEnum();
              ensureResourcesIsMutable();
              resources_.add(tmpRaw);
              break;
            } // case 8
            case 10: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureResourcesIsMutable();
                resources_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              ensureAllowedActionsIsMutable();
              allowedActions_.add(tmpRaw);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureAllowedActionsIsMutable();
                allowedActions_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 18
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              resourceFilterCase_ = 3;
              resourceFilter_ = s;
              break;
            } // case 26
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              resourceFilterCase_ = 4;
              resourceFilter_ = s;
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int resourceFilterCase_ = 0;
    private java.lang.Object resourceFilter_;
    public ResourceFilterCase
        getResourceFilterCase() {
      return ResourceFilterCase.forNumber(
          resourceFilterCase_);
    }

    public Builder clearResourceFilter() {
      resourceFilterCase_ = 0;
      resourceFilter_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.util.List<java.lang.Integer> resources_ =
      java.util.Collections.emptyList();
    private void ensureResourcesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        resources_ = new java.util.ArrayList<java.lang.Integer>(resources_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @return A list containing the resources.
     */
    public java.util.List<io.littlehorse.sdk.common.proto.ACLResource> getResourcesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.littlehorse.sdk.common.proto.ACLResource>(resources_, resources_converter_);
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @return The count of resources.
     */
    public int getResourcesCount() {
      return resources_.size();
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param index The index of the element to return.
     * @return The resources at the given index.
     */
    public io.littlehorse.sdk.common.proto.ACLResource getResources(int index) {
      return resources_converter_.convert(resources_.get(index));
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param index The index to set the value at.
     * @param value The resources to set.
     * @return This builder for chaining.
     */
    public Builder setResources(
        int index, io.littlehorse.sdk.common.proto.ACLResource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResourcesIsMutable();
      resources_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param value The resources to add.
     * @return This builder for chaining.
     */
    public Builder addResources(io.littlehorse.sdk.common.proto.ACLResource value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureResourcesIsMutable();
      resources_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param values The resources to add.
     * @return This builder for chaining.
     */
    public Builder addAllResources(
        java.lang.Iterable<? extends io.littlehorse.sdk.common.proto.ACLResource> values) {
      ensureResourcesIsMutable();
      for (io.littlehorse.sdk.common.proto.ACLResource value : values) {
        resources_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearResources() {
      resources_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @return A list containing the enum numeric values on the wire for resources.
     */
    public java.util.List<java.lang.Integer>
    getResourcesValueList() {
      return java.util.Collections.unmodifiableList(resources_);
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of resources at the given index.
     */
    public int getResourcesValue(int index) {
      return resources_.get(index);
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for resources to set.
     * @return This builder for chaining.
     */
    public Builder setResourcesValue(
        int index, int value) {
      ensureResourcesIsMutable();
      resources_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param value The enum numeric value on the wire for resources to add.
     * @return This builder for chaining.
     */
    public Builder addResourcesValue(int value) {
      ensureResourcesIsMutable();
      resources_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The resource types over which permission is granted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLResource resources = 1;</code>
     * @param values The enum numeric values on the wire for resources to add.
     * @return This builder for chaining.
     */
    public Builder addAllResourcesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureResourcesIsMutable();
      for (int value : values) {
        resources_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> allowedActions_ =
      java.util.Collections.emptyList();
    private void ensureAllowedActionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        allowedActions_ = new java.util.ArrayList<java.lang.Integer>(allowedActions_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @return A list containing the allowedActions.
     */
    public java.util.List<io.littlehorse.sdk.common.proto.ACLAction> getAllowedActionsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.littlehorse.sdk.common.proto.ACLAction>(allowedActions_, allowedActions_converter_);
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @return The count of allowedActions.
     */
    public int getAllowedActionsCount() {
      return allowedActions_.size();
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param index The index of the element to return.
     * @return The allowedActions at the given index.
     */
    public io.littlehorse.sdk.common.proto.ACLAction getAllowedActions(int index) {
      return allowedActions_converter_.convert(allowedActions_.get(index));
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param index The index to set the value at.
     * @param value The allowedActions to set.
     * @return This builder for chaining.
     */
    public Builder setAllowedActions(
        int index, io.littlehorse.sdk.common.proto.ACLAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAllowedActionsIsMutable();
      allowedActions_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param value The allowedActions to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedActions(io.littlehorse.sdk.common.proto.ACLAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureAllowedActionsIsMutable();
      allowedActions_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param values The allowedActions to add.
     * @return This builder for chaining.
     */
    public Builder addAllAllowedActions(
        java.lang.Iterable<? extends io.littlehorse.sdk.common.proto.ACLAction> values) {
      ensureAllowedActionsIsMutable();
      for (io.littlehorse.sdk.common.proto.ACLAction value : values) {
        allowedActions_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAllowedActions() {
      allowedActions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @return A list containing the enum numeric values on the wire for allowedActions.
     */
    public java.util.List<java.lang.Integer>
    getAllowedActionsValueList() {
      return java.util.Collections.unmodifiableList(allowedActions_);
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of allowedActions at the given index.
     */
    public int getAllowedActionsValue(int index) {
      return allowedActions_.get(index);
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for allowedActions to set.
     * @return This builder for chaining.
     */
    public Builder setAllowedActionsValue(
        int index, int value) {
      ensureAllowedActionsIsMutable();
      allowedActions_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param value The enum numeric value on the wire for allowedActions to add.
     * @return This builder for chaining.
     */
    public Builder addAllowedActionsValue(int value) {
      ensureAllowedActionsIsMutable();
      allowedActions_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actions that are permitted.
     * </pre>
     *
     * <code>repeated .littlehorse.ACLAction allowed_actions = 2;</code>
     * @param values The enum numeric values on the wire for allowedActions to add.
     * @return This builder for chaining.
     */
    public Builder addAllAllowedActionsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureAllowedActionsIsMutable();
      for (int value : values) {
        allowedActions_.add(value);
      }
      onChanged();
      return this;
    }

    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return resourceFilterCase_ == 3;
    }
    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = "";
      if (resourceFilterCase_ == 3) {
        ref = resourceFilter_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (resourceFilterCase_ == 3) {
          resourceFilter_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = "";
      if (resourceFilterCase_ == 3) {
        ref = resourceFilter_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (resourceFilterCase_ == 3) {
          resourceFilter_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      resourceFilterCase_ = 3;
      resourceFilter_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      if (resourceFilterCase_ == 3) {
        resourceFilterCase_ = 0;
        resourceFilter_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If set, then only the resources with this exact name are allowed. For example,
     * the `READ` and `RUN` `allowed_actions` over `ACL_TASK` with `name` == `my-task`
     * allows a Task Worker to only execute the `my-task` TaskDef.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string name = 3;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      resourceFilterCase_ = 3;
      resourceFilter_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @return Whether the prefix field is set.
     */
    @java.lang.Override
    public boolean hasPrefix() {
      return resourceFilterCase_ == 4;
    }
    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @return The prefix.
     */
    @java.lang.Override
    public java.lang.String getPrefix() {
      java.lang.Object ref = "";
      if (resourceFilterCase_ == 4) {
        ref = resourceFilter_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (resourceFilterCase_ == 4) {
          resourceFilter_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @return The bytes for prefix.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrefixBytes() {
      java.lang.Object ref = "";
      if (resourceFilterCase_ == 4) {
        ref = resourceFilter_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (resourceFilterCase_ == 4) {
          resourceFilter_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @param value The prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefix(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      resourceFilterCase_ = 4;
      resourceFilter_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefix() {
      if (resourceFilterCase_ == 4) {
        resourceFilterCase_ = 0;
        resourceFilter_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * If set, then only the resources whose names match this prefix are allowed.
     *
     * If `name` and `prefix` are unset, then the ACL applies to all resources of the
     * specified types.
     * </pre>
     *
     * <code>string prefix = 4;</code>
     * @param value The bytes for prefix to set.
     * @return This builder for chaining.
     */
    public Builder setPrefixBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      resourceFilterCase_ = 4;
      resourceFilter_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.ServerACL)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.ServerACL)
  private static final io.littlehorse.sdk.common.proto.ServerACL DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.ServerACL();
  }

  public static io.littlehorse.sdk.common.proto.ServerACL getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ServerACL>
      PARSER = new com.google.protobuf.AbstractParser<ServerACL>() {
    @java.lang.Override
    public ServerACL parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ServerACL> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ServerACL> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ServerACL getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

