// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wf_spec.proto

package io.littlehorse.sdk.common.proto;

public interface NodeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.Node)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .littlehorse.Edge outgoing_edges = 1;</code>
   */
  java.util.List<io.littlehorse.sdk.common.proto.Edge> 
      getOutgoingEdgesList();
  /**
   * <code>repeated .littlehorse.Edge outgoing_edges = 1;</code>
   */
  io.littlehorse.sdk.common.proto.Edge getOutgoingEdges(int index);
  /**
   * <code>repeated .littlehorse.Edge outgoing_edges = 1;</code>
   */
  int getOutgoingEdgesCount();
  /**
   * <code>repeated .littlehorse.Edge outgoing_edges = 1;</code>
   */
  java.util.List<? extends io.littlehorse.sdk.common.proto.EdgeOrBuilder> 
      getOutgoingEdgesOrBuilderList();
  /**
   * <code>repeated .littlehorse.Edge outgoing_edges = 1;</code>
   */
  io.littlehorse.sdk.common.proto.EdgeOrBuilder getOutgoingEdgesOrBuilder(
      int index);

  /**
   * <code>repeated .littlehorse.FailureHandlerDef failure_handlers = 4;</code>
   */
  java.util.List<io.littlehorse.sdk.common.proto.FailureHandlerDef> 
      getFailureHandlersList();
  /**
   * <code>repeated .littlehorse.FailureHandlerDef failure_handlers = 4;</code>
   */
  io.littlehorse.sdk.common.proto.FailureHandlerDef getFailureHandlers(int index);
  /**
   * <code>repeated .littlehorse.FailureHandlerDef failure_handlers = 4;</code>
   */
  int getFailureHandlersCount();
  /**
   * <code>repeated .littlehorse.FailureHandlerDef failure_handlers = 4;</code>
   */
  java.util.List<? extends io.littlehorse.sdk.common.proto.FailureHandlerDefOrBuilder> 
      getFailureHandlersOrBuilderList();
  /**
   * <code>repeated .littlehorse.FailureHandlerDef failure_handlers = 4;</code>
   */
  io.littlehorse.sdk.common.proto.FailureHandlerDefOrBuilder getFailureHandlersOrBuilder(
      int index);

  /**
   * <code>.littlehorse.EntrypointNode entrypoint = 5;</code>
   * @return Whether the entrypoint field is set.
   */
  boolean hasEntrypoint();
  /**
   * <code>.littlehorse.EntrypointNode entrypoint = 5;</code>
   * @return The entrypoint.
   */
  io.littlehorse.sdk.common.proto.EntrypointNode getEntrypoint();
  /**
   * <code>.littlehorse.EntrypointNode entrypoint = 5;</code>
   */
  io.littlehorse.sdk.common.proto.EntrypointNodeOrBuilder getEntrypointOrBuilder();

  /**
   * <code>.littlehorse.ExitNode exit = 6;</code>
   * @return Whether the exit field is set.
   */
  boolean hasExit();
  /**
   * <code>.littlehorse.ExitNode exit = 6;</code>
   * @return The exit.
   */
  io.littlehorse.sdk.common.proto.ExitNode getExit();
  /**
   * <code>.littlehorse.ExitNode exit = 6;</code>
   */
  io.littlehorse.sdk.common.proto.ExitNodeOrBuilder getExitOrBuilder();

  /**
   * <code>.littlehorse.TaskNode task = 7;</code>
   * @return Whether the task field is set.
   */
  boolean hasTask();
  /**
   * <code>.littlehorse.TaskNode task = 7;</code>
   * @return The task.
   */
  io.littlehorse.sdk.common.proto.TaskNode getTask();
  /**
   * <code>.littlehorse.TaskNode task = 7;</code>
   */
  io.littlehorse.sdk.common.proto.TaskNodeOrBuilder getTaskOrBuilder();

  /**
   * <code>.littlehorse.ExternalEventNode external_event = 8;</code>
   * @return Whether the externalEvent field is set.
   */
  boolean hasExternalEvent();
  /**
   * <code>.littlehorse.ExternalEventNode external_event = 8;</code>
   * @return The externalEvent.
   */
  io.littlehorse.sdk.common.proto.ExternalEventNode getExternalEvent();
  /**
   * <code>.littlehorse.ExternalEventNode external_event = 8;</code>
   */
  io.littlehorse.sdk.common.proto.ExternalEventNodeOrBuilder getExternalEventOrBuilder();

  /**
   * <code>.littlehorse.StartThreadNode start_thread = 9;</code>
   * @return Whether the startThread field is set.
   */
  boolean hasStartThread();
  /**
   * <code>.littlehorse.StartThreadNode start_thread = 9;</code>
   * @return The startThread.
   */
  io.littlehorse.sdk.common.proto.StartThreadNode getStartThread();
  /**
   * <code>.littlehorse.StartThreadNode start_thread = 9;</code>
   */
  io.littlehorse.sdk.common.proto.StartThreadNodeOrBuilder getStartThreadOrBuilder();

  /**
   * <code>.littlehorse.WaitForThreadsNode wait_for_threads = 10;</code>
   * @return Whether the waitForThreads field is set.
   */
  boolean hasWaitForThreads();
  /**
   * <code>.littlehorse.WaitForThreadsNode wait_for_threads = 10;</code>
   * @return The waitForThreads.
   */
  io.littlehorse.sdk.common.proto.WaitForThreadsNode getWaitForThreads();
  /**
   * <code>.littlehorse.WaitForThreadsNode wait_for_threads = 10;</code>
   */
  io.littlehorse.sdk.common.proto.WaitForThreadsNodeOrBuilder getWaitForThreadsOrBuilder();

  /**
   * <code>.littlehorse.NopNode nop = 11;</code>
   * @return Whether the nop field is set.
   */
  boolean hasNop();
  /**
   * <code>.littlehorse.NopNode nop = 11;</code>
   * @return The nop.
   */
  io.littlehorse.sdk.common.proto.NopNode getNop();
  /**
   * <code>.littlehorse.NopNode nop = 11;</code>
   */
  io.littlehorse.sdk.common.proto.NopNodeOrBuilder getNopOrBuilder();

  /**
   * <code>.littlehorse.SleepNode sleep = 12;</code>
   * @return Whether the sleep field is set.
   */
  boolean hasSleep();
  /**
   * <code>.littlehorse.SleepNode sleep = 12;</code>
   * @return The sleep.
   */
  io.littlehorse.sdk.common.proto.SleepNode getSleep();
  /**
   * <code>.littlehorse.SleepNode sleep = 12;</code>
   */
  io.littlehorse.sdk.common.proto.SleepNodeOrBuilder getSleepOrBuilder();

  /**
   * <code>.littlehorse.UserTaskNode user_task = 13;</code>
   * @return Whether the userTask field is set.
   */
  boolean hasUserTask();
  /**
   * <code>.littlehorse.UserTaskNode user_task = 13;</code>
   * @return The userTask.
   */
  io.littlehorse.sdk.common.proto.UserTaskNode getUserTask();
  /**
   * <code>.littlehorse.UserTaskNode user_task = 13;</code>
   */
  io.littlehorse.sdk.common.proto.UserTaskNodeOrBuilder getUserTaskOrBuilder();

  /**
   * <code>.littlehorse.StartMultipleThreadsNode start_multiple_threads = 15;</code>
   * @return Whether the startMultipleThreads field is set.
   */
  boolean hasStartMultipleThreads();
  /**
   * <code>.littlehorse.StartMultipleThreadsNode start_multiple_threads = 15;</code>
   * @return The startMultipleThreads.
   */
  io.littlehorse.sdk.common.proto.StartMultipleThreadsNode getStartMultipleThreads();
  /**
   * <code>.littlehorse.StartMultipleThreadsNode start_multiple_threads = 15;</code>
   */
  io.littlehorse.sdk.common.proto.StartMultipleThreadsNodeOrBuilder getStartMultipleThreadsOrBuilder();

  io.littlehorse.sdk.common.proto.Node.NodeCase getNodeCase();
}
