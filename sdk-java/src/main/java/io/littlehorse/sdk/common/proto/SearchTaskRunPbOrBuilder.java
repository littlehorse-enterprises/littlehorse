// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.sdk.common.proto;

public interface SearchTaskRunPbOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.SearchTaskRunPb)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional bytes bookmark = 1;</code>
   * @return Whether the bookmark field is set.
   */
  boolean hasBookmark();
  /**
   * <code>optional bytes bookmark = 1;</code>
   * @return The bookmark.
   */
  com.google.protobuf.ByteString getBookmark();

  /**
   * <code>optional int32 limit = 2;</code>
   * @return Whether the limit field is set.
   */
  boolean hasLimit();
  /**
   * <code>optional int32 limit = 2;</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <code>.littlehorse.SearchTaskRunPb.StatusAndTaskDefPb status_and_task_def = 3;</code>
   * @return Whether the statusAndTaskDef field is set.
   */
  boolean hasStatusAndTaskDef();
  /**
   * <code>.littlehorse.SearchTaskRunPb.StatusAndTaskDefPb status_and_task_def = 3;</code>
   * @return The statusAndTaskDef.
   */
  io.littlehorse.sdk.common.proto.SearchTaskRunPb.StatusAndTaskDefPb getStatusAndTaskDef();
  /**
   * <code>.littlehorse.SearchTaskRunPb.StatusAndTaskDefPb status_and_task_def = 3;</code>
   */
  io.littlehorse.sdk.common.proto.SearchTaskRunPb.StatusAndTaskDefPbOrBuilder getStatusAndTaskDefOrBuilder();

  /**
   * <code>.littlehorse.SearchTaskRunPb.ByTaskDefPb task_def = 4;</code>
   * @return Whether the taskDef field is set.
   */
  boolean hasTaskDef();
  /**
   * <code>.littlehorse.SearchTaskRunPb.ByTaskDefPb task_def = 4;</code>
   * @return The taskDef.
   */
  io.littlehorse.sdk.common.proto.SearchTaskRunPb.ByTaskDefPb getTaskDef();
  /**
   * <code>.littlehorse.SearchTaskRunPb.ByTaskDefPb task_def = 4;</code>
   */
  io.littlehorse.sdk.common.proto.SearchTaskRunPb.ByTaskDefPbOrBuilder getTaskDefOrBuilder();

  public io.littlehorse.sdk.common.proto.SearchTaskRunPb.TaskRunCriteriaCase getTaskRunCriteriaCase();
}
