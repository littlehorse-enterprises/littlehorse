// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_wfspec.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Defines a TaskRun execution. Used in a Node and also in the UserTask Trigger Actions.
 * </pre>
 *
 * Protobuf type {@code littlehorse.TaskNode}
 */
public final class TaskNode extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.TaskNode)
    TaskNodeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TaskNode.newBuilder() to construct.
  private TaskNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TaskNode() {
    variables_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TaskNode();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_TaskNode_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_TaskNode_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.TaskNode.class, io.littlehorse.sdk.common.proto.TaskNode.Builder.class);
  }

  private int bitField0_;
  private int taskToExecuteCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object taskToExecute_;
  public enum TaskToExecuteCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    TASK_DEF_ID(1),
    DYNAMIC_TASK(6),
    TASKTOEXECUTE_NOT_SET(0);
    private final int value;
    private TaskToExecuteCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TaskToExecuteCase valueOf(int value) {
      return forNumber(value);
    }

    public static TaskToExecuteCase forNumber(int value) {
      switch (value) {
        case 1: return TASK_DEF_ID;
        case 6: return DYNAMIC_TASK;
        case 0: return TASKTOEXECUTE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public TaskToExecuteCase
  getTaskToExecuteCase() {
    return TaskToExecuteCase.forNumber(
        taskToExecuteCase_);
  }

  public static final int TASK_DEF_ID_FIELD_NUMBER = 1;
  /**
   * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
   * @return Whether the taskDefId field is set.
   */
  @java.lang.Override
  public boolean hasTaskDefId() {
    return taskToExecuteCase_ == 1;
  }
  /**
   * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
   * @return The taskDefId.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TaskDefId getTaskDefId() {
    if (taskToExecuteCase_ == 1) {
       return (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_;
    }
    return io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
  }
  /**
   * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TaskDefIdOrBuilder getTaskDefIdOrBuilder() {
    if (taskToExecuteCase_ == 1) {
       return (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_;
    }
    return io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
  }

  public static final int DYNAMIC_TASK_FIELD_NUMBER = 6;
  /**
   * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
   * @return Whether the dynamicTask field is set.
   */
  @java.lang.Override
  public boolean hasDynamicTask() {
    return taskToExecuteCase_ == 6;
  }
  /**
   * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
   * @return The dynamicTask.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignment getDynamicTask() {
    if (taskToExecuteCase_ == 6) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }
  /**
   * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getDynamicTaskOrBuilder() {
    if (taskToExecuteCase_ == 6) {
       return (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_;
    }
    return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
  }

  public static final int TIMEOUT_SECONDS_FIELD_NUMBER = 2;
  private int timeoutSeconds_ = 0;
  /**
   * <pre>
   * How long until LittleHorse determines that the Task Worker had a technical ERROR if
   * the worker does not yet reply to the Server. This is determined on a per-Attempt
   * basis.
   * </pre>
   *
   * <code>int32 timeout_seconds = 2;</code>
   * @return The timeoutSeconds.
   */
  @java.lang.Override
  public int getTimeoutSeconds() {
    return timeoutSeconds_;
  }

  public static final int RETRIES_FIELD_NUMBER = 3;
  private int retries_ = 0;
  /**
   * <pre>
   * Configures the amount of retries allowed on this TaskNode.
   *
   * Retryable errors include:
   * - TASK_TIMEOUT: the TaskRun was started but the scheduler didn't hear back from the
   *   Task Worker in time.
   * - TASK_FAILED: the Task Worker reported an unexpected *technical* ERROR when executing
   *   the Task Function.
   *
   * Other result codes are not retryable (including TASK_OUTPUT_SERIALIZING_ERROR,
   * TASK_INPUT_VAR_SUB_ERROR, and TASK_EXCEPTION).
   * </pre>
   *
   * <code>int32 retries = 3;</code>
   * @return The retries.
   */
  @java.lang.Override
  public int getRetries() {
    return retries_;
  }

  public static final int EXPONENTIAL_BACKOFF_FIELD_NUMBER = 5;
  private io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy exponentialBackoff_;
  /**
   * <pre>
   * If this field is set, then retries will use Exponential Backoff.
   * </pre>
   *
   * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
   * @return Whether the exponentialBackoff field is set.
   */
  @java.lang.Override
  public boolean hasExponentialBackoff() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * If this field is set, then retries will use Exponential Backoff.
   * </pre>
   *
   * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
   * @return The exponentialBackoff.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy getExponentialBackoff() {
    return exponentialBackoff_ == null ? io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.getDefaultInstance() : exponentialBackoff_;
  }
  /**
   * <pre>
   * If this field is set, then retries will use Exponential Backoff.
   * </pre>
   *
   * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicyOrBuilder getExponentialBackoffOrBuilder() {
    return exponentialBackoff_ == null ? io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.getDefaultInstance() : exponentialBackoff_;
  }

  public static final int VARIABLES_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<io.littlehorse.sdk.common.proto.VariableAssignment> variables_;
  /**
   * <pre>
   * Input variables into the TaskDef.
   * </pre>
   *
   * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.littlehorse.sdk.common.proto.VariableAssignment> getVariablesList() {
    return variables_;
  }
  /**
   * <pre>
   * Input variables into the TaskDef.
   * </pre>
   *
   * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
      getVariablesOrBuilderList() {
    return variables_;
  }
  /**
   * <pre>
   * Input variables into the TaskDef.
   * </pre>
   *
   * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
   */
  @java.lang.Override
  public int getVariablesCount() {
    return variables_.size();
  }
  /**
   * <pre>
   * Input variables into the TaskDef.
   * </pre>
   *
   * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignment getVariables(int index) {
    return variables_.get(index);
  }
  /**
   * <pre>
   * Input variables into the TaskDef.
   * </pre>
   *
   * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getVariablesOrBuilder(
      int index) {
    return variables_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (taskToExecuteCase_ == 1) {
      output.writeMessage(1, (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_);
    }
    if (timeoutSeconds_ != 0) {
      output.writeInt32(2, timeoutSeconds_);
    }
    if (retries_ != 0) {
      output.writeInt32(3, retries_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      output.writeMessage(4, variables_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(5, getExponentialBackoff());
    }
    if (taskToExecuteCase_ == 6) {
      output.writeMessage(6, (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (taskToExecuteCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_);
    }
    if (timeoutSeconds_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, timeoutSeconds_);
    }
    if (retries_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, retries_);
    }
    for (int i = 0; i < variables_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, variables_.get(i));
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getExponentialBackoff());
    }
    if (taskToExecuteCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.TaskNode)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.TaskNode other = (io.littlehorse.sdk.common.proto.TaskNode) obj;

    if (getTimeoutSeconds()
        != other.getTimeoutSeconds()) return false;
    if (getRetries()
        != other.getRetries()) return false;
    if (hasExponentialBackoff() != other.hasExponentialBackoff()) return false;
    if (hasExponentialBackoff()) {
      if (!getExponentialBackoff()
          .equals(other.getExponentialBackoff())) return false;
    }
    if (!getVariablesList()
        .equals(other.getVariablesList())) return false;
    if (!getTaskToExecuteCase().equals(other.getTaskToExecuteCase())) return false;
    switch (taskToExecuteCase_) {
      case 1:
        if (!getTaskDefId()
            .equals(other.getTaskDefId())) return false;
        break;
      case 6:
        if (!getDynamicTask()
            .equals(other.getDynamicTask())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TIMEOUT_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + getTimeoutSeconds();
    hash = (37 * hash) + RETRIES_FIELD_NUMBER;
    hash = (53 * hash) + getRetries();
    if (hasExponentialBackoff()) {
      hash = (37 * hash) + EXPONENTIAL_BACKOFF_FIELD_NUMBER;
      hash = (53 * hash) + getExponentialBackoff().hashCode();
    }
    if (getVariablesCount() > 0) {
      hash = (37 * hash) + VARIABLES_FIELD_NUMBER;
      hash = (53 * hash) + getVariablesList().hashCode();
    }
    switch (taskToExecuteCase_) {
      case 1:
        hash = (37 * hash) + TASK_DEF_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTaskDefId().hashCode();
        break;
      case 6:
        hash = (37 * hash) + DYNAMIC_TASK_FIELD_NUMBER;
        hash = (53 * hash) + getDynamicTask().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.TaskNode parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.TaskNode parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.TaskNode parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.TaskNode prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Defines a TaskRun execution. Used in a Node and also in the UserTask Trigger Actions.
   * </pre>
   *
   * Protobuf type {@code littlehorse.TaskNode}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.TaskNode)
      io.littlehorse.sdk.common.proto.TaskNodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_TaskNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_TaskNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.TaskNode.class, io.littlehorse.sdk.common.proto.TaskNode.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.TaskNode.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getExponentialBackoffFieldBuilder();
        getVariablesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (taskDefIdBuilder_ != null) {
        taskDefIdBuilder_.clear();
      }
      if (dynamicTaskBuilder_ != null) {
        dynamicTaskBuilder_.clear();
      }
      timeoutSeconds_ = 0;
      retries_ = 0;
      exponentialBackoff_ = null;
      if (exponentialBackoffBuilder_ != null) {
        exponentialBackoffBuilder_.dispose();
        exponentialBackoffBuilder_ = null;
      }
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
      } else {
        variables_ = null;
        variablesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      taskToExecuteCase_ = 0;
      taskToExecute_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_TaskNode_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.TaskNode getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.TaskNode.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.TaskNode build() {
      io.littlehorse.sdk.common.proto.TaskNode result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.TaskNode buildPartial() {
      io.littlehorse.sdk.common.proto.TaskNode result = new io.littlehorse.sdk.common.proto.TaskNode(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.littlehorse.sdk.common.proto.TaskNode result) {
      if (variablesBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          variables_ = java.util.Collections.unmodifiableList(variables_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.variables_ = variables_;
      } else {
        result.variables_ = variablesBuilder_.build();
      }
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.TaskNode result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.timeoutSeconds_ = timeoutSeconds_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.retries_ = retries_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.exponentialBackoff_ = exponentialBackoffBuilder_ == null
            ? exponentialBackoff_
            : exponentialBackoffBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(io.littlehorse.sdk.common.proto.TaskNode result) {
      result.taskToExecuteCase_ = taskToExecuteCase_;
      result.taskToExecute_ = this.taskToExecute_;
      if (taskToExecuteCase_ == 1 &&
          taskDefIdBuilder_ != null) {
        result.taskToExecute_ = taskDefIdBuilder_.build();
      }
      if (taskToExecuteCase_ == 6 &&
          dynamicTaskBuilder_ != null) {
        result.taskToExecute_ = dynamicTaskBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.TaskNode) {
        return mergeFrom((io.littlehorse.sdk.common.proto.TaskNode)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.TaskNode other) {
      if (other == io.littlehorse.sdk.common.proto.TaskNode.getDefaultInstance()) return this;
      if (other.getTimeoutSeconds() != 0) {
        setTimeoutSeconds(other.getTimeoutSeconds());
      }
      if (other.getRetries() != 0) {
        setRetries(other.getRetries());
      }
      if (other.hasExponentialBackoff()) {
        mergeExponentialBackoff(other.getExponentialBackoff());
      }
      if (variablesBuilder_ == null) {
        if (!other.variables_.isEmpty()) {
          if (variables_.isEmpty()) {
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureVariablesIsMutable();
            variables_.addAll(other.variables_);
          }
          onChanged();
        }
      } else {
        if (!other.variables_.isEmpty()) {
          if (variablesBuilder_.isEmpty()) {
            variablesBuilder_.dispose();
            variablesBuilder_ = null;
            variables_ = other.variables_;
            bitField0_ = (bitField0_ & ~0x00000020);
            variablesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVariablesFieldBuilder() : null;
          } else {
            variablesBuilder_.addAllMessages(other.variables_);
          }
        }
      }
      switch (other.getTaskToExecuteCase()) {
        case TASK_DEF_ID: {
          mergeTaskDefId(other.getTaskDefId());
          break;
        }
        case DYNAMIC_TASK: {
          mergeDynamicTask(other.getDynamicTask());
          break;
        }
        case TASKTOEXECUTE_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getTaskDefIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              taskToExecuteCase_ = 1;
              break;
            } // case 10
            case 16: {
              timeoutSeconds_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 16
            case 24: {
              retries_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 24
            case 34: {
              io.littlehorse.sdk.common.proto.VariableAssignment m =
                  input.readMessage(
                      io.littlehorse.sdk.common.proto.VariableAssignment.parser(),
                      extensionRegistry);
              if (variablesBuilder_ == null) {
                ensureVariablesIsMutable();
                variables_.add(m);
              } else {
                variablesBuilder_.addMessage(m);
              }
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getExponentialBackoffFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getDynamicTaskFieldBuilder().getBuilder(),
                  extensionRegistry);
              taskToExecuteCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int taskToExecuteCase_ = 0;
    private java.lang.Object taskToExecute_;
    public TaskToExecuteCase
        getTaskToExecuteCase() {
      return TaskToExecuteCase.forNumber(
          taskToExecuteCase_);
    }

    public Builder clearTaskToExecute() {
      taskToExecuteCase_ = 0;
      taskToExecute_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.TaskDefId, io.littlehorse.sdk.common.proto.TaskDefId.Builder, io.littlehorse.sdk.common.proto.TaskDefIdOrBuilder> taskDefIdBuilder_;
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     * @return Whether the taskDefId field is set.
     */
    @java.lang.Override
    public boolean hasTaskDefId() {
      return taskToExecuteCase_ == 1;
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     * @return The taskDefId.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.TaskDefId getTaskDefId() {
      if (taskDefIdBuilder_ == null) {
        if (taskToExecuteCase_ == 1) {
          return (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_;
        }
        return io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
      } else {
        if (taskToExecuteCase_ == 1) {
          return taskDefIdBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
      }
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    public Builder setTaskDefId(io.littlehorse.sdk.common.proto.TaskDefId value) {
      if (taskDefIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskToExecute_ = value;
        onChanged();
      } else {
        taskDefIdBuilder_.setMessage(value);
      }
      taskToExecuteCase_ = 1;
      return this;
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    public Builder setTaskDefId(
        io.littlehorse.sdk.common.proto.TaskDefId.Builder builderForValue) {
      if (taskDefIdBuilder_ == null) {
        taskToExecute_ = builderForValue.build();
        onChanged();
      } else {
        taskDefIdBuilder_.setMessage(builderForValue.build());
      }
      taskToExecuteCase_ = 1;
      return this;
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    public Builder mergeTaskDefId(io.littlehorse.sdk.common.proto.TaskDefId value) {
      if (taskDefIdBuilder_ == null) {
        if (taskToExecuteCase_ == 1 &&
            taskToExecute_ != io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance()) {
          taskToExecute_ = io.littlehorse.sdk.common.proto.TaskDefId.newBuilder((io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_)
              .mergeFrom(value).buildPartial();
        } else {
          taskToExecute_ = value;
        }
        onChanged();
      } else {
        if (taskToExecuteCase_ == 1) {
          taskDefIdBuilder_.mergeFrom(value);
        } else {
          taskDefIdBuilder_.setMessage(value);
        }
      }
      taskToExecuteCase_ = 1;
      return this;
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    public Builder clearTaskDefId() {
      if (taskDefIdBuilder_ == null) {
        if (taskToExecuteCase_ == 1) {
          taskToExecuteCase_ = 0;
          taskToExecute_ = null;
          onChanged();
        }
      } else {
        if (taskToExecuteCase_ == 1) {
          taskToExecuteCase_ = 0;
          taskToExecute_ = null;
        }
        taskDefIdBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.TaskDefId.Builder getTaskDefIdBuilder() {
      return getTaskDefIdFieldBuilder().getBuilder();
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.TaskDefIdOrBuilder getTaskDefIdOrBuilder() {
      if ((taskToExecuteCase_ == 1) && (taskDefIdBuilder_ != null)) {
        return taskDefIdBuilder_.getMessageOrBuilder();
      } else {
        if (taskToExecuteCase_ == 1) {
          return (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_;
        }
        return io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
      }
    }
    /**
     * <code>.littlehorse.TaskDefId task_def_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.TaskDefId, io.littlehorse.sdk.common.proto.TaskDefId.Builder, io.littlehorse.sdk.common.proto.TaskDefIdOrBuilder> 
        getTaskDefIdFieldBuilder() {
      if (taskDefIdBuilder_ == null) {
        if (!(taskToExecuteCase_ == 1)) {
          taskToExecute_ = io.littlehorse.sdk.common.proto.TaskDefId.getDefaultInstance();
        }
        taskDefIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.TaskDefId, io.littlehorse.sdk.common.proto.TaskDefId.Builder, io.littlehorse.sdk.common.proto.TaskDefIdOrBuilder>(
                (io.littlehorse.sdk.common.proto.TaskDefId) taskToExecute_,
                getParentForChildren(),
                isClean());
        taskToExecute_ = null;
      }
      taskToExecuteCase_ = 1;
      onChanged();
      return taskDefIdBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> dynamicTaskBuilder_;
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     * @return Whether the dynamicTask field is set.
     */
    @java.lang.Override
    public boolean hasDynamicTask() {
      return taskToExecuteCase_ == 6;
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     * @return The dynamicTask.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignment getDynamicTask() {
      if (dynamicTaskBuilder_ == null) {
        if (taskToExecuteCase_ == 6) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      } else {
        if (taskToExecuteCase_ == 6) {
          return dynamicTaskBuilder_.getMessage();
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    public Builder setDynamicTask(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (dynamicTaskBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        taskToExecute_ = value;
        onChanged();
      } else {
        dynamicTaskBuilder_.setMessage(value);
      }
      taskToExecuteCase_ = 6;
      return this;
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    public Builder setDynamicTask(
        io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (dynamicTaskBuilder_ == null) {
        taskToExecute_ = builderForValue.build();
        onChanged();
      } else {
        dynamicTaskBuilder_.setMessage(builderForValue.build());
      }
      taskToExecuteCase_ = 6;
      return this;
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    public Builder mergeDynamicTask(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (dynamicTaskBuilder_ == null) {
        if (taskToExecuteCase_ == 6 &&
            taskToExecute_ != io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance()) {
          taskToExecute_ = io.littlehorse.sdk.common.proto.VariableAssignment.newBuilder((io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_)
              .mergeFrom(value).buildPartial();
        } else {
          taskToExecute_ = value;
        }
        onChanged();
      } else {
        if (taskToExecuteCase_ == 6) {
          dynamicTaskBuilder_.mergeFrom(value);
        } else {
          dynamicTaskBuilder_.setMessage(value);
        }
      }
      taskToExecuteCase_ = 6;
      return this;
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    public Builder clearDynamicTask() {
      if (dynamicTaskBuilder_ == null) {
        if (taskToExecuteCase_ == 6) {
          taskToExecuteCase_ = 0;
          taskToExecute_ = null;
          onChanged();
        }
      } else {
        if (taskToExecuteCase_ == 6) {
          taskToExecuteCase_ = 0;
          taskToExecute_ = null;
        }
        dynamicTaskBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder getDynamicTaskBuilder() {
      return getDynamicTaskFieldBuilder().getBuilder();
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getDynamicTaskOrBuilder() {
      if ((taskToExecuteCase_ == 6) && (dynamicTaskBuilder_ != null)) {
        return dynamicTaskBuilder_.getMessageOrBuilder();
      } else {
        if (taskToExecuteCase_ == 6) {
          return (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_;
        }
        return io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
      }
    }
    /**
     * <code>.littlehorse.VariableAssignment dynamic_task = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
        getDynamicTaskFieldBuilder() {
      if (dynamicTaskBuilder_ == null) {
        if (!(taskToExecuteCase_ == 6)) {
          taskToExecute_ = io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance();
        }
        dynamicTaskBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder>(
                (io.littlehorse.sdk.common.proto.VariableAssignment) taskToExecute_,
                getParentForChildren(),
                isClean());
        taskToExecute_ = null;
      }
      taskToExecuteCase_ = 6;
      onChanged();
      return dynamicTaskBuilder_;
    }

    private int timeoutSeconds_ ;
    /**
     * <pre>
     * How long until LittleHorse determines that the Task Worker had a technical ERROR if
     * the worker does not yet reply to the Server. This is determined on a per-Attempt
     * basis.
     * </pre>
     *
     * <code>int32 timeout_seconds = 2;</code>
     * @return The timeoutSeconds.
     */
    @java.lang.Override
    public int getTimeoutSeconds() {
      return timeoutSeconds_;
    }
    /**
     * <pre>
     * How long until LittleHorse determines that the Task Worker had a technical ERROR if
     * the worker does not yet reply to the Server. This is determined on a per-Attempt
     * basis.
     * </pre>
     *
     * <code>int32 timeout_seconds = 2;</code>
     * @param value The timeoutSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setTimeoutSeconds(int value) {

      timeoutSeconds_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How long until LittleHorse determines that the Task Worker had a technical ERROR if
     * the worker does not yet reply to the Server. This is determined on a per-Attempt
     * basis.
     * </pre>
     *
     * <code>int32 timeout_seconds = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTimeoutSeconds() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timeoutSeconds_ = 0;
      onChanged();
      return this;
    }

    private int retries_ ;
    /**
     * <pre>
     * Configures the amount of retries allowed on this TaskNode.
     *
     * Retryable errors include:
     * - TASK_TIMEOUT: the TaskRun was started but the scheduler didn't hear back from the
     *   Task Worker in time.
     * - TASK_FAILED: the Task Worker reported an unexpected *technical* ERROR when executing
     *   the Task Function.
     *
     * Other result codes are not retryable (including TASK_OUTPUT_SERIALIZING_ERROR,
     * TASK_INPUT_VAR_SUB_ERROR, and TASK_EXCEPTION).
     * </pre>
     *
     * <code>int32 retries = 3;</code>
     * @return The retries.
     */
    @java.lang.Override
    public int getRetries() {
      return retries_;
    }
    /**
     * <pre>
     * Configures the amount of retries allowed on this TaskNode.
     *
     * Retryable errors include:
     * - TASK_TIMEOUT: the TaskRun was started but the scheduler didn't hear back from the
     *   Task Worker in time.
     * - TASK_FAILED: the Task Worker reported an unexpected *technical* ERROR when executing
     *   the Task Function.
     *
     * Other result codes are not retryable (including TASK_OUTPUT_SERIALIZING_ERROR,
     * TASK_INPUT_VAR_SUB_ERROR, and TASK_EXCEPTION).
     * </pre>
     *
     * <code>int32 retries = 3;</code>
     * @param value The retries to set.
     * @return This builder for chaining.
     */
    public Builder setRetries(int value) {

      retries_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configures the amount of retries allowed on this TaskNode.
     *
     * Retryable errors include:
     * - TASK_TIMEOUT: the TaskRun was started but the scheduler didn't hear back from the
     *   Task Worker in time.
     * - TASK_FAILED: the Task Worker reported an unexpected *technical* ERROR when executing
     *   the Task Function.
     *
     * Other result codes are not retryable (including TASK_OUTPUT_SERIALIZING_ERROR,
     * TASK_INPUT_VAR_SUB_ERROR, and TASK_EXCEPTION).
     * </pre>
     *
     * <code>int32 retries = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetries() {
      bitField0_ = (bitField0_ & ~0x00000008);
      retries_ = 0;
      onChanged();
      return this;
    }

    private io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy exponentialBackoff_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.Builder, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicyOrBuilder> exponentialBackoffBuilder_;
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     * @return Whether the exponentialBackoff field is set.
     */
    public boolean hasExponentialBackoff() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     * @return The exponentialBackoff.
     */
    public io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy getExponentialBackoff() {
      if (exponentialBackoffBuilder_ == null) {
        return exponentialBackoff_ == null ? io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.getDefaultInstance() : exponentialBackoff_;
      } else {
        return exponentialBackoffBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public Builder setExponentialBackoff(io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy value) {
      if (exponentialBackoffBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        exponentialBackoff_ = value;
      } else {
        exponentialBackoffBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public Builder setExponentialBackoff(
        io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.Builder builderForValue) {
      if (exponentialBackoffBuilder_ == null) {
        exponentialBackoff_ = builderForValue.build();
      } else {
        exponentialBackoffBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public Builder mergeExponentialBackoff(io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy value) {
      if (exponentialBackoffBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          exponentialBackoff_ != null &&
          exponentialBackoff_ != io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.getDefaultInstance()) {
          getExponentialBackoffBuilder().mergeFrom(value);
        } else {
          exponentialBackoff_ = value;
        }
      } else {
        exponentialBackoffBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public Builder clearExponentialBackoff() {
      bitField0_ = (bitField0_ & ~0x00000010);
      exponentialBackoff_ = null;
      if (exponentialBackoffBuilder_ != null) {
        exponentialBackoffBuilder_.dispose();
        exponentialBackoffBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.Builder getExponentialBackoffBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getExponentialBackoffFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    public io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicyOrBuilder getExponentialBackoffOrBuilder() {
      if (exponentialBackoffBuilder_ != null) {
        return exponentialBackoffBuilder_.getMessageOrBuilder();
      } else {
        return exponentialBackoff_ == null ?
            io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.getDefaultInstance() : exponentialBackoff_;
      }
    }
    /**
     * <pre>
     * If this field is set, then retries will use Exponential Backoff.
     * </pre>
     *
     * <code>optional .littlehorse.ExponentialBackoffRetryPolicy exponential_backoff = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.Builder, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicyOrBuilder> 
        getExponentialBackoffFieldBuilder() {
      if (exponentialBackoffBuilder_ == null) {
        exponentialBackoffBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicy.Builder, io.littlehorse.sdk.common.proto.ExponentialBackoffRetryPolicyOrBuilder>(
                getExponentialBackoff(),
                getParentForChildren(),
                isClean());
        exponentialBackoff_ = null;
      }
      return exponentialBackoffBuilder_;
    }

    private java.util.List<io.littlehorse.sdk.common.proto.VariableAssignment> variables_ =
      java.util.Collections.emptyList();
    private void ensureVariablesIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        variables_ = new java.util.ArrayList<io.littlehorse.sdk.common.proto.VariableAssignment>(variables_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> variablesBuilder_;

    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public java.util.List<io.littlehorse.sdk.common.proto.VariableAssignment> getVariablesList() {
      if (variablesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(variables_);
      } else {
        return variablesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public int getVariablesCount() {
      if (variablesBuilder_ == null) {
        return variables_.size();
      } else {
        return variablesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment getVariables(int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);
      } else {
        return variablesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder setVariables(
        int index, io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.set(index, value);
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder setVariables(
        int index, io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.set(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder addVariables(io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder addVariables(
        int index, io.littlehorse.sdk.common.proto.VariableAssignment value) {
      if (variablesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVariablesIsMutable();
        variables_.add(index, value);
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder addVariables(
        io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder addVariables(
        int index, io.littlehorse.sdk.common.proto.VariableAssignment.Builder builderForValue) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.add(index, builderForValue.build());
        onChanged();
      } else {
        variablesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder addAllVariables(
        java.lang.Iterable<? extends io.littlehorse.sdk.common.proto.VariableAssignment> values) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, variables_);
        onChanged();
      } else {
        variablesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder clearVariables() {
      if (variablesBuilder_ == null) {
        variables_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        variablesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public Builder removeVariables(int index) {
      if (variablesBuilder_ == null) {
        ensureVariablesIsMutable();
        variables_.remove(index);
        onChanged();
      } else {
        variablesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder getVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder getVariablesOrBuilder(
        int index) {
      if (variablesBuilder_ == null) {
        return variables_.get(index);  } else {
        return variablesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public java.util.List<? extends io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
         getVariablesOrBuilderList() {
      if (variablesBuilder_ != null) {
        return variablesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(variables_);
      }
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder addVariablesBuilder() {
      return getVariablesFieldBuilder().addBuilder(
          io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance());
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableAssignment.Builder addVariablesBuilder(
        int index) {
      return getVariablesFieldBuilder().addBuilder(
          index, io.littlehorse.sdk.common.proto.VariableAssignment.getDefaultInstance());
    }
    /**
     * <pre>
     * Input variables into the TaskDef.
     * </pre>
     *
     * <code>repeated .littlehorse.VariableAssignment variables = 4;</code>
     */
    public java.util.List<io.littlehorse.sdk.common.proto.VariableAssignment.Builder> 
         getVariablesBuilderList() {
      return getVariablesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder> 
        getVariablesFieldBuilder() {
      if (variablesBuilder_ == null) {
        variablesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableAssignment, io.littlehorse.sdk.common.proto.VariableAssignment.Builder, io.littlehorse.sdk.common.proto.VariableAssignmentOrBuilder>(
                variables_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        variables_ = null;
      }
      return variablesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.TaskNode)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.TaskNode)
  private static final io.littlehorse.sdk.common.proto.TaskNode DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.TaskNode();
  }

  public static io.littlehorse.sdk.common.proto.TaskNode getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TaskNode>
      PARSER = new com.google.protobuf.AbstractParser<TaskNode>() {
    @java.lang.Override
    public TaskNode parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TaskNode> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TaskNode> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TaskNode getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

