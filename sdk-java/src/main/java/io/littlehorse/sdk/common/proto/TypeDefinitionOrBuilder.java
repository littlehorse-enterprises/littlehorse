// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_wfspec.proto

package io.littlehorse.sdk.common.proto;

public interface TypeDefinitionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.TypeDefinition)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.littlehorse.VariableType primitive_type = 1;</code>
   * @return Whether the primitiveType field is set.
   */
  boolean hasPrimitiveType();
  /**
   * <code>.littlehorse.VariableType primitive_type = 1;</code>
   * @return The enum numeric value on the wire for primitiveType.
   */
  int getPrimitiveTypeValue();
  /**
   * <code>.littlehorse.VariableType primitive_type = 1;</code>
   * @return The primitiveType.
   */
  io.littlehorse.sdk.common.proto.VariableType getPrimitiveType();

  /**
   * <code>.littlehorse.StructDefId struct = 5;</code>
   * @return Whether the struct field is set.
   */
  boolean hasStruct();
  /**
   * <code>.littlehorse.StructDefId struct = 5;</code>
   * @return The struct.
   */
  io.littlehorse.sdk.common.proto.StructDefId getStruct();
  /**
   * <code>.littlehorse.StructDefId struct = 5;</code>
   */
  io.littlehorse.sdk.common.proto.StructDefIdOrBuilder getStructOrBuilder();

  /**
   * <code>.littlehorse.InlineStructDef inline_struct = 6;</code>
   * @return Whether the inlineStruct field is set.
   */
  boolean hasInlineStruct();
  /**
   * <code>.littlehorse.InlineStructDef inline_struct = 6;</code>
   * @return The inlineStruct.
   */
  io.littlehorse.sdk.common.proto.InlineStructDef getInlineStruct();
  /**
   * <code>.littlehorse.InlineStructDef inline_struct = 6;</code>
   */
  io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder getInlineStructOrBuilder();

  /**
   * <pre>
   * Set to true if values of this type contain sensitive information and must be masked.
   * </pre>
   *
   * <code>bool masked = 4;</code>
   * @return The masked.
   */
  boolean getMasked();

  io.littlehorse.sdk.common.proto.TypeDefinition.DefinedTypeCase getDefinedTypeCase();
}
