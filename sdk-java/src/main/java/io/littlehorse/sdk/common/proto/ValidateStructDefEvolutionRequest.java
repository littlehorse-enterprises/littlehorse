// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Request to validate the evolution of an existing StructDef to a new StructDef
 * based on a compatibility type.
 * </pre>
 *
 * Protobuf type {@code littlehorse.ValidateStructDefEvolutionRequest}
 */
public final class ValidateStructDefEvolutionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.ValidateStructDefEvolutionRequest)
    ValidateStructDefEvolutionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ValidateStructDefEvolutionRequest.newBuilder() to construct.
  private ValidateStructDefEvolutionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ValidateStructDefEvolutionRequest() {
    compatibilityType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ValidateStructDefEvolutionRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_ValidateStructDefEvolutionRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_ValidateStructDefEvolutionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.class, io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.Builder.class);
  }

  public static final int STRUCT_DEF_ID_FIELD_NUMBER = 1;
  private io.littlehorse.sdk.common.proto.StructDefId structDefId_;
  /**
   * <pre>
   * The ID of the StructDef you want to compare against that already exists on the server.
   * </pre>
   *
   * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
   * @return Whether the structDefId field is set.
   */
  @java.lang.Override
  public boolean hasStructDefId() {
    return structDefId_ != null;
  }
  /**
   * <pre>
   * The ID of the StructDef you want to compare against that already exists on the server.
   * </pre>
   *
   * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
   * @return The structDefId.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.StructDefId getStructDefId() {
    return structDefId_ == null ? io.littlehorse.sdk.common.proto.StructDefId.getDefaultInstance() : structDefId_;
  }
  /**
   * <pre>
   * The ID of the StructDef you want to compare against that already exists on the server.
   * </pre>
   *
   * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.StructDefIdOrBuilder getStructDefIdOrBuilder() {
    return structDefId_ == null ? io.littlehorse.sdk.common.proto.StructDefId.getDefaultInstance() : structDefId_;
  }

  public static final int STRUCT_DEF_FIELD_NUMBER = 2;
  private io.littlehorse.sdk.common.proto.InlineStructDef structDef_;
  /**
   * <pre>
   * The new StructDef schema.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
   * @return Whether the structDef field is set.
   */
  @java.lang.Override
  public boolean hasStructDef() {
    return structDef_ != null;
  }
  /**
   * <pre>
   * The new StructDef schema.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
   * @return The structDef.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.InlineStructDef getStructDef() {
    return structDef_ == null ? io.littlehorse.sdk.common.proto.InlineStructDef.getDefaultInstance() : structDef_;
  }
  /**
   * <pre>
   * The new StructDef schema.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder getStructDefOrBuilder() {
    return structDef_ == null ? io.littlehorse.sdk.common.proto.InlineStructDef.getDefaultInstance() : structDef_;
  }

  public static final int COMPATIBILITY_TYPE_FIELD_NUMBER = 3;
  private int compatibilityType_ = 0;
  /**
   * <pre>
   * The server will validate the new StructDef schema against
   * the existing StructDef schema based on this compatibility type.
   * </pre>
   *
   * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
   * @return The enum numeric value on the wire for compatibilityType.
   */
  @java.lang.Override public int getCompatibilityTypeValue() {
    return compatibilityType_;
  }
  /**
   * <pre>
   * The server will validate the new StructDef schema against
   * the existing StructDef schema based on this compatibility type.
   * </pre>
   *
   * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
   * @return The compatibilityType.
   */
  @java.lang.Override public io.littlehorse.sdk.common.proto.StructDefCompatibilityType getCompatibilityType() {
    io.littlehorse.sdk.common.proto.StructDefCompatibilityType result = io.littlehorse.sdk.common.proto.StructDefCompatibilityType.forNumber(compatibilityType_);
    return result == null ? io.littlehorse.sdk.common.proto.StructDefCompatibilityType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (structDefId_ != null) {
      output.writeMessage(1, getStructDefId());
    }
    if (structDef_ != null) {
      output.writeMessage(2, getStructDef());
    }
    if (compatibilityType_ != io.littlehorse.sdk.common.proto.StructDefCompatibilityType.NO_SCHEMA_UPDATES.getNumber()) {
      output.writeEnum(3, compatibilityType_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (structDefId_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStructDefId());
    }
    if (structDef_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getStructDef());
    }
    if (compatibilityType_ != io.littlehorse.sdk.common.proto.StructDefCompatibilityType.NO_SCHEMA_UPDATES.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, compatibilityType_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest other = (io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest) obj;

    if (hasStructDefId() != other.hasStructDefId()) return false;
    if (hasStructDefId()) {
      if (!getStructDefId()
          .equals(other.getStructDefId())) return false;
    }
    if (hasStructDef() != other.hasStructDef()) return false;
    if (hasStructDef()) {
      if (!getStructDef()
          .equals(other.getStructDef())) return false;
    }
    if (compatibilityType_ != other.compatibilityType_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStructDefId()) {
      hash = (37 * hash) + STRUCT_DEF_ID_FIELD_NUMBER;
      hash = (53 * hash) + getStructDefId().hashCode();
    }
    if (hasStructDef()) {
      hash = (37 * hash) + STRUCT_DEF_FIELD_NUMBER;
      hash = (53 * hash) + getStructDef().hashCode();
    }
    hash = (37 * hash) + COMPATIBILITY_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + compatibilityType_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Request to validate the evolution of an existing StructDef to a new StructDef
   * based on a compatibility type.
   * </pre>
   *
   * Protobuf type {@code littlehorse.ValidateStructDefEvolutionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.ValidateStructDefEvolutionRequest)
      io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_ValidateStructDefEvolutionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_ValidateStructDefEvolutionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.class, io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      structDefId_ = null;
      if (structDefIdBuilder_ != null) {
        structDefIdBuilder_.dispose();
        structDefIdBuilder_ = null;
      }
      structDef_ = null;
      if (structDefBuilder_ != null) {
        structDefBuilder_.dispose();
        structDefBuilder_ = null;
      }
      compatibilityType_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.Service.internal_static_littlehorse_ValidateStructDefEvolutionRequest_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest build() {
      io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest buildPartial() {
      io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest result = new io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.structDefId_ = structDefIdBuilder_ == null
            ? structDefId_
            : structDefIdBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.structDef_ = structDefBuilder_ == null
            ? structDef_
            : structDefBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.compatibilityType_ = compatibilityType_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest) {
        return mergeFrom((io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest other) {
      if (other == io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest.getDefaultInstance()) return this;
      if (other.hasStructDefId()) {
        mergeStructDefId(other.getStructDefId());
      }
      if (other.hasStructDef()) {
        mergeStructDef(other.getStructDef());
      }
      if (other.compatibilityType_ != 0) {
        setCompatibilityTypeValue(other.getCompatibilityTypeValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getStructDefIdFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getStructDefFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              compatibilityType_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.littlehorse.sdk.common.proto.StructDefId structDefId_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.StructDefId, io.littlehorse.sdk.common.proto.StructDefId.Builder, io.littlehorse.sdk.common.proto.StructDefIdOrBuilder> structDefIdBuilder_;
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     * @return Whether the structDefId field is set.
     */
    public boolean hasStructDefId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     * @return The structDefId.
     */
    public io.littlehorse.sdk.common.proto.StructDefId getStructDefId() {
      if (structDefIdBuilder_ == null) {
        return structDefId_ == null ? io.littlehorse.sdk.common.proto.StructDefId.getDefaultInstance() : structDefId_;
      } else {
        return structDefIdBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public Builder setStructDefId(io.littlehorse.sdk.common.proto.StructDefId value) {
      if (structDefIdBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        structDefId_ = value;
      } else {
        structDefIdBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public Builder setStructDefId(
        io.littlehorse.sdk.common.proto.StructDefId.Builder builderForValue) {
      if (structDefIdBuilder_ == null) {
        structDefId_ = builderForValue.build();
      } else {
        structDefIdBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public Builder mergeStructDefId(io.littlehorse.sdk.common.proto.StructDefId value) {
      if (structDefIdBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          structDefId_ != null &&
          structDefId_ != io.littlehorse.sdk.common.proto.StructDefId.getDefaultInstance()) {
          getStructDefIdBuilder().mergeFrom(value);
        } else {
          structDefId_ = value;
        }
      } else {
        structDefIdBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public Builder clearStructDefId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      structDefId_ = null;
      if (structDefIdBuilder_ != null) {
        structDefIdBuilder_.dispose();
        structDefIdBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.StructDefId.Builder getStructDefIdBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getStructDefIdFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    public io.littlehorse.sdk.common.proto.StructDefIdOrBuilder getStructDefIdOrBuilder() {
      if (structDefIdBuilder_ != null) {
        return structDefIdBuilder_.getMessageOrBuilder();
      } else {
        return structDefId_ == null ?
            io.littlehorse.sdk.common.proto.StructDefId.getDefaultInstance() : structDefId_;
      }
    }
    /**
     * <pre>
     * The ID of the StructDef you want to compare against that already exists on the server.
     * </pre>
     *
     * <code>.littlehorse.StructDefId struct_def_id = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.StructDefId, io.littlehorse.sdk.common.proto.StructDefId.Builder, io.littlehorse.sdk.common.proto.StructDefIdOrBuilder> 
        getStructDefIdFieldBuilder() {
      if (structDefIdBuilder_ == null) {
        structDefIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.StructDefId, io.littlehorse.sdk.common.proto.StructDefId.Builder, io.littlehorse.sdk.common.proto.StructDefIdOrBuilder>(
                getStructDefId(),
                getParentForChildren(),
                isClean());
        structDefId_ = null;
      }
      return structDefIdBuilder_;
    }

    private io.littlehorse.sdk.common.proto.InlineStructDef structDef_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.InlineStructDef, io.littlehorse.sdk.common.proto.InlineStructDef.Builder, io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder> structDefBuilder_;
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     * @return Whether the structDef field is set.
     */
    public boolean hasStructDef() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     * @return The structDef.
     */
    public io.littlehorse.sdk.common.proto.InlineStructDef getStructDef() {
      if (structDefBuilder_ == null) {
        return structDef_ == null ? io.littlehorse.sdk.common.proto.InlineStructDef.getDefaultInstance() : structDef_;
      } else {
        return structDefBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public Builder setStructDef(io.littlehorse.sdk.common.proto.InlineStructDef value) {
      if (structDefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        structDef_ = value;
      } else {
        structDefBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public Builder setStructDef(
        io.littlehorse.sdk.common.proto.InlineStructDef.Builder builderForValue) {
      if (structDefBuilder_ == null) {
        structDef_ = builderForValue.build();
      } else {
        structDefBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public Builder mergeStructDef(io.littlehorse.sdk.common.proto.InlineStructDef value) {
      if (structDefBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          structDef_ != null &&
          structDef_ != io.littlehorse.sdk.common.proto.InlineStructDef.getDefaultInstance()) {
          getStructDefBuilder().mergeFrom(value);
        } else {
          structDef_ = value;
        }
      } else {
        structDefBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public Builder clearStructDef() {
      bitField0_ = (bitField0_ & ~0x00000002);
      structDef_ = null;
      if (structDefBuilder_ != null) {
        structDefBuilder_.dispose();
        structDefBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public io.littlehorse.sdk.common.proto.InlineStructDef.Builder getStructDefBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getStructDefFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    public io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder getStructDefOrBuilder() {
      if (structDefBuilder_ != null) {
        return structDefBuilder_.getMessageOrBuilder();
      } else {
        return structDef_ == null ?
            io.littlehorse.sdk.common.proto.InlineStructDef.getDefaultInstance() : structDef_;
      }
    }
    /**
     * <pre>
     * The new StructDef schema.
     * </pre>
     *
     * <code>.littlehorse.InlineStructDef struct_def = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.InlineStructDef, io.littlehorse.sdk.common.proto.InlineStructDef.Builder, io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder> 
        getStructDefFieldBuilder() {
      if (structDefBuilder_ == null) {
        structDefBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.InlineStructDef, io.littlehorse.sdk.common.proto.InlineStructDef.Builder, io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder>(
                getStructDef(),
                getParentForChildren(),
                isClean());
        structDef_ = null;
      }
      return structDefBuilder_;
    }

    private int compatibilityType_ = 0;
    /**
     * <pre>
     * The server will validate the new StructDef schema against
     * the existing StructDef schema based on this compatibility type.
     * </pre>
     *
     * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
     * @return The enum numeric value on the wire for compatibilityType.
     */
    @java.lang.Override public int getCompatibilityTypeValue() {
      return compatibilityType_;
    }
    /**
     * <pre>
     * The server will validate the new StructDef schema against
     * the existing StructDef schema based on this compatibility type.
     * </pre>
     *
     * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
     * @param value The enum numeric value on the wire for compatibilityType to set.
     * @return This builder for chaining.
     */
    public Builder setCompatibilityTypeValue(int value) {
      compatibilityType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server will validate the new StructDef schema against
     * the existing StructDef schema based on this compatibility type.
     * </pre>
     *
     * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
     * @return The compatibilityType.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.StructDefCompatibilityType getCompatibilityType() {
      io.littlehorse.sdk.common.proto.StructDefCompatibilityType result = io.littlehorse.sdk.common.proto.StructDefCompatibilityType.forNumber(compatibilityType_);
      return result == null ? io.littlehorse.sdk.common.proto.StructDefCompatibilityType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The server will validate the new StructDef schema against
     * the existing StructDef schema based on this compatibility type.
     * </pre>
     *
     * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
     * @param value The compatibilityType to set.
     * @return This builder for chaining.
     */
    public Builder setCompatibilityType(io.littlehorse.sdk.common.proto.StructDefCompatibilityType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      compatibilityType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The server will validate the new StructDef schema against
     * the existing StructDef schema based on this compatibility type.
     * </pre>
     *
     * <code>.littlehorse.StructDefCompatibilityType compatibility_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCompatibilityType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      compatibilityType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.ValidateStructDefEvolutionRequest)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.ValidateStructDefEvolutionRequest)
  private static final io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest();
  }

  public static io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ValidateStructDefEvolutionRequest>
      PARSER = new com.google.protobuf.AbstractParser<ValidateStructDefEvolutionRequest>() {
    @java.lang.Override
    public ValidateStructDefEvolutionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ValidateStructDefEvolutionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ValidateStructDefEvolutionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ValidateStructDefEvolutionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

