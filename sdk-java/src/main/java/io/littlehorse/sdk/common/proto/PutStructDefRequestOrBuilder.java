// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package io.littlehorse.sdk.common.proto;

public interface PutStructDefRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.PutStructDefRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the StructDef.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * The name of the StructDef.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The descripton of the StructDef.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return Whether the description field is set.
   */
  boolean hasDescription();
  /**
   * <pre>
   * The descripton of the StructDef.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * The descripton of the StructDef.
   * </pre>
   *
   * <code>optional string description = 2;</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * The actual schema for the StructDef.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 3;</code>
   * @return Whether the structDef field is set.
   */
  boolean hasStructDef();
  /**
   * <pre>
   * The actual schema for the StructDef.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 3;</code>
   * @return The structDef.
   */
  io.littlehorse.sdk.common.proto.InlineStructDef getStructDef();
  /**
   * <pre>
   * The actual schema for the StructDef.
   * </pre>
   *
   * <code>.littlehorse.InlineStructDef struct_def = 3;</code>
   */
  io.littlehorse.sdk.common.proto.InlineStructDefOrBuilder getStructDefOrBuilder();

  /**
   * <pre>
   * If both of the following are true: &lt;br/&gt;
   * - A `StructDef` with the specified `name` already exists, AND &lt;br/&gt;
   * - The `InlineStructDef` is different &lt;br/&gt;
   *
   * Then the request will be accepted or rejected based on the value of the
   * allowed_update_types.
   * </pre>
   *
   * <code>.littlehorse.StructDefCompatibilityType allowed_updates = 4;</code>
   * @return The enum numeric value on the wire for allowedUpdates.
   */
  int getAllowedUpdatesValue();
  /**
   * <pre>
   * If both of the following are true: &lt;br/&gt;
   * - A `StructDef` with the specified `name` already exists, AND &lt;br/&gt;
   * - The `InlineStructDef` is different &lt;br/&gt;
   *
   * Then the request will be accepted or rejected based on the value of the
   * allowed_update_types.
   * </pre>
   *
   * <code>.littlehorse.StructDefCompatibilityType allowed_updates = 4;</code>
   * @return The allowedUpdates.
   */
  io.littlehorse.sdk.common.proto.StructDefCompatibilityType getAllowedUpdates();
}
