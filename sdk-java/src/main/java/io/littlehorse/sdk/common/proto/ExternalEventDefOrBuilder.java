// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external_event.proto

package io.littlehorse.sdk.common.proto;

public interface ExternalEventDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:littlehorse.ExternalEventDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The id of the ExternalEventDef.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventDefId id = 1;</code>
   * @return Whether the id field is set.
   */
  boolean hasId();
  /**
   * <pre>
   * The id of the ExternalEventDef.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventDefId id = 1;</code>
   * @return The id.
   */
  io.littlehorse.sdk.common.proto.ExternalEventDefId getId();
  /**
   * <pre>
   * The id of the ExternalEventDef.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventDefId id = 1;</code>
   */
  io.littlehorse.sdk.common.proto.ExternalEventDefIdOrBuilder getIdOrBuilder();

  /**
   * <pre>
   * When the ExternalEventDef was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_at = 2;</code>
   * @return Whether the createdAt field is set.
   */
  boolean hasCreatedAt();
  /**
   * <pre>
   * When the ExternalEventDef was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_at = 2;</code>
   * @return The createdAt.
   */
  com.google.protobuf.Timestamp getCreatedAt();
  /**
   * <pre>
   * When the ExternalEventDef was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp created_at = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreatedAtOrBuilder();

  /**
   * <pre>
   * The retention policy for ExternalEvent's of this ExternalEventDef. This applies to the
   * ExternalEvent **only before** it is matched with a WfRun.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventRetentionPolicy retention_policy = 3;</code>
   * @return Whether the retentionPolicy field is set.
   */
  boolean hasRetentionPolicy();
  /**
   * <pre>
   * The retention policy for ExternalEvent's of this ExternalEventDef. This applies to the
   * ExternalEvent **only before** it is matched with a WfRun.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventRetentionPolicy retention_policy = 3;</code>
   * @return The retentionPolicy.
   */
  io.littlehorse.sdk.common.proto.ExternalEventRetentionPolicy getRetentionPolicy();
  /**
   * <pre>
   * The retention policy for ExternalEvent's of this ExternalEventDef. This applies to the
   * ExternalEvent **only before** it is matched with a WfRun.
   * </pre>
   *
   * <code>.littlehorse.ExternalEventRetentionPolicy retention_policy = 3;</code>
   */
  io.littlehorse.sdk.common.proto.ExternalEventRetentionPolicyOrBuilder getRetentionPolicyOrBuilder();

  /**
   * <pre>
   * Schema that validates the content of any ExternalEvent's posted for this ExternalEventDef.
   *
   * It is _optional_ for compatibility purposes: ExternalEventDef's that were created
   * before 0.13.2 will not have a schema. For those `ExternalEventDef`s that do not have
   * a specified type_information, we do not validate the WfSpec's usage of the ExternalEvent
   * nor do we validate the type of `content` in the `rpc PutExternalEvent`.
   * </pre>
   *
   * <code>optional .littlehorse.ReturnType type_information = 4;</code>
   * @return Whether the typeInformation field is set.
   */
  boolean hasTypeInformation();
  /**
   * <pre>
   * Schema that validates the content of any ExternalEvent's posted for this ExternalEventDef.
   *
   * It is _optional_ for compatibility purposes: ExternalEventDef's that were created
   * before 0.13.2 will not have a schema. For those `ExternalEventDef`s that do not have
   * a specified type_information, we do not validate the WfSpec's usage of the ExternalEvent
   * nor do we validate the type of `content` in the `rpc PutExternalEvent`.
   * </pre>
   *
   * <code>optional .littlehorse.ReturnType type_information = 4;</code>
   * @return The typeInformation.
   */
  io.littlehorse.sdk.common.proto.ReturnType getTypeInformation();
  /**
   * <pre>
   * Schema that validates the content of any ExternalEvent's posted for this ExternalEventDef.
   *
   * It is _optional_ for compatibility purposes: ExternalEventDef's that were created
   * before 0.13.2 will not have a schema. For those `ExternalEventDef`s that do not have
   * a specified type_information, we do not validate the WfSpec's usage of the ExternalEvent
   * nor do we validate the type of `content` in the `rpc PutExternalEvent`.
   * </pre>
   *
   * <code>optional .littlehorse.ReturnType type_information = 4;</code>
   */
  io.littlehorse.sdk.common.proto.ReturnTypeOrBuilder getTypeInformationOrBuilder();

  /**
   * <pre>
   * If not set, then the users cannot use the `rpc PutCorrelatedEvent` to post externalEvents of this
   * type.
   * </pre>
   *
   * <code>optional .littlehorse.CorrelatedEventConfig correlated_event_config = 5;</code>
   * @return Whether the correlatedEventConfig field is set.
   */
  boolean hasCorrelatedEventConfig();
  /**
   * <pre>
   * If not set, then the users cannot use the `rpc PutCorrelatedEvent` to post externalEvents of this
   * type.
   * </pre>
   *
   * <code>optional .littlehorse.CorrelatedEventConfig correlated_event_config = 5;</code>
   * @return The correlatedEventConfig.
   */
  io.littlehorse.sdk.common.proto.CorrelatedEventConfig getCorrelatedEventConfig();
  /**
   * <pre>
   * If not set, then the users cannot use the `rpc PutCorrelatedEvent` to post externalEvents of this
   * type.
   * </pre>
   *
   * <code>optional .littlehorse.CorrelatedEventConfig correlated_event_config = 5;</code>
   */
  io.littlehorse.sdk.common.proto.CorrelatedEventConfigOrBuilder getCorrelatedEventConfigOrBuilder();
}
