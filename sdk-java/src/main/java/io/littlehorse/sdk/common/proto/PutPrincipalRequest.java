// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acls.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Creates or updates a Principal. If this request would remove admin privileges from the
 * last admin principal (i.e. `ALL_ACTIONS` over `ACL_ALL_RESOURCES` in the `global_acls`),
 * then the RPC throws `FAILED_PRECONDITION`.
 * </pre>
 *
 * Protobuf type {@code littlehorse.PutPrincipalRequest}
 */
public final class PutPrincipalRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.PutPrincipalRequest)
    PutPrincipalRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PutPrincipalRequest.newBuilder() to construct.
  private PutPrincipalRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PutPrincipalRequest() {
    id_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PutPrincipalRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetPerTenantAcls();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.PutPrincipalRequest.class, io.littlehorse.sdk.common.proto.PutPrincipalRequest.Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object id_ = "";
  /**
   * <pre>
   * The ID of the Principal that we are creating.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The ID of the Principal that we are creating.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PER_TENANT_ACLS_FIELD_NUMBER = 2;
  private static final class PerTenantAclsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>newDefaultInstance(
                io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_PerTenantAclsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> perTenantAcls_;
  private com.google.protobuf.MapField<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
  internalGetPerTenantAcls() {
    if (perTenantAcls_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          PerTenantAclsDefaultEntryHolder.defaultEntry);
    }
    return perTenantAcls_;
  }
  public int getPerTenantAclsCount() {
    return internalGetPerTenantAcls().getMap().size();
  }
  /**
   * <pre>
   * The per-tenant ACL's for the Principal
   * </pre>
   *
   * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
   */
  @java.lang.Override
  public boolean containsPerTenantAcls(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetPerTenantAcls().getMap().containsKey(key);
  }
  /**
   * Use {@link #getPerTenantAclsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> getPerTenantAcls() {
    return getPerTenantAclsMap();
  }
  /**
   * <pre>
   * The per-tenant ACL's for the Principal
   * </pre>
   *
   * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> getPerTenantAclsMap() {
    return internalGetPerTenantAcls().getMap();
  }
  /**
   * <pre>
   * The per-tenant ACL's for the Principal
   * </pre>
   *
   * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
   */
  @java.lang.Override
  public /* nullable */
io.littlehorse.sdk.common.proto.ServerACLs getPerTenantAclsOrDefault(
      java.lang.String key,
      /* nullable */
io.littlehorse.sdk.common.proto.ServerACLs defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> map =
        internalGetPerTenantAcls().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The per-tenant ACL's for the Principal
   * </pre>
   *
   * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ServerACLs getPerTenantAclsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> map =
        internalGetPerTenantAcls().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int GLOBAL_ACLS_FIELD_NUMBER = 3;
  private io.littlehorse.sdk.common.proto.ServerACLs globalAcls_;
  /**
   * <pre>
   * The ACL's for the principal in all tenants
   * </pre>
   *
   * <code>.littlehorse.ServerACLs global_acls = 3;</code>
   * @return Whether the globalAcls field is set.
   */
  @java.lang.Override
  public boolean hasGlobalAcls() {
    return globalAcls_ != null;
  }
  /**
   * <pre>
   * The ACL's for the principal in all tenants
   * </pre>
   *
   * <code>.littlehorse.ServerACLs global_acls = 3;</code>
   * @return The globalAcls.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ServerACLs getGlobalAcls() {
    return globalAcls_ == null ? io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance() : globalAcls_;
  }
  /**
   * <pre>
   * The ACL's for the principal in all tenants
   * </pre>
   *
   * <code>.littlehorse.ServerACLs global_acls = 3;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.ServerACLsOrBuilder getGlobalAclsOrBuilder() {
    return globalAcls_ == null ? io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance() : globalAcls_;
  }

  public static final int OVERWRITE_FIELD_NUMBER = 5;
  private boolean overwrite_ = false;
  /**
   * <pre>
   * If this is set to false and a `Principal` with the same `id` already exists *and*
   * has different ACL's configured, then the RPC throws `ALREADY_EXISTS`.
   *
   * If this is set to `true`, then the RPC will override hte 
   * </pre>
   *
   * <code>bool overwrite = 5;</code>
   * @return The overwrite.
   */
  @java.lang.Override
  public boolean getOverwrite() {
    return overwrite_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetPerTenantAcls(),
        PerTenantAclsDefaultEntryHolder.defaultEntry,
        2);
    if (globalAcls_ != null) {
      output.writeMessage(3, getGlobalAcls());
    }
    if (overwrite_ != false) {
      output.writeBool(5, overwrite_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    for (java.util.Map.Entry<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> entry
         : internalGetPerTenantAcls().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
      perTenantAcls__ = PerTenantAclsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, perTenantAcls__);
    }
    if (globalAcls_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getGlobalAcls());
    }
    if (overwrite_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, overwrite_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.PutPrincipalRequest)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.PutPrincipalRequest other = (io.littlehorse.sdk.common.proto.PutPrincipalRequest) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (!internalGetPerTenantAcls().equals(
        other.internalGetPerTenantAcls())) return false;
    if (hasGlobalAcls() != other.hasGlobalAcls()) return false;
    if (hasGlobalAcls()) {
      if (!getGlobalAcls()
          .equals(other.getGlobalAcls())) return false;
    }
    if (getOverwrite()
        != other.getOverwrite()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (!internalGetPerTenantAcls().getMap().isEmpty()) {
      hash = (37 * hash) + PER_TENANT_ACLS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetPerTenantAcls().hashCode();
    }
    if (hasGlobalAcls()) {
      hash = (37 * hash) + GLOBAL_ACLS_FIELD_NUMBER;
      hash = (53 * hash) + getGlobalAcls().hashCode();
    }
    hash = (37 * hash) + OVERWRITE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOverwrite());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.PutPrincipalRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Creates or updates a Principal. If this request would remove admin privileges from the
   * last admin principal (i.e. `ALL_ACTIONS` over `ACL_ALL_RESOURCES` in the `global_acls`),
   * then the RPC throws `FAILED_PRECONDITION`.
   * </pre>
   *
   * Protobuf type {@code littlehorse.PutPrincipalRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.PutPrincipalRequest)
      io.littlehorse.sdk.common.proto.PutPrincipalRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetPerTenantAcls();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutablePerTenantAcls();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.PutPrincipalRequest.class, io.littlehorse.sdk.common.proto.PutPrincipalRequest.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.PutPrincipalRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      internalGetMutablePerTenantAcls().clear();
      globalAcls_ = null;
      if (globalAclsBuilder_ != null) {
        globalAclsBuilder_.dispose();
        globalAclsBuilder_ = null;
      }
      overwrite_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.Acls.internal_static_littlehorse_PutPrincipalRequest_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutPrincipalRequest getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.PutPrincipalRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutPrincipalRequest build() {
      io.littlehorse.sdk.common.proto.PutPrincipalRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.PutPrincipalRequest buildPartial() {
      io.littlehorse.sdk.common.proto.PutPrincipalRequest result = new io.littlehorse.sdk.common.proto.PutPrincipalRequest(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.PutPrincipalRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.perTenantAcls_ = internalGetPerTenantAcls();
        result.perTenantAcls_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.globalAcls_ = globalAclsBuilder_ == null
            ? globalAcls_
            : globalAclsBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.overwrite_ = overwrite_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.PutPrincipalRequest) {
        return mergeFrom((io.littlehorse.sdk.common.proto.PutPrincipalRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.PutPrincipalRequest other) {
      if (other == io.littlehorse.sdk.common.proto.PutPrincipalRequest.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      internalGetMutablePerTenantAcls().mergeFrom(
          other.internalGetPerTenantAcls());
      bitField0_ |= 0x00000002;
      if (other.hasGlobalAcls()) {
        mergeGlobalAcls(other.getGlobalAcls());
      }
      if (other.getOverwrite() != false) {
        setOverwrite(other.getOverwrite());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              com.google.protobuf.MapEntry<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
              perTenantAcls__ = input.readMessage(
                  PerTenantAclsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutablePerTenantAcls().getMutableMap().put(
                  perTenantAcls__.getKey(), perTenantAcls__.getValue());
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getGlobalAclsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 40: {
              overwrite_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * The ID of the Principal that we are creating.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The ID of the Principal that we are creating.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The ID of the Principal that we are creating.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the Principal that we are creating.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ID of the Principal that we are creating.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> perTenantAcls_;
    private com.google.protobuf.MapField<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
        internalGetPerTenantAcls() {
      if (perTenantAcls_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PerTenantAclsDefaultEntryHolder.defaultEntry);
      }
      return perTenantAcls_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
        internalGetMutablePerTenantAcls() {
      if (perTenantAcls_ == null) {
        perTenantAcls_ = com.google.protobuf.MapField.newMapField(
            PerTenantAclsDefaultEntryHolder.defaultEntry);
      }
      if (!perTenantAcls_.isMutable()) {
        perTenantAcls_ = perTenantAcls_.copy();
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return perTenantAcls_;
    }
    public int getPerTenantAclsCount() {
      return internalGetPerTenantAcls().getMap().size();
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    @java.lang.Override
    public boolean containsPerTenantAcls(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPerTenantAcls().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPerTenantAclsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> getPerTenantAcls() {
      return getPerTenantAclsMap();
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> getPerTenantAclsMap() {
      return internalGetPerTenantAcls().getMap();
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
io.littlehorse.sdk.common.proto.ServerACLs getPerTenantAclsOrDefault(
        java.lang.String key,
        /* nullable */
io.littlehorse.sdk.common.proto.ServerACLs defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> map =
          internalGetPerTenantAcls().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.ServerACLs getPerTenantAclsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> map =
          internalGetPerTenantAcls().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearPerTenantAcls() {
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutablePerTenantAcls().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    public Builder removePerTenantAcls(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutablePerTenantAcls().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs>
        getMutablePerTenantAcls() {
      bitField0_ |= 0x00000002;
      return internalGetMutablePerTenantAcls().getMutableMap();
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    public Builder putPerTenantAcls(
        java.lang.String key,
        io.littlehorse.sdk.common.proto.ServerACLs value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutablePerTenantAcls().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <pre>
     * The per-tenant ACL's for the Principal
     * </pre>
     *
     * <code>map&lt;string, .littlehorse.ServerACLs&gt; per_tenant_acls = 2;</code>
     */
    public Builder putAllPerTenantAcls(
        java.util.Map<java.lang.String, io.littlehorse.sdk.common.proto.ServerACLs> values) {
      internalGetMutablePerTenantAcls().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000002;
      return this;
    }

    private io.littlehorse.sdk.common.proto.ServerACLs globalAcls_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.ServerACLs, io.littlehorse.sdk.common.proto.ServerACLs.Builder, io.littlehorse.sdk.common.proto.ServerACLsOrBuilder> globalAclsBuilder_;
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     * @return Whether the globalAcls field is set.
     */
    public boolean hasGlobalAcls() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     * @return The globalAcls.
     */
    public io.littlehorse.sdk.common.proto.ServerACLs getGlobalAcls() {
      if (globalAclsBuilder_ == null) {
        return globalAcls_ == null ? io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance() : globalAcls_;
      } else {
        return globalAclsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public Builder setGlobalAcls(io.littlehorse.sdk.common.proto.ServerACLs value) {
      if (globalAclsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        globalAcls_ = value;
      } else {
        globalAclsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public Builder setGlobalAcls(
        io.littlehorse.sdk.common.proto.ServerACLs.Builder builderForValue) {
      if (globalAclsBuilder_ == null) {
        globalAcls_ = builderForValue.build();
      } else {
        globalAclsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public Builder mergeGlobalAcls(io.littlehorse.sdk.common.proto.ServerACLs value) {
      if (globalAclsBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          globalAcls_ != null &&
          globalAcls_ != io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance()) {
          getGlobalAclsBuilder().mergeFrom(value);
        } else {
          globalAcls_ = value;
        }
      } else {
        globalAclsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public Builder clearGlobalAcls() {
      bitField0_ = (bitField0_ & ~0x00000004);
      globalAcls_ = null;
      if (globalAclsBuilder_ != null) {
        globalAclsBuilder_.dispose();
        globalAclsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.ServerACLs.Builder getGlobalAclsBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getGlobalAclsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.ServerACLsOrBuilder getGlobalAclsOrBuilder() {
      if (globalAclsBuilder_ != null) {
        return globalAclsBuilder_.getMessageOrBuilder();
      } else {
        return globalAcls_ == null ?
            io.littlehorse.sdk.common.proto.ServerACLs.getDefaultInstance() : globalAcls_;
      }
    }
    /**
     * <pre>
     * The ACL's for the principal in all tenants
     * </pre>
     *
     * <code>.littlehorse.ServerACLs global_acls = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.ServerACLs, io.littlehorse.sdk.common.proto.ServerACLs.Builder, io.littlehorse.sdk.common.proto.ServerACLsOrBuilder> 
        getGlobalAclsFieldBuilder() {
      if (globalAclsBuilder_ == null) {
        globalAclsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.ServerACLs, io.littlehorse.sdk.common.proto.ServerACLs.Builder, io.littlehorse.sdk.common.proto.ServerACLsOrBuilder>(
                getGlobalAcls(),
                getParentForChildren(),
                isClean());
        globalAcls_ = null;
      }
      return globalAclsBuilder_;
    }

    private boolean overwrite_ ;
    /**
     * <pre>
     * If this is set to false and a `Principal` with the same `id` already exists *and*
     * has different ACL's configured, then the RPC throws `ALREADY_EXISTS`.
     *
     * If this is set to `true`, then the RPC will override hte 
     * </pre>
     *
     * <code>bool overwrite = 5;</code>
     * @return The overwrite.
     */
    @java.lang.Override
    public boolean getOverwrite() {
      return overwrite_;
    }
    /**
     * <pre>
     * If this is set to false and a `Principal` with the same `id` already exists *and*
     * has different ACL's configured, then the RPC throws `ALREADY_EXISTS`.
     *
     * If this is set to `true`, then the RPC will override hte 
     * </pre>
     *
     * <code>bool overwrite = 5;</code>
     * @param value The overwrite to set.
     * @return This builder for chaining.
     */
    public Builder setOverwrite(boolean value) {

      overwrite_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If this is set to false and a `Principal` with the same `id` already exists *and*
     * has different ACL's configured, then the RPC throws `ALREADY_EXISTS`.
     *
     * If this is set to `true`, then the RPC will override hte 
     * </pre>
     *
     * <code>bool overwrite = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOverwrite() {
      bitField0_ = (bitField0_ & ~0x00000008);
      overwrite_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.PutPrincipalRequest)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.PutPrincipalRequest)
  private static final io.littlehorse.sdk.common.proto.PutPrincipalRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.PutPrincipalRequest();
  }

  public static io.littlehorse.sdk.common.proto.PutPrincipalRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PutPrincipalRequest>
      PARSER = new com.google.protobuf.AbstractParser<PutPrincipalRequest>() {
    @java.lang.Override
    public PutPrincipalRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<PutPrincipalRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PutPrincipalRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.PutPrincipalRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

