// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common_wfspec.proto

package io.littlehorse.sdk.common.proto;

/**
 * <pre>
 * Declares a Variable; used in a ThreadSpec and a TaskDef.
 * </pre>
 *
 * Protobuf type {@code littlehorse.VariableDef}
 */
public final class VariableDef extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:littlehorse.VariableDef)
    VariableDefOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VariableDef.newBuilder() to construct.
  private VariableDef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VariableDef() {
    deprecatedType_ = 0;
    name_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VariableDef();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_VariableDef_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_VariableDef_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.littlehorse.sdk.common.proto.VariableDef.class, io.littlehorse.sdk.common.proto.VariableDef.Builder.class);
  }

  private int bitField0_;
  public static final int DEPRECATED_TYPE_FIELD_NUMBER = 1;
  private int deprecatedType_ = 0;
  /**
   * <pre>
   * DEPRECATED: The Type of the variable.
   *
   * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
   * We retain this field for compatibility purposes but clients should not use
   * it going forward. To be removed in the first 2026 release.
   * </pre>
   *
   * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
   * @return Whether the deprecatedType field is set.
   */
  @java.lang.Override public boolean hasDeprecatedType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * DEPRECATED: The Type of the variable.
   *
   * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
   * We retain this field for compatibility purposes but clients should not use
   * it going forward. To be removed in the first 2026 release.
   * </pre>
   *
   * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
   * @return The enum numeric value on the wire for deprecatedType.
   */
  @java.lang.Override public int getDeprecatedTypeValue() {
    return deprecatedType_;
  }
  /**
   * <pre>
   * DEPRECATED: The Type of the variable.
   *
   * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
   * We retain this field for compatibility purposes but clients should not use
   * it going forward. To be removed in the first 2026 release.
   * </pre>
   *
   * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
   * @return The deprecatedType.
   */
  @java.lang.Override public io.littlehorse.sdk.common.proto.VariableType getDeprecatedType() {
    io.littlehorse.sdk.common.proto.VariableType result = io.littlehorse.sdk.common.proto.VariableType.forNumber(deprecatedType_);
    return result == null ? io.littlehorse.sdk.common.proto.VariableType.UNRECOGNIZED : result;
  }

  public static final int NAME_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * The name of the variable.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The name of the variable.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEFAULT_VALUE_FIELD_NUMBER = 3;
  private io.littlehorse.sdk.common.proto.VariableValue defaultValue_;
  /**
   * <pre>
   * Optional default value if the variable isn't set; for example, in a ThreadRun
   * if you start a ThreadRun or WfRun without passing a variable in, then this is
   * used.
   * </pre>
   *
   * <code>optional .littlehorse.VariableValue default_value = 3;</code>
   * @return Whether the defaultValue field is set.
   */
  @java.lang.Override
  public boolean hasDefaultValue() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Optional default value if the variable isn't set; for example, in a ThreadRun
   * if you start a ThreadRun or WfRun without passing a variable in, then this is
   * used.
   * </pre>
   *
   * <code>optional .littlehorse.VariableValue default_value = 3;</code>
   * @return The defaultValue.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableValue getDefaultValue() {
    return defaultValue_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : defaultValue_;
  }
  /**
   * <pre>
   * Optional default value if the variable isn't set; for example, in a ThreadRun
   * if you start a ThreadRun or WfRun without passing a variable in, then this is
   * used.
   * </pre>
   *
   * <code>optional .littlehorse.VariableValue default_value = 3;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableValueOrBuilder getDefaultValueOrBuilder() {
    return defaultValue_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : defaultValue_;
  }

  public static final int DEPRECATED_MASKED_VALUE_FIELD_NUMBER = 4;
  private boolean deprecatedMaskedValue_ = false;
  /**
   * <pre>
   * DEPRECATED: If true, the variable value will show as a masked string.
   *
   * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
   * We retain this field for compatibility purposes but clients should not use
   * it going forward. To be removed in the first 2026 release.
   * </pre>
   *
   * <code>optional bool deprecated_masked_value = 4;</code>
   * @return Whether the deprecatedMaskedValue field is set.
   */
  @java.lang.Override
  public boolean hasDeprecatedMaskedValue() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * DEPRECATED: If true, the variable value will show as a masked string.
   *
   * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
   * We retain this field for compatibility purposes but clients should not use
   * it going forward. To be removed in the first 2026 release.
   * </pre>
   *
   * <code>optional bool deprecated_masked_value = 4;</code>
   * @return The deprecatedMaskedValue.
   */
  @java.lang.Override
  public boolean getDeprecatedMaskedValue() {
    return deprecatedMaskedValue_;
  }

  public static final int TYPE_FIELD_NUMBER = 5;
  private io.littlehorse.sdk.common.proto.TypeDefinition type_;
  /**
   * <pre>
   * Type Information for this variable.
   *
   * This is the default as of 0.13.2 and will become the only supported way after 
   * the first 2026 release (no longer `optional`).
   * </pre>
   *
   * <code>optional .littlehorse.TypeDefinition type = 5;</code>
   * @return Whether the type field is set.
   */
  @java.lang.Override
  public boolean hasType() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Type Information for this variable.
   *
   * This is the default as of 0.13.2 and will become the only supported way after 
   * the first 2026 release (no longer `optional`).
   * </pre>
   *
   * <code>optional .littlehorse.TypeDefinition type = 5;</code>
   * @return The type.
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TypeDefinition getType() {
    return type_ == null ? io.littlehorse.sdk.common.proto.TypeDefinition.getDefaultInstance() : type_;
  }
  /**
   * <pre>
   * Type Information for this variable.
   *
   * This is the default as of 0.13.2 and will become the only supported way after 
   * the first 2026 release (no longer `optional`).
   * </pre>
   *
   * <code>optional .littlehorse.TypeDefinition type = 5;</code>
   */
  @java.lang.Override
  public io.littlehorse.sdk.common.proto.TypeDefinitionOrBuilder getTypeOrBuilder() {
    return type_ == null ? io.littlehorse.sdk.common.proto.TypeDefinition.getDefaultInstance() : type_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, deprecatedType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getDefaultValue());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeBool(4, deprecatedMaskedValue_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(5, getType());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, deprecatedType_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDefaultValue());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, deprecatedMaskedValue_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getType());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.littlehorse.sdk.common.proto.VariableDef)) {
      return super.equals(obj);
    }
    io.littlehorse.sdk.common.proto.VariableDef other = (io.littlehorse.sdk.common.proto.VariableDef) obj;

    if (hasDeprecatedType() != other.hasDeprecatedType()) return false;
    if (hasDeprecatedType()) {
      if (deprecatedType_ != other.deprecatedType_) return false;
    }
    if (!getName()
        .equals(other.getName())) return false;
    if (hasDefaultValue() != other.hasDefaultValue()) return false;
    if (hasDefaultValue()) {
      if (!getDefaultValue()
          .equals(other.getDefaultValue())) return false;
    }
    if (hasDeprecatedMaskedValue() != other.hasDeprecatedMaskedValue()) return false;
    if (hasDeprecatedMaskedValue()) {
      if (getDeprecatedMaskedValue()
          != other.getDeprecatedMaskedValue()) return false;
    }
    if (hasType() != other.hasType()) return false;
    if (hasType()) {
      if (!getType()
          .equals(other.getType())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDeprecatedType()) {
      hash = (37 * hash) + DEPRECATED_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + deprecatedType_;
    }
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasDefaultValue()) {
      hash = (37 * hash) + DEFAULT_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultValue().hashCode();
    }
    if (hasDeprecatedMaskedValue()) {
      hash = (37 * hash) + DEPRECATED_MASKED_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDeprecatedMaskedValue());
    }
    if (hasType()) {
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.littlehorse.sdk.common.proto.VariableDef parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.littlehorse.sdk.common.proto.VariableDef parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.littlehorse.sdk.common.proto.VariableDef parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.littlehorse.sdk.common.proto.VariableDef prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Declares a Variable; used in a ThreadSpec and a TaskDef.
   * </pre>
   *
   * Protobuf type {@code littlehorse.VariableDef}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:littlehorse.VariableDef)
      io.littlehorse.sdk.common.proto.VariableDefOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_VariableDef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_VariableDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.littlehorse.sdk.common.proto.VariableDef.class, io.littlehorse.sdk.common.proto.VariableDef.Builder.class);
    }

    // Construct using io.littlehorse.sdk.common.proto.VariableDef.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDefaultValueFieldBuilder();
        getTypeFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      deprecatedType_ = 0;
      name_ = "";
      defaultValue_ = null;
      if (defaultValueBuilder_ != null) {
        defaultValueBuilder_.dispose();
        defaultValueBuilder_ = null;
      }
      deprecatedMaskedValue_ = false;
      type_ = null;
      if (typeBuilder_ != null) {
        typeBuilder_.dispose();
        typeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.littlehorse.sdk.common.proto.CommonWfspec.internal_static_littlehorse_VariableDef_descriptor;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableDef getDefaultInstanceForType() {
      return io.littlehorse.sdk.common.proto.VariableDef.getDefaultInstance();
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableDef build() {
      io.littlehorse.sdk.common.proto.VariableDef result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableDef buildPartial() {
      io.littlehorse.sdk.common.proto.VariableDef result = new io.littlehorse.sdk.common.proto.VariableDef(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(io.littlehorse.sdk.common.proto.VariableDef result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.deprecatedType_ = deprecatedType_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.defaultValue_ = defaultValueBuilder_ == null
            ? defaultValue_
            : defaultValueBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.deprecatedMaskedValue_ = deprecatedMaskedValue_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.type_ = typeBuilder_ == null
            ? type_
            : typeBuilder_.build();
        to_bitField0_ |= 0x00000008;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.littlehorse.sdk.common.proto.VariableDef) {
        return mergeFrom((io.littlehorse.sdk.common.proto.VariableDef)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.littlehorse.sdk.common.proto.VariableDef other) {
      if (other == io.littlehorse.sdk.common.proto.VariableDef.getDefaultInstance()) return this;
      if (other.hasDeprecatedType()) {
        setDeprecatedType(other.getDeprecatedType());
      }
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasDefaultValue()) {
        mergeDefaultValue(other.getDefaultValue());
      }
      if (other.hasDeprecatedMaskedValue()) {
        setDeprecatedMaskedValue(other.getDeprecatedMaskedValue());
      }
      if (other.hasType()) {
        mergeType(other.getType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              deprecatedType_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDefaultValueFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              deprecatedMaskedValue_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              input.readMessage(
                  getTypeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int deprecatedType_ = 0;
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @return Whether the deprecatedType field is set.
     */
    @java.lang.Override public boolean hasDeprecatedType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @return The enum numeric value on the wire for deprecatedType.
     */
    @java.lang.Override public int getDeprecatedTypeValue() {
      return deprecatedType_;
    }
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @param value The enum numeric value on the wire for deprecatedType to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedTypeValue(int value) {
      deprecatedType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @return The deprecatedType.
     */
    @java.lang.Override
    public io.littlehorse.sdk.common.proto.VariableType getDeprecatedType() {
      io.littlehorse.sdk.common.proto.VariableType result = io.littlehorse.sdk.common.proto.VariableType.forNumber(deprecatedType_);
      return result == null ? io.littlehorse.sdk.common.proto.VariableType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @param value The deprecatedType to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedType(io.littlehorse.sdk.common.proto.VariableType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      deprecatedType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED: The Type of the variable.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional .littlehorse.VariableType deprecated_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecatedType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      deprecatedType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * The name of the variable.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The name of the variable.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The name of the variable.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the variable.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The name of the variable.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private io.littlehorse.sdk.common.proto.VariableValue defaultValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder> defaultValueBuilder_;
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     * @return Whether the defaultValue field is set.
     */
    public boolean hasDefaultValue() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     * @return The defaultValue.
     */
    public io.littlehorse.sdk.common.proto.VariableValue getDefaultValue() {
      if (defaultValueBuilder_ == null) {
        return defaultValue_ == null ? io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : defaultValue_;
      } else {
        return defaultValueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public Builder setDefaultValue(io.littlehorse.sdk.common.proto.VariableValue value) {
      if (defaultValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultValue_ = value;
      } else {
        defaultValueBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public Builder setDefaultValue(
        io.littlehorse.sdk.common.proto.VariableValue.Builder builderForValue) {
      if (defaultValueBuilder_ == null) {
        defaultValue_ = builderForValue.build();
      } else {
        defaultValueBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public Builder mergeDefaultValue(io.littlehorse.sdk.common.proto.VariableValue value) {
      if (defaultValueBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          defaultValue_ != null &&
          defaultValue_ != io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance()) {
          getDefaultValueBuilder().mergeFrom(value);
        } else {
          defaultValue_ = value;
        }
      } else {
        defaultValueBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public Builder clearDefaultValue() {
      bitField0_ = (bitField0_ & ~0x00000004);
      defaultValue_ = null;
      if (defaultValueBuilder_ != null) {
        defaultValueBuilder_.dispose();
        defaultValueBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableValue.Builder getDefaultValueBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDefaultValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    public io.littlehorse.sdk.common.proto.VariableValueOrBuilder getDefaultValueOrBuilder() {
      if (defaultValueBuilder_ != null) {
        return defaultValueBuilder_.getMessageOrBuilder();
      } else {
        return defaultValue_ == null ?
            io.littlehorse.sdk.common.proto.VariableValue.getDefaultInstance() : defaultValue_;
      }
    }
    /**
     * <pre>
     * Optional default value if the variable isn't set; for example, in a ThreadRun
     * if you start a ThreadRun or WfRun without passing a variable in, then this is
     * used.
     * </pre>
     *
     * <code>optional .littlehorse.VariableValue default_value = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder> 
        getDefaultValueFieldBuilder() {
      if (defaultValueBuilder_ == null) {
        defaultValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.VariableValue, io.littlehorse.sdk.common.proto.VariableValue.Builder, io.littlehorse.sdk.common.proto.VariableValueOrBuilder>(
                getDefaultValue(),
                getParentForChildren(),
                isClean());
        defaultValue_ = null;
      }
      return defaultValueBuilder_;
    }

    private boolean deprecatedMaskedValue_ ;
    /**
     * <pre>
     * DEPRECATED: If true, the variable value will show as a masked string.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional bool deprecated_masked_value = 4;</code>
     * @return Whether the deprecatedMaskedValue field is set.
     */
    @java.lang.Override
    public boolean hasDeprecatedMaskedValue() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * DEPRECATED: If true, the variable value will show as a masked string.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional bool deprecated_masked_value = 4;</code>
     * @return The deprecatedMaskedValue.
     */
    @java.lang.Override
    public boolean getDeprecatedMaskedValue() {
      return deprecatedMaskedValue_;
    }
    /**
     * <pre>
     * DEPRECATED: If true, the variable value will show as a masked string.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional bool deprecated_masked_value = 4;</code>
     * @param value The deprecatedMaskedValue to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedMaskedValue(boolean value) {

      deprecatedMaskedValue_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * DEPRECATED: If true, the variable value will show as a masked string.
     *
     * After 0.13.2, this has been replaced by the nested `TypeDefinition` field.
     * We retain this field for compatibility purposes but clients should not use
     * it going forward. To be removed in the first 2026 release.
     * </pre>
     *
     * <code>optional bool deprecated_masked_value = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecatedMaskedValue() {
      bitField0_ = (bitField0_ & ~0x00000008);
      deprecatedMaskedValue_ = false;
      onChanged();
      return this;
    }

    private io.littlehorse.sdk.common.proto.TypeDefinition type_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.TypeDefinition, io.littlehorse.sdk.common.proto.TypeDefinition.Builder, io.littlehorse.sdk.common.proto.TypeDefinitionOrBuilder> typeBuilder_;
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     * @return Whether the type field is set.
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     * @return The type.
     */
    public io.littlehorse.sdk.common.proto.TypeDefinition getType() {
      if (typeBuilder_ == null) {
        return type_ == null ? io.littlehorse.sdk.common.proto.TypeDefinition.getDefaultInstance() : type_;
      } else {
        return typeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public Builder setType(io.littlehorse.sdk.common.proto.TypeDefinition value) {
      if (typeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        type_ = value;
      } else {
        typeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public Builder setType(
        io.littlehorse.sdk.common.proto.TypeDefinition.Builder builderForValue) {
      if (typeBuilder_ == null) {
        type_ = builderForValue.build();
      } else {
        typeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public Builder mergeType(io.littlehorse.sdk.common.proto.TypeDefinition value) {
      if (typeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          type_ != null &&
          type_ != io.littlehorse.sdk.common.proto.TypeDefinition.getDefaultInstance()) {
          getTypeBuilder().mergeFrom(value);
        } else {
          type_ = value;
        }
      } else {
        typeBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000010);
      type_ = null;
      if (typeBuilder_ != null) {
        typeBuilder_.dispose();
        typeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public io.littlehorse.sdk.common.proto.TypeDefinition.Builder getTypeBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    public io.littlehorse.sdk.common.proto.TypeDefinitionOrBuilder getTypeOrBuilder() {
      if (typeBuilder_ != null) {
        return typeBuilder_.getMessageOrBuilder();
      } else {
        return type_ == null ?
            io.littlehorse.sdk.common.proto.TypeDefinition.getDefaultInstance() : type_;
      }
    }
    /**
     * <pre>
     * Type Information for this variable.
     *
     * This is the default as of 0.13.2 and will become the only supported way after 
     * the first 2026 release (no longer `optional`).
     * </pre>
     *
     * <code>optional .littlehorse.TypeDefinition type = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.littlehorse.sdk.common.proto.TypeDefinition, io.littlehorse.sdk.common.proto.TypeDefinition.Builder, io.littlehorse.sdk.common.proto.TypeDefinitionOrBuilder> 
        getTypeFieldBuilder() {
      if (typeBuilder_ == null) {
        typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.littlehorse.sdk.common.proto.TypeDefinition, io.littlehorse.sdk.common.proto.TypeDefinition.Builder, io.littlehorse.sdk.common.proto.TypeDefinitionOrBuilder>(
                getType(),
                getParentForChildren(),
                isClean());
        type_ = null;
      }
      return typeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:littlehorse.VariableDef)
  }

  // @@protoc_insertion_point(class_scope:littlehorse.VariableDef)
  private static final io.littlehorse.sdk.common.proto.VariableDef DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.littlehorse.sdk.common.proto.VariableDef();
  }

  public static io.littlehorse.sdk.common.proto.VariableDef getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VariableDef>
      PARSER = new com.google.protobuf.AbstractParser<VariableDef>() {
    @java.lang.Override
    public VariableDef parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<VariableDef> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VariableDef> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.littlehorse.sdk.common.proto.VariableDef getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

