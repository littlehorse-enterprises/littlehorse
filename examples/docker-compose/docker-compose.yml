services:
  kafka:
    container_name: lh-kafka
    image: bitnami/kafka:3.5
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_LISTENERS: CONTROLLER://:29092,EXTERNAL://:19092,INTERNAL://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: EXTERNAL://localhost:19092,INTERNAL://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_BROKER_ID: "1"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:29092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      BITNAMI_DEBUG: "true"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
    restart: on-failure
    healthcheck:
      test: kafka-topics.sh --bootstrap-server kafka:9092 --list > /dev/null 2>&1
      interval: 5s
  littlehorse:
    container_name: lh-server
    image: ghcr.io/littlehorse-enterprises/littlehorse/lh-server:master
    environment:
      LHS_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      LHS_SHOULD_CREATE_TOPICS: "true"
      LHS_HEALTH_SERVICE_PORT: "1822"
    restart: on-failure
    healthcheck:
      test: curl -f localhost:1822/liveness
      interval: 5s
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "2023:2023"
  dashboard:
    container_name: lh-dashboard
    image: ghcr.io/littlehorse-enterprises/littlehorse/lh-dashboard:master
    environment:
      LHD_API_HOST: littlehorse
      LHD_API_PORT: 2023
      LHD_OAUTH_ENABLED: false
    restart: on-failure
    healthcheck:
      test: curl -f localhost:8080
      interval: 5s
    ports:
      - "8080:8080"
